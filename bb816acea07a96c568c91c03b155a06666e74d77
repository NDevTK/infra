{
  "comments": [
    {
      "key": {
        "uuid": "f84ce8ce_dbda08c2",
        "filename": "infra/tools/dockerbuild/cipd.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-14T17:30:15Z",
      "side": 1,
      "message": "I\u0027m not sure coupling it to the dev server makes sense; This is usually for testing new versions of cipd itself.\n\nWhat about a --test-mode flag which prepends `experimental/$USER/` to all the cipd package names?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "bb816acea07a96c568c91c03b155a06666e74d77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dd43d6c_27aea51c",
        "filename": "infra/tools/dockerbuild/cipd.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-08-14T18:00:48Z",
      "side": 1,
      "message": "i thought the purpose of the dev server was so you didn\u0027t have to worry about blowing things up ... i.e. it\u0027s for testing users of cipd too\n\ni think it still makes sense to stick to the dev server, but if you prefer experimental/$USER/, i can do that",
      "parentUuid": "f84ce8ce_dbda08c2",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "bb816acea07a96c568c91c03b155a06666e74d77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7816a6c3_2ced1cf7",
        "filename": "infra/tools/dockerbuild/cipd.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-14T18:10:23Z",
      "side": 1,
      "message": "It really depends on the use case; if you use experimental on the prod server, it will use all the production ACL groups on chrome-infra-auth. Presumably if you\u0027re uploading these, you also intend for something else to download them (probably vpython?) which will need to support the dev server (I\u0027m not actually sure if it does), and you\u0027ll need to adjust the dev server acls to be compatible with wherever they\u0027re downloaded.\n\nThis means that if you want to use it in e.g. a `led` task, you\u0027ll probably have to re-target it at the dev version of swarming as well, which has substantially fewer machines and is public.\n\nIf you use experimental on chrome-infra-packages you can trivially ACL other people or bots to have access to it.",
      "parentUuid": "3dd43d6c_27aea51c",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "bb816acea07a96c568c91c03b155a06666e74d77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73bf4d9a_d08294b4",
        "filename": "infra/tools/dockerbuild/cipd.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-08-15T20:42:15Z",
      "side": 1,
      "message": "i don\u0027t think vpython supports pulling from a diff server.  cipd does which is largely what i\u0027ve been using.  my goal was more for immediate testing: build the wheels \u0026 upload the results \u0026 check the tags/refs/etc... via cipd or via the web interface.  running it through vpython later would be useful, but for developing the dockerbuild code, it\u0027s mostly an unnecessary layer.\n\nthat said, --test-mode and --server settings can be implemented independently.",
      "parentUuid": "7816a6c3_2ced1cf7",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "bb816acea07a96c568c91c03b155a06666e74d77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c602234_d485f782",
        "filename": "infra/tools/dockerbuild/cipd.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-15T20:49:27Z",
      "side": 1,
      "message": "For local testing you could just look at the cipd packages that get dumped in the .dockerbuild folder",
      "parentUuid": "73bf4d9a_d08294b4",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "bb816acea07a96c568c91c03b155a06666e74d77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6256d055_15154a01",
        "filename": "infra/tools/dockerbuild/cipd.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-08-15T21:14:18Z",
      "side": 1,
      "message": "that doesn\u0027t help me when i need to verify the tags/refs with cipd :)\n\nbut maybe i can change the behavior when --upload isn\u0027t used to dump the command it would have run.  currently it just logs \"Refraining from uploading package\" and skips everything else.",
      "parentUuid": "8c602234_d485f782",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "bb816acea07a96c568c91c03b155a06666e74d77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d0d35e2_97bb34b0",
        "filename": "infra/tools/dockerbuild/cipd.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-15T22:13:32Z",
      "side": 1,
      "message": "That seems reasonable",
      "parentUuid": "6256d055_15154a01",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "bb816acea07a96c568c91c03b155a06666e74d77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}