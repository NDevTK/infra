{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a290f1e7_5764db5a",
        "filename": "go/src/infra/cros/recovery/internal/execs/rpm/rpm_execs.go",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1393275
      },
      "writtenOn": "2022-11-22T23:17:58Z",
      "side": 1,
      "message": "I think device_type is not workiing i this case and maybe we need think about host. example:\n- host:dut\n- host:chameleon\n- host:btpeer\n\nif so then DUT can be default.",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "49f9936f05282597142777e73bd1e227809f513c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34e2a60e_d3e61d59",
        "filename": "go/src/infra/cros/recovery/internal/execs/rpm/rpm_execs.go",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1527672
      },
      "writtenOn": "2022-11-23T21:02:08Z",
      "side": 1,
      "message": "Is there a documentation/convention on which key word(device_type, host or ...) to use? The \"device_type\" or \"host\" here is to help PARIS understand which RPMOUT to obtain. I feel explicitly stating the \"type\" makes it a lot clearer to read/follow.",
      "parentUuid": "a290f1e7_5764db5a",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "49f9936f05282597142777e73bd1e227809f513c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f9cc070_725a366d",
        "filename": "go/src/infra/cros/recovery/internal/execs/rpm/rpm_execs.go",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1393275
      },
      "writtenOn": "2022-11-23T21:53:38Z",
      "side": 1,
      "message": "there is no documentation with requirements of that, and that is the reason why i try to find the right one over this cl. But we have both cases used in paris as args. I think host makes more sence in that case as that is not related the type of the device, where that is about host(type of host) with RPM data. \n\nExample: Cros is ChromeOS device and it can be a DUT and servo-host, and also WIfiRouter. where all of them are different hosts dut, servo-host, wifi_router, chameleon",
      "parentUuid": "34e2a60e_d3e61d59",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "49f9936f05282597142777e73bd1e227809f513c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58f2929e_cbf0c44a",
        "filename": "go/src/infra/cros/recovery/internal/execs/rpm/rpm_execs.go",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1393275
      },
      "writtenOn": "2022-11-28T05:04:49Z",
      "side": 1,
      "message": "let go with that. later we will see if we need change the name.",
      "parentUuid": "3f9cc070_725a366d",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 49
      },
      "revId": "49f9936f05282597142777e73bd1e227809f513c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "49f9936f05282597142777e73bd1e227809f513c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "49f9936f05282597142777e73bd1e227809f513c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "49f9936f05282597142777e73bd1e227809f513c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "49f9936f05282597142777e73bd1e227809f513c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}