{
  "comments": [
    {
      "key": {
        "uuid": "ef1dd89e_5374c340",
        "filename": "go/src/infra/appengine/qscheduler-swarming/app/state/nodestore/nodestore_test.go",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-08-23T17:56:46Z",
      "side": 1,
      "message": "IMHO, the test will be more representative of the real world if the inner loop runs store.Run(...) sequentially, not in parallel. In real world we may have multiple qscheduler processes, which each run stuff sequentially.",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "revId": "fe2c67da730e0f3fcb43bfcdc69498acbea36aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a6cdf91_a9530155",
        "filename": "go/src/infra/appengine/qscheduler-swarming/app/state/nodestore/nodestore_test.go",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2019-08-23T18:07:12Z",
      "side": 1,
      "message": "I\u0027m OK either way, though I think as written we actually expose more of nodestore behaviors (e.g. concurrent use of a single store) and the higher concurrency leads to more conflicts, which is what we want in this test.",
      "parentUuid": "ef1dd89e_5374c340",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "revId": "fe2c67da730e0f3fcb43bfcdc69498acbea36aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f6feb69_14ba7fb6",
        "filename": "go/src/infra/appengine/qscheduler-swarming/app/state/nodestore/nodestore_test.go",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-08-23T18:49:44Z",
      "side": 1,
      "message": "Fine, whatever. Can you at least confirm that the test covers all retry logic (the outer loop in tryRun and transaction retries)?",
      "parentUuid": "6a6cdf91_a9530155",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "revId": "fe2c67da730e0f3fcb43bfcdc69498acbea36aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50324ace_a9a7145e",
        "filename": "go/src/infra/appengine/qscheduler-swarming/app/state/nodestore/nodestore_test.go",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2019-08-23T19:10:33Z",
      "side": 1,
      "message": "Sure, I confirmed that it exercises the retry loop by seeing that the success rate of operations in this test depends sensitively on the max number of retries.\n\nI also tried a variety of attempt #s in the tryRun transaction, and they did\u0027t sensitively affect this success rate (as I would expect, because when a transaction fails on the stateRecord that means that it is likely already newer than tryRun\u0027s generation, so the entire tryRun is doomed).\n\nIs that what you\u0027re looking for?",
      "parentUuid": "6f6feb69_14ba7fb6",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "revId": "fe2c67da730e0f3fcb43bfcdc69498acbea36aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb0e7b80_b14b2527",
        "filename": "go/src/infra/appengine/qscheduler-swarming/app/state/nodestore/nodestore_test.go",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-08-23T19:21:08Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "50324ace_a9a7145e",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "revId": "fe2c67da730e0f3fcb43bfcdc69498acbea36aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}