{
  "comments": [
    {
      "key": {
        "uuid": "0b4038c4_e970d139",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 174,
      "author": {
        "id": 1374960
      },
      "writtenOn": "2020-03-10T18:55:24Z",
      "side": 1,
      "message": "Nit: blank line after oneline docstring",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 49
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a3aa7d9_63bbe714",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 174,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b4038c4_e970d139",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 49
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ed7644c_71f22b75",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 185,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "field_values",
      "range": {
        "startLine": 185,
        "startChar": 42,
        "endLine": 185,
        "endChar": 48
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5bd4878_c3e72012",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 185,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ed7644c_71f22b75",
      "range": {
        "startLine": 185,
        "startChar": 42,
        "endLine": 185,
        "endChar": 48
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8511237d_6adeff5c",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 195,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "can you call this \n\"api_field_values\" or \"api_fvs\"",
      "range": {
        "startLine": 195,
        "startChar": 6,
        "endLine": 195,
        "endChar": 11
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efb6b9dc_681cfd61",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 195,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8511237d_6adeff5c",
      "range": {
        "startLine": 195,
        "startChar": 6,
        "endLine": 195,
        "endChar": 11
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91bf6f5a_1bf93d15",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 203,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "I don\u0027t think these comments (here up to and including \"Get Phase\") add any value and adds to clutter of code. Can we remove?",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 203,
        "endChar": 23
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ced17829_cdd7b162",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 203,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91bf6f5a_1bf93d15",
      "range": {
        "startLine": 203,
        "startChar": 4,
        "endLine": 203,
        "endChar": 23
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d32833a_d35a5d90",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 220,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "can this be \n\"_ComputeFieldValueString\" to give more info in the name",
      "range": {
        "startLine": 220,
        "startChar": 22,
        "endLine": 220,
        "endChar": 27
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "523b028c_3ed7228c",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 220,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d32833a_d35a5d90",
      "range": {
        "startLine": 220,
        "startChar": 22,
        "endLine": 220,
        "endChar": 27
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f5aaea2_a44d309a",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "nit: \"FieldValue\u0027s value to a string.\"",
      "range": {
        "startLine": 222,
        "startChar": 15,
        "endLine": 222,
        "endChar": 25
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0171ce71_a9b2e374",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f5aaea2_a44d309a",
      "range": {
        "startLine": 222,
        "startChar": 15,
        "endLine": 222,
        "endChar": 25
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61d4820f_62e1cd6d",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 230,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "When do we expect this to happen? Or why should we support this case?\nIf we don\u0027t expect this to happen can we raise an exception or just not check for this case?",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb1344d2_a47a50fe",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 230,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "I see that Monorail has used the pattern that if something is None we mostly raise an exception. I\u0027ll update and raise an exception.\nMy only concern with that is making this method too restrictive in case some future usecase can pass in a None FieldValue. But that can be a problem for future coders.",
      "parentUuid": "61d4820f_62e1cd6d",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aba9d847_d2b2debf",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 243,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "I think this should raise an exception",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "605873d1_05e29ab4",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 243,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Mostly the same comment as above, I believe class FieldValue\u0027s constructor should be raising the exception for an instance where no values exist, but no need to bikeshed over this. I\u0027ll update and raise an exception",
      "parentUuid": "aba9d847_d2b2debf",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fef7e534_b90eac46",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 247,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "\"Derivation\"",
      "range": {
        "startLine": 247,
        "startChar": 70,
        "endLine": 247,
        "endChar": 80
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b2f045d_5ca5a688",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 247,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fef7e534_b90eac46",
      "range": {
        "startLine": 247,
        "startChar": 70,
        "endLine": 247,
        "endChar": 80
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fc9a78c_77c3858e",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 248,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "nit: \"FieldValue\u0027s \u0027derived\u0027 to a protoc Issue.Derivation.\"",
      "range": {
        "startLine": 248,
        "startChar": 15,
        "endLine": 248,
        "endChar": 49
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "192c32a2_f277d985",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 248,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fc9a78c_77c3858e",
      "range": {
        "startLine": 248,
        "startChar": 15,
        "endLine": 248,
        "endChar": 49
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aa178fd_bee6a66f",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 256,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "\"if field_value.derived:\"",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab067226_4010e6f8",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 256,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7aa178fd_bee6a66f",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b017e12b_6c8e9b9b",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 258,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-07T01:00:48Z",
      "side": 1,
      "message": "Since the derived boolean defaults to false anyways, can we just make this \u0027elif\u0027 the else case and remove the \"DERIVATION_UNSPECIFIED\" chunk below?",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b392ac6_1571fe1a",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 258,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "The same argument could be said about the v3 API proto, since the backend proto defaults to False and never None, why have that enum option in the first place?\n\nI think the compute and convert should be permissible.",
      "parentUuid": "b017e12b_6c8e9b9b",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aa34c10_7c3f633b",
        "filename": "appengine/monorail/api/v1/converters.py",
        "patchSetId": 7
      },
      "lineNbr": 258,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-03-11T22:14:11Z",
      "side": 1,
      "message": "https://aip.dev/126\nThe backend layer is separate from the API layer and protos that we expose to clients.\nIf there\u0027s a chance that there can be additional options in the future, we should make it an ENUM in the API, so we can add an enum option very easily w/out disrupting how our existing API clients use it. The backend representation can stay as-is, and if we add another option we can represent that however we want, update how we convert that representation to the API in this method w/out disrupting our users and potentially having to release another API version.\n\nWe are erring on the side of using ENUMs for all backend boolean fields where there\u0027s any possibility that adding other value options might happen, even if that chance is small, because the cost of having to release a new version of our API is very high.",
      "parentUuid": "4b392ac6_1571fe1a",
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8774be7_a536b374",
        "filename": "appengine/monorail/api/v1/test/converters_test.py",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1374960
      },
      "writtenOn": "2020-03-10T18:55:24Z",
      "side": 1,
      "message": "Nit: use docstrings instead of comments?",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 62
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a15a10cb_79895336",
        "filename": "appengine/monorail/api/v1/test/converters_test.py",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 1374960
      },
      "writtenOn": "2020-03-10T18:55:24Z",
      "side": 1,
      "message": "I believe the key is the field ID, not the field def itself. \n\nFor unit tests, use dict[key] rather than .get so that we get an error if the key isn\u0027t present",
      "range": {
        "startLine": 196,
        "startChar": 23,
        "endLine": 196,
        "endChar": 44
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a16c43a_f9997bb0",
        "filename": "appengine/monorail/api/v1/test/converters_test.py",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "self.field_def_1 is the key",
      "parentUuid": "a15a10cb_79895336",
      "range": {
        "startLine": 196,
        "startChar": 23,
        "endLine": 196,
        "endChar": 44
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a3e70b_b025335c",
        "filename": "appengine/monorail/api/v1/test/converters_test.py",
        "patchSetId": 7
      },
      "lineNbr": 260,
      "author": {
        "id": 1374960
      },
      "writtenOn": "2020-03-10T18:55:24Z",
      "side": 1,
      "message": "this isn\u0027t used?",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 260,
        "endChar": 39
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d81040_616bd32a",
        "filename": "appengine/monorail/api/v1/test/converters_test.py",
        "patchSetId": 7
      },
      "lineNbr": 260,
      "author": {
        "id": 1375911
      },
      "writtenOn": "2020-03-11T20:32:06Z",
      "side": 1,
      "message": "Ah good catch!",
      "parentUuid": "25a3e70b_b025335c",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 260,
        "endChar": 39
      },
      "revId": "1b184fd0a39473b3351a802d25feb9d3d69f5cbf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}