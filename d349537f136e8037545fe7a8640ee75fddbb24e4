{
  "comments": [
    {
      "key": {
        "uuid": "6b850357_bb57f0d1",
        "filename": "infra/libs/bigquery/helper.py",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2017-11-17T19:19:54Z",
      "side": 1,
      "message": "without insert ids, what\u0027s the value BigQueryHelper provides besides locking? If the user of the library doesn\u0027t have many threads, BigQueryHelper does not help. If there is a lot of threads sending events, send_rows will block all those threads because of the globalish lock. I guess that\u0027s why CQ has AsyncPush that sends events using BigQueryHelper in a separate thread and does benefit from the locking. Looks like CQ is the only user of BQH and nobody takes advantage of the only feature that BQH provides.\n\nmessage_to_row (or row_from_message) would be a very valuable feature of this package.",
      "revId": "d349537f136e8037545fe7a8640ee75fddbb24e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cc4ec42_34780bdb",
        "filename": "infra/libs/bigquery/helper.py",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-11-17T19:29:16Z",
      "side": 1,
      "message": "On that note... are we 100% that the bigquery client isn\u0027t threadsafe anyway? That would be a very strange choice on google\u0027s part.",
      "parentUuid": "6b850357_bb57f0d1",
      "revId": "d349537f136e8037545fe7a8640ee75fddbb24e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce8669d3_215c5024",
        "filename": "infra/libs/bigquery/helper.py",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-11-17T19:30:48Z",
      "side": 1,
      "message": "Actually from the API documentation it looks like the implementation may be using `concurrent` anyhow under the hood: https://googlecloudplatform.github.io/google-cloud-python/latest/bigquery/reference.html\n\nThis would lead me to believe that the client doesn\u0027t actually require the caller to lock.",
      "parentUuid": "3cc4ec42_34780bdb",
      "revId": "d349537f136e8037545fe7a8640ee75fddbb24e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3b3bca9_a82232f3",
        "filename": "infra/libs/bigquery/helper.py",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1167649
      },
      "writtenOn": "2017-11-17T23:17:32Z",
      "side": 1,
      "message": "What value does BQH provide besides locking? None, right now. But, it will do the proto translation, and I need to add row limits as well. It will prove useful. \n\nI added the lock because the bigquery client uses httplib2, which can cause SSL errors when multiple threads use the same connection. This was happening on CQ. Looks like it uses requests instead of httplib2 as of 0.26.0, so the lock is no longer needed! I\u0027ll remove that in a separate CL, if you don\u0027t mind.",
      "parentUuid": "ce8669d3_215c5024",
      "revId": "d349537f136e8037545fe7a8640ee75fddbb24e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dac1b8a_2c419fe1",
        "filename": "infra/libs/bigquery/helper.py",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2017-11-17T23:19:25Z",
      "side": 1,
      "message": "please elaborate \"row limits\". is this splitting rows into batches?",
      "parentUuid": "f3b3bca9_a82232f3",
      "revId": "d349537f136e8037545fe7a8640ee75fddbb24e4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}