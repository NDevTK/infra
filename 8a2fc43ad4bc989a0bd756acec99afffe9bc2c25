{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ddc639f5_9e932f93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1154295
      },
      "writtenOn": "2023-08-23T15:56:48Z",
      "side": 1,
      "message": "minor comment, LGTM overall",
      "revId": "8a2fc43ad4bc989a0bd756acec99afffe9bc2c25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1287c063_8bca7457",
        "filename": "go/src/infra/experimental/golangbuild/fetch.go",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 1154295
      },
      "writtenOn": "2023-08-23T15:56:48Z",
      "side": 1,
      "message": "I think it would make sense to push this down into goModDownloadStep, becuase it\u0027s already fairly specific. it can just accept RootDir instead of the command.",
      "range": {
        "startLine": 291,
        "startChar": 2,
        "endLine": 291,
        "endChar": 65
      },
      "revId": "8a2fc43ad4bc989a0bd756acec99afffe9bc2c25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3754a5b_9daa8e0e",
        "filename": "go/src/infra/experimental/golangbuild/fetch.go",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 1568168
      },
      "writtenOn": "2023-08-23T16:10:02Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "1287c063_8bca7457",
      "range": {
        "startLine": 291,
        "startChar": 2,
        "endLine": 291,
        "endChar": 65
      },
      "revId": "8a2fc43ad4bc989a0bd756acec99afffe9bc2c25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a82a8040_371338cf",
        "filename": "go/src/infra/experimental/golangbuild/fetch.go",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 1568167
      },
      "writtenOn": "2023-08-23T16:28:09Z",
      "side": 1,
      "message": "Good idea. Though trying it out makes me worry that fetchDependencies itself becomes less clear:\n\n```\nstep, ctx :\u003d build.StartStep(ctx, \"fetch dependencies\")\ndefer endStep(step, \u0026err)\n\nvar errs []error\nfor _, m :\u003d range modules {\n\terr :\u003d goModDownloadStep(ctx, spec *buildSpec, m.RootDir)\n\terrs \u003d append(errs, err)\n}\nreturn errors.Join(errs...)\n```\n\nSeeing `dlCmd :\u003d spec.goCmd(ctx, m.RootDir, \"mod\", \"download\", \"-json\")` here seems to make it easier to tell what goModDownloadStep will do. So I\u0027m leaning towards leaving it as is. Or do you think it can be clear enough that \u0027goModDownloadStep\u0027 creates and runs a command, and returns its output\u0027, perhaps by giving it a better name?",
      "parentUuid": "1287c063_8bca7457",
      "range": {
        "startLine": 291,
        "startChar": 2,
        "endLine": 291,
        "endChar": 65
      },
      "revId": "8a2fc43ad4bc989a0bd756acec99afffe9bc2c25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "def2215e_15756db4",
        "filename": "go/src/infra/experimental/golangbuild/fetch.go",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 1568167
      },
      "writtenOn": "2023-08-23T17:06:39Z",
      "side": 1,
      "message": "Renamed it to \u0027goModDownload\u0027 and moved its implementation to be near fetchDependencies itself. I tried to keep the \"Keep step presentation and command execution separate from logic where possible\" guideline in mind, but the constraint here is that a part of the presentation (whether it\u0027s an infra failure) is intertwined with command execution.",
      "parentUuid": "a82a8040_371338cf",
      "range": {
        "startLine": 291,
        "startChar": 2,
        "endLine": 291,
        "endChar": 65
      },
      "revId": "8a2fc43ad4bc989a0bd756acec99afffe9bc2c25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce084c90_9d70b8af",
        "filename": "go/src/infra/experimental/golangbuild/testmode.go",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1568168
      },
      "writtenOn": "2023-08-23T16:10:02Z",
      "side": 1,
      "message": "inline?",
      "revId": "8a2fc43ad4bc989a0bd756acec99afffe9bc2c25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "557db38d_9a3fe859",
        "filename": "go/src/infra/experimental/golangbuild/testmode.go",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1568167
      },
      "writtenOn": "2023-08-24T19:15:41Z",
      "side": 1,
      "message": "I went back and forth on this, but left it non-inlined to avoid reducing emphasis, given there\u0027s a comment explaining why it\u0027s being done despite most commonly relying on \u0027go test\u0027 to fetch dependencies automatically. Moved back inline.",
      "parentUuid": "ce084c90_9d70b8af",
      "revId": "8a2fc43ad4bc989a0bd756acec99afffe9bc2c25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}