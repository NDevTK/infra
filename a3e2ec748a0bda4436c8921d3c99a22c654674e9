{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fd3bb23d_3251afa6",
        "filename": "go/src/infra/cros/fleetcost/internal/costserver/controller/cost_indicator.go",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2024-04-05T22:11:21Z",
      "side": 1,
      "message": "How does it work to fetch a indicator? How\u0027s index filtering handled in here?",
      "revId": "a3e2ec748a0bda4436c8921d3c99a22c654674e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee1bcba3_c8583fc3",
        "filename": "go/src/infra/cros/fleetcost/internal/costserver/controller/cost_indicator.go",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1351748
      },
      "writtenOn": "2024-04-05T22:25:06Z",
      "side": 1,
      "message": "The IndicatorAttribute has all the information necessary to construct an ID.\n\nIndex filtering isn\u0027t implemented yet. I\u0027ll implement it in a subsequent CL.",
      "parentUuid": "fd3bb23d_3251afa6",
      "revId": "a3e2ec748a0bda4436c8921d3c99a22c654674e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d650125e_c394b81b",
        "filename": "go/src/infra/cros/fleetcost/internal/costserver/controller/cost_indicator.go",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2024-04-05T22:11:21Z",
      "side": 1,
      "message": "The previous draft example only extract cost dollar value, but for the full version I think we want to return all value part(fields beside those indexes) of the indicator, as things like burnout rate and cadence are needed in calculation.",
      "revId": "a3e2ec748a0bda4436c8921d3c99a22c654674e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be8b49c6_fedd96dc",
        "filename": "go/src/infra/cros/fleetcost/internal/costserver/controller/cost_indicator.go",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1351748
      },
      "writtenOn": "2024-04-05T22:25:06Z",
      "side": 1,
      "message": "Ack. Sounds good. I\u0027ll do it in a subsequent CL.",
      "parentUuid": "d650125e_c394b81b",
      "revId": "a3e2ec748a0bda4436c8921d3c99a22c654674e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "a3e2ec748a0bda4436c8921d3c99a22c654674e9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a3e2ec748a0bda4436c8921d3c99a22c654674e9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a3e2ec748a0bda4436c8921d3c99a22c654674e9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}