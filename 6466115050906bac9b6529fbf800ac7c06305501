{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "47a98337_a77d2ef2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1516607
      },
      "writtenOn": "2024-03-08T00:29:13Z",
      "side": 1,
      "message": "lgtm but i\u0027m not as familiar with debug symbols. is there another debug symbols SME who could also review?",
      "revId": "6466115050906bac9b6529fbf800ac7c06305501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ce83bec_1d5b673b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2024-03-08T00:34:55Z",
      "side": 1,
      "message": "Sure, let\u0027s add @iby@chromium.org",
      "parentUuid": "47a98337_a77d2ef2",
      "revId": "6466115050906bac9b6529fbf800ac7c06305501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f6014de_22495111",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300299
      },
      "writtenOn": "2024-03-08T04:20:30Z",
      "side": 1,
      "message": "Honestly, I\u0027m a bit concerned about this. We don\u0027t want builds going out with bad symbols. We\u0027ve been generally adding more errors to the symbol creation \u0026 upload process, not less. We recently (late 2022) had an OMG because symbol creation started failing and we didn\u0027t notice.\n\nWhat I\u0027m saying is, we\u0027d rather fail the build than ship a build that didn\u0027t upload symbols.\n\nWhy is this only happening occasionally? That sounds like a problem with the builder being flaky rather than an expected error.\n\nIf there\u0027s a specific list of files that never create debug files, can we just allowlist those?",
      "revId": "6466115050906bac9b6529fbf800ac7c06305501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "415ae0ea_10a8ce14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2024-03-08T04:45:43Z",
      "side": 1,
      "message": "This happens because files like libEGL_mesa.so don\u0027t have a build ID (known issue per b/319294855). We already ignore uploading those splitdebug files because we can\u0027t figure out what the debugID should be. When that happens we print out a warning and skip extracting the file from the debug.tgz file. By the time we get to `generateSplitdebugConfigs()` we only have the breakpad file, and not the splitdebug file. \n\nIt is correct to skip in this case as well, because we only have the breakpad file to upload something.",
      "parentUuid": "3f6014de_22495111",
      "revId": "6466115050906bac9b6529fbf800ac7c06305501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ed6f13e_e835526b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1267126
      },
      "writtenOn": "2024-03-08T05:35:55Z",
      "side": 1,
      "message": "I recognize your concern. The problem is that we\u0027re joining two different tarballs based on the build ID and the file name. It would be better to go to the source, and when we generate the debug_breakpad.tar.xz file we generate another tarball that has both the breakpad symbols (the .sym files) and the splitdebug files (the .debug files) right next to each other. A significant chunk of this code could be deleted (the elf parsing logic for example!) because we could know that the .debug file was run through `dump_syms` to generate the .sym file. If we had that we can simply iterate through every directory (e.g. `zip/28BCCBD0FFEA923100000000000000000/`) and upload the `zip.sym` file and the `zip.debug` file with the appropriate upload_type.\n\nThis CL is needed to avoid errors while uploading symbols if the splitdebug file is missing because the joining logic is faulty, because the build ID was missing _and_ the file name was different, or it was a duplicate name so we couldn\u0027t be sure. I\u0027d like to take up generating the other tarball, but I think that\u0027s in chromite code?",
      "parentUuid": "415ae0ea_10a8ce14",
      "revId": "6466115050906bac9b6529fbf800ac7c06305501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}