{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "228b288d_a26d2754",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-16T04:59:28Z",
      "side": 1,
      "message": "LGTM, but add Jared for double check as we add one bit in crosfleet.",
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0a3d8bb_c5e2ad12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T17:36:29Z",
      "side": 1,
      "message": "We have another UFS client implementation in go/src/infra/cmd/crosfleet/internal/dut/dutcommon.go. Can you extract that client out into a common client package (e.g. something go/src/infra/cmd/crosfleet/internal/ufs/ufs.go) ? That would be much preferable for readability/maintainability than having two separate clients.",
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a31d6aac_87d26894",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-16T23:45:08Z",
      "side": 1,
      "message": "Hi Jared, does it make sense that move or duplicate this check to CTP-side?",
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4e0b219_9df4769e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-17T00:02:51Z",
      "side": 1,
      "message": "Good point; duplicating to CTP-side validation would make more sense, since users\u0027 crosfleet versions are often inconsistent and we may eventually see public builders calling CTP without using crosfleet.",
      "parentUuid": "a31d6aac_87d26894",
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09c61808_ccfec192",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1526722
      },
      "writtenOn": "2022-02-17T00:08:28Z",
      "side": 1,
      "message": "Can you please point me to the CTP code so I can look into adding this check there?",
      "parentUuid": "c4e0b219_9df4769e",
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23a2677a_89f9a223",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-17T00:09:40Z",
      "side": 1,
      "message": "https://source.corp.google.com/chromeos_public/infra/recipes/recipes/test_platform/cros_test_platform.py?q\u003dcros_test_platform.py",
      "parentUuid": "09c61808_ccfec192",
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8500098_ebfcc753",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/suite.go",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T17:44:13Z",
      "side": 1,
      "message": "the args here are suite names, but are being passed as the testNames arg. Does the UFS API handle suites and tests differently?",
      "range": {
        "startLine": 77,
        "startChar": 81,
        "endLine": 77,
        "endChar": 85
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fcf1c6c_0eff0608",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/test.go",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T17:44:13Z",
      "side": 1,
      "message": "suiteCmdName",
      "range": {
        "startLine": 79,
        "startChar": 68,
        "endLine": 79,
        "endChar": 79
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ca8b5b4_1d23836c",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/test.go",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T17:44:13Z",
      "side": 1,
      "message": "I believe  you\u0027ll want to run this validation in testplan.go as well.",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 86,
        "endChar": 2
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3c28287_280a25cd",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 7
      },
      "lineNbr": 664,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T17:44:13Z",
      "side": 1,
      "message": "this should just be cmdName, and test.go/suite.go/testplan.go should pass in testCmdName, suiteCmdName, and testPlanCmdName respectively.",
      "range": {
        "startLine": 664,
        "startChar": 1,
        "endLine": 664,
        "endChar": 12
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ed1b69a_83249b3d",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 7
      },
      "lineNbr": 669,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T17:47:51Z",
      "side": 1,
      "message": "Two things:\n(1) this comment is misleading since we aren\u0027t explicitly checking *if* it is a private crosfleet user. We\u0027re checking if the API will return a valid response for empty params, which *happens* to happen for a private user. Either the comment needs to reflect this reality, or we should perform some other kind of explicit check for the user.\n(2) AFAIK crosfleet is *only* usable by private users (I\u0027m taking private to mean an authenticated Googler). We will need to make a lot of permissions changes to make crosfleet work with other users; is that the goal of this feature?",
      "range": {
        "startLine": 669,
        "startChar": 1,
        "endLine": 669,
        "endChar": 178
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71162995_35250055",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 7
      },
      "lineNbr": 669,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-16T18:23:40Z",
      "side": 1,
      "message": "for 2), we extend crosfleet users to be private users + public chromium builders, so this check is for public chromium builders to go through and run tests. For other \"general\" public users, there\u0027s no plan to support them and they should be blocked somewhere in swarming-level or ctp-level.",
      "parentUuid": "8ed1b69a_83249b3d",
      "range": {
        "startLine": 669,
        "startChar": 1,
        "endLine": 669,
        "endChar": 178
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a24b6420_94f41e59",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 7
      },
      "lineNbr": 669,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T18:25:07Z",
      "side": 1,
      "message": "ahhh. So the builder itself is going to call crosfleet?\n\nAny reason the builder can\u0027t call the cros_test_platform recipe module directly?",
      "parentUuid": "71162995_35250055",
      "range": {
        "startLine": 669,
        "startChar": 1,
        "endLine": 669,
        "endChar": 178
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ede1c0f3_f59500d5",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 7
      },
      "lineNbr": 669,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-16T18:31:27Z",
      "side": 1,
      "message": "to add more context, crosfleet\u0027s user already includes private chromium builders. \n\nThey recently change to use crosfleet to decouple browser recipe and chromeos recipe to further decrease the recipe dependency chain: crbug.com/1237240",
      "parentUuid": "a24b6420_94f41e59",
      "range": {
        "startLine": 669,
        "startChar": 1,
        "endLine": 669,
        "endChar": 178
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e486b95_55fc8bef",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 7
      },
      "lineNbr": 670,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-16T17:44:13Z",
      "side": 1,
      "message": "why is there no error handling here?",
      "range": {
        "startLine": 670,
        "startChar": 23,
        "endLine": 670,
        "endChar": 24
      },
      "revId": "80076d10d00ee4154ec9ee05bea96da45d91f00c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}