{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9289d846_5556620a",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2021-10-19T02:24:59Z",
      "side": 1,
      "message": "Naming nit: ClusteredFailureRow?",
      "range": {
        "startLine": 18,
        "startChar": 8,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62ae3758_fcee5c23",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-10-19T04:49:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9289d846_5556620a",
      "range": {
        "startLine": 18,
        "startChar": 8,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "651d3399_a0a24d15",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2021-10-19T03:22:54Z",
      "side": 1,
      "message": "Do bug clusters go in here?  Or is that in a field yet to be added?",
      "range": {
        "startLine": 33,
        "startChar": 9,
        "endLine": 33,
        "endChar": 19
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "458b3ab5_973ecae4",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-10-19T04:49:23Z",
      "side": 1,
      "message": "They will go in here. There will be an algorithm that clusters test results based on failure association rules.",
      "parentUuid": "651d3399_a0a24d15",
      "range": {
        "startLine": 33,
        "startChar": 9,
        "endLine": 33,
        "endChar": 19
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4486eb74_efa7e964",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2021-10-19T02:24:59Z",
      "side": 1,
      "message": "nit: latest?",
      "range": {
        "startLine": 68,
        "startChar": 19,
        "endLine": 68,
        "endChar": 23
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f834822_4264a6aa",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2021-10-19T03:22:54Z",
      "side": 1,
      "message": "Probably should give some example SQL here.  Or better yet we should define a view so that people (and ourselves) cannot get it wrong.",
      "range": {
        "startLine": 68,
        "startChar": 37,
        "endLine": 68,
        "endChar": 41
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55dc5450_8a697a56",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1370239
      },
      "writtenOn": "2021-10-19T03:22:54Z",
      "side": 1,
      "message": "This is unclear to me.  What scope does the last last updated time have?  When I do a join to a MAX(last updated times), should that last updated time be for the whole table, a single test id, a single cluster id, or the test id/cluster combo?",
      "range": {
        "startLine": 67,
        "startChar": 61,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b41626dc_05eae2b5",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-10-19T04:49:23Z",
      "side": 1,
      "message": "Done. As for the view, I agree, I was thinking the same thing when writing this proto.",
      "parentUuid": "1f834822_4264a6aa",
      "range": {
        "startLine": 68,
        "startChar": 37,
        "endLine": 68,
        "endChar": 41
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a576d81_ce3d020b",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-10-19T04:49:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4486eb74_efa7e964",
      "range": {
        "startLine": 68,
        "startChar": 19,
        "endLine": 68,
        "endChar": 23
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21bb00dc_eef0789f",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-10-19T04:49:23Z",
      "side": 1,
      "message": "The description above alludes to the answer (cluster_algorithm, cluster_id, test_result_system, test_result_id) granularity, but this has been made explicit by the SQL.",
      "parentUuid": "55dc5450_8a697a56",
      "range": {
        "startLine": 67,
        "startChar": 61,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "842a1ade_1b560491",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 159,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2021-10-19T02:24:59Z",
      "side": 1,
      "message": "I just had another thought on this field: we should guarantee that all failures have the same level of root invocation: i.e. for both ci and try failures, the root invocation should all be build level. So that when external users use this table, they know which table (bb or cv) they can join.",
      "range": {
        "startLine": 159,
        "startChar": 9,
        "endLine": 159,
        "endChar": 27
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d43d6ab_d6c5bd4b",
        "filename": "go/src/infra/appengine/weetbix/proto/bq/clustered_failure.proto",
        "patchSetId": 6
      },
      "lineNbr": 159,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-10-19T04:49:23Z",
      "side": 1,
      "message": "As part of revising the terminology I have added a description to this effect.",
      "parentUuid": "842a1ade_1b560491",
      "range": {
        "startLine": 159,
        "startChar": 9,
        "endLine": 159,
        "endChar": 27
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c84c341e_4f441829",
        "filename": "go/src/infra/appengine/weetbix/proto/v1/failure_reason.proto",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2021-10-19T02:24:59Z",
      "side": 1,
      "message": "Why not put this message in common?",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 21
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c893aea_cb347796",
        "filename": "go/src/infra/appengine/weetbix/proto/v1/failure_reason.proto",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1386944
      },
      "writtenOn": "2021-10-19T04:49:23Z",
      "side": 1,
      "message": "This is a type that Weetbix owns (see Weetbix design doc). Any particular reason you think it should it be in common?",
      "parentUuid": "c84c341e_4f441829",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 21
      },
      "revId": "094ec7a9732b72413b42880732e94a8badb633ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}