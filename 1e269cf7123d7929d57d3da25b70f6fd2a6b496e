{
  "comments": [
    {
      "key": {
        "uuid": "b675afdb_26816527",
        "filename": "appengine/monorail/static_src/elements/issue-detail/mr-comment-list/mr-comment.js",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1159599
      },
      "writtenOn": "2019-04-30T00:30:47Z",
      "side": 1,
      "message": "Optional nit: Consider prefixing these functions with _renderHeading, etc to make it easier to immediately scan what they do and to make it more immediately obvious that they\u0027re grouped with render()",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 22
      },
      "revId": "1e269cf7123d7929d57d3da25b70f6fd2a6b496e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e71087d_d36ed855",
        "filename": "appengine/monorail/static_src/elements/issue-detail/mr-comment-list/mr-comment.js",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2019-04-30T19:47:29Z",
      "side": 1,
      "message": "Stylistically, I disagree with this naming scheme. A function name should only begin with a verb if it mutates state.",
      "parentUuid": "b675afdb_26816527",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 22
      },
      "revId": "1e269cf7123d7929d57d3da25b70f6fd2a6b496e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ff9df39_ac092cda",
        "filename": "appengine/monorail/static_src/elements/issue-detail/mr-comment-list/mr-comment.js",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1159599
      },
      "writtenOn": "2019-04-30T20:19:40Z",
      "side": 1,
      "message": "I don\u0027t have a super strong opinion here, so that\u0027s fine. But, as a followup question, is the principle of having function names only beginning with verbs when they mutate state documented anywhere? \n\nThis convention seems to suggest that getters with prefixes are named wrong and, more immediately, that all of our _compute functions should have their prefixes removed when transitioning. I also sort of wonder about boolean values with names that often start with verbs (ie: showComments), which I think might become confusing. I\u0027m definitely okay with making these changes if we feel it\u0027s better, but I\u0027d like to have a bit more context on this style rule.",
      "parentUuid": "0e71087d_d36ed855",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 22
      },
      "revId": "1e269cf7123d7929d57d3da25b70f6fd2a6b496e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7245ec7d_c2280452",
        "filename": "appengine/monorail/static_src/elements/issue-detail/mr-comment-list/mr-comment.js",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2019-04-30T23:07:24Z",
      "side": 1,
      "message": "Yes! It\u0027s not a Google style guideline, but an Apple one:\nhttps://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CodingGuidelines/Articles/NamingMethods.html\n\nThe Google naming guidelines are at: https://go/longnamesarelong\n\nPrefixing with \"_compute\" was a Polymer style convention and, I would argue, not a particularly good one. Both of the guidelines above ask you to omit such boilerplate words.\n\nSome boolean rules are at http://wiki.c2.com/?GoodVariableNames (linked from go/longnamesarelong)\nIn practice, most boolean methods will end up starting with a modal verb, e.g.: can, has, is, must, needs, should, will.",
      "parentUuid": "5ff9df39_ac092cda",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 22
      },
      "revId": "1e269cf7123d7929d57d3da25b70f6fd2a6b496e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b31c2bf6_dc5dd8d3",
        "filename": "appengine/monorail/static_src/elements/issue-detail/mr-comment-list/mr-comment.js",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1159599
      },
      "writtenOn": "2019-04-30T23:17:11Z",
      "side": 1,
      "message": "Thanks for the links! Great reads. I like the rationale. \n\nI can see your point about _compute - it gets pretty boilerplate-y and often isn\u0027t a super useful function name. I\u0027d be happy to drop prefixes like _compute in favor of instead describing what the computed data is as we go forward.",
      "parentUuid": "7245ec7d_c2280452",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 22
      },
      "revId": "1e269cf7123d7929d57d3da25b70f6fd2a6b496e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e99fca04_895dd755",
        "filename": "appengine/monorail/static_src/elements/issue-detail/mr-comment-list/mr-comment.js",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2019-04-30T00:02:30Z",
      "side": 1,
      "message": "Maybe we can check this._showComment here instead.",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 102,
        "endChar": 21
      },
      "revId": "1e269cf7123d7929d57d3da25b70f6fd2a6b496e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5cc8366_9f60bc62",
        "filename": "appengine/monorail/static_src/elements/issue-detail/mr-comment-list/mr-comment.js",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2019-04-30T19:47:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e99fca04_895dd755",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 102,
        "endChar": 21
      },
      "revId": "1e269cf7123d7929d57d3da25b70f6fd2a6b496e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}