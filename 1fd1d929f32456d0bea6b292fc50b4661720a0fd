{
  "comments": [
    {
      "key": {
        "uuid": "b062e3bc_633cfef9",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-07-19T20:10:07Z",
      "side": 1,
      "message": "imo it should always use both to verify:\n\n  * local \u0027emergency\u0027 mode is actually working and didn\u0027t rot\n  * local mode produces the same outputs as Cloud Build (determinism, correctness, trustworthiness, etc.)",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 16
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dacbb7b9_aeb15310",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-19T22:16:35Z",
      "side": 1,
      "message": "The entire point of using Cloud Build is to avoid maintaining docker daemon on builders. It is PITA. Not only installing and updating it (and giving builder account root on the machine), but also garbage collecting images and containers. If anything, I\u0027d rather delete local docker mode. But I\u0027d like to keep it for now, since this is how I going to test earlier versions of this tool, before it learns to upload to Cloud Build.",
      "parentUuid": "b062e3bc_633cfef9",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 16
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15b1adf9_c8be7e5b",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-19T23:07:39Z",
      "side": 1,
      "message": "Oh, also there are two kinds of emergencies:\n\n1. LUCI is down and we need to build a new image. Then Cloud Build workflow can be kickstarted locally.\n2. Cloud Build is down and we need to build a new image.\n\nI think (1) is much more likely (LUCI is less stable than Cloud Build, and there\u0027s a much higher chance we *need* to build something to fix LUCI). (2) is very unlikely (Cloud Build is more stable, and even if it is down, we can probably live without new images until it is up).\n\nWhen dealing with emergency (1), local workflow will exercise all same code paths as used on CI, so it should not rot too much.\n\n(2) may rot. But considering it is rare, we may either get rid of it or maybe setup some kind of Dirt exercises (i.e. once a quoter deploy stuff from totally local state).",
      "parentUuid": "dacbb7b9_aeb15310",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 16
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "493672ce_e33299fe",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-07-19T23:12:34Z",
      "side": 1,
      "message": "imo it\u0027s going to be required to develop this thing and containers locally indefinitely. As such, I think it should be tested in CI.\n\nEven if the builder purged the entire docker cache on every build it would still be worth it to keep it tested.\n\nI don\u0027t think local root is a big deal at all, as long as it\u0027s a regularly recycled VM (which would also solve the \"how do we keep the docker cache clean\" problem... just let it grow and nuke the machine every 24 hours).",
      "parentUuid": "dacbb7b9_aeb15310",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 16
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4e58a7c_b75c617d",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-19T23:15:58Z",
      "side": 1,
      "message": "Per our existing policies all stuff that can transitively touch official should be built in official VLAN. We don\u0027t not recycle VMs there.\n\nWe can setup a custom GCE-P based CI builder with docker in luci.infra.ci and make it upload to chops-nonprod-images registry. Would it be good enough?",
      "parentUuid": "493672ce_e33299fe",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 16
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69af93d8_f571667a",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-07-19T23:22:06Z",
      "side": 1,
      "message": "\u003e Per our existing policies all stuff that can transitively touch official should be built in official VLAN. We don\u0027t not recycle VMs there.\n\u003e \n\ndon\u0027t not -\u003e don\u0027t? I just want to have the local mode:\n  * run in CI at some point\n  * check to see if the hash matches what cloud build pooped out\n\nThere\u0027s no \u0027touching\u0027 of anything, official or otherwise?\n\n\u003e We can setup a custom GCE-P based CI builder with docker in luci.infra.ci and make it upload to chops-nonprod-images registry. Would it be good enough?\n\nI don\u0027t even care about upload, I really just care about push_button -\u003e get container hash and that the hash matches what we\u0027re deploying.\n\nPresumably if we can generate the container, and it\u0027s the same container as what we deploy, we can find some way to upload the container in an emergency. I do assume that one of the myriad docker upload tools will continue to work in the apocalypse, but I\u0027m OK with that :p.",
      "parentUuid": "f4e58a7c_b75c617d",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 16
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e8a4015_2bd6e403",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-19T23:37:00Z",
      "side": 1,
      "message": "\u003e I don\u0027t even care about upload, I really just care about push_button -\u003e get container hash and that the hash matches what we\u0027re deploying.\n\nThis may be brittle, since I believe Docker doesn\u0027t guarantee byte-to-byte reproducibility of builds, certainly not if using different docker versions (we can\u0027t guarantee that Cloud Build and our \"local\" builds are using same docker).\n\nAlso some images are not reproducible in principle (e.g. ones using \"apt-get\"). We do have such images already (swarming docker stuff).\n\nThus I target \"builds using local docker mode are succeeding\" as a good-enough signal that local mode works.",
      "parentUuid": "69af93d8_f571667a",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 16
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c0c35f3_7bd95009",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-07-19T20:10:07Z",
      "side": 1,
      "message": "missed a word",
      "range": {
        "startLine": 35,
        "startChar": 35,
        "endLine": 35,
        "endChar": 38
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb10c538_eb4042b9",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-19T22:16:35Z",
      "side": 1,
      "message": "ðŸ¤¬",
      "parentUuid": "7c0c35f3_7bd95009",
      "range": {
        "startLine": 35,
        "startChar": 35,
        "endLine": 35,
        "endChar": 38
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47b4044a_3976a975",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-07-19T20:10:07Z",
      "side": 1,
      "message": "imo (if we decide this should be runnable on windows at all), it should print a big fat warning that +x/+w bits (and the windows \u0027secret\u0027 bits like \u0027system\u0027, \u0027readonly\u0027 and \u0027hidden\u0027) will be lost when running in local directory mode. It can probably still produce reasonable output in tarball mode though (though filemode detection on inputs will be wonky too).\n\nLet\u0027s just make it exit 1 on windows with a \"pls run on *nix, thx\" message",
      "range": {
        "startLine": 76,
        "startChar": 52,
        "endLine": 77,
        "endChar": 20
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00140ff2_21e29ee3",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-19T22:16:35Z",
      "side": 1,
      "message": "This is not about Windows, this is about making final *.tar.gz \"content addressed\". \"content\" is thus defined as file bodies + their +w and +x bits, and *nothing else*. Tar supports a lot of additional metadata, we purposefully ignore it.",
      "parentUuid": "47b4044a_3976a975",
      "range": {
        "startLine": 76,
        "startChar": 52,
        "endLine": 77,
        "endChar": 20
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aab3dc6_f0c2423e",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-07-19T20:10:07Z",
      "side": 1,
      "message": "nit: are",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 11
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3195a90a_677da36a",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2019-07-19T22:16:35Z",
      "side": 1,
      "message": "is (are?) metadata plural or singular ðŸ¤”?",
      "parentUuid": "5aab3dc6_f0c2423e",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 11
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ed618f6_85811f4d",
        "filename": "go/src/infra/cmd/cloudbuildhelper/README.md",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-07-19T23:06:59Z",
      "side": 1,
      "message": "useless sidebar:\npretty sure metadata is plural :) (\u0027metadatum\u0027 would be singular, but v. archaic)\n\n\nThe other hint is that you just listed a bunch of separate things, so there\u0027s definitely more than one piece of metadata :p",
      "parentUuid": "3195a90a_677da36a",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 11
      },
      "revId": "1fd1d929f32456d0bea6b292fc50b4661720a0fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}