{
  "comments": [
    {
      "key": {
        "uuid": "8f4ac32b_6a40c6ca",
        "filename": "appengine/monorail/services/chart_svc.py",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 1168241
      },
      "writtenOn": "2019-10-23T04:39:18Z",
      "side": 1,
      "message": "Last time I was dealing with commits I discovered that the production SQL databases have autocommit[1] turned on, which I think entailed that regardless of whether commit\u003dFalse or commit\u003dTrue, the statement always committed the transaction when it was run. Might be worth double checking at some point that this code doesn\u0027t commit the transaction when commit\u003dFalse.\n\n[1] https://dev.mysql.com/doc/refman/5.6/en/innodb-autocommit-commit-rollback.html",
      "range": {
        "startLine": 352,
        "startChar": 8,
        "endLine": 352,
        "endChar": 21
      },
      "revId": "73c6dfcd31f9d36c18762de949e8654a282558ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cf9e2c9_9f3df4b4",
        "filename": "appengine/monorail/services/chart_svc.py",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 1163684
      },
      "writtenOn": "2019-10-23T19:05:44Z",
      "side": 1,
      "message": "Yeah, we should double check.  I have been under the assumption that mysqldb sets autocomplete to false for each DB connection that it creates.   If I check this running locally by adding a line to _ExecuteWithSQLConnection() like \n logging.info(\u0027autocommit is %r\u0027, sql_cnxn.get_autocommit())\nit says False.  However, maybe that is just a python variable and it is not actually communicated to the MySQL server.  To be 100% sure we could run an experiment where one servlet does a DB read os some int column, adds 1 to it, writes it with commit\u003dfalse and then does sleep(30), and finally commits, meanwhile other requests in parallel are doing the same thing.  One of them should succeed and the others should rollback.   If autocommit was true, then the int value would be incremented several times.",
      "parentUuid": "8f4ac32b_6a40c6ca",
      "range": {
        "startLine": 352,
        "startChar": 8,
        "endLine": 352,
        "endChar": 21
      },
      "revId": "73c6dfcd31f9d36c18762de949e8654a282558ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d11735fd_3021e1b8",
        "filename": "appengine/monorail/services/chart_svc.py",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2019-10-24T00:54:46Z",
      "side": 1,
      "message": "big revelation. big.\nIf true, I\u0027m surprised this would not have caused other issues\n\nIs there a bug for this? If not I\u0027ll file one. \nIn what context was this previously discovered?\n\nI think I would still be OK with committing this, since all previous calls of this method are with commit\u003dFalse and this CL doesn\u0027t really change anything about that.",
      "parentUuid": "4cf9e2c9_9f3df4b4",
      "range": {
        "startLine": 352,
        "startChar": 8,
        "endLine": 352,
        "endChar": 21
      },
      "revId": "73c6dfcd31f9d36c18762de949e8654a282558ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "408bad59_27e05b06",
        "filename": "appengine/monorail/services/features_svc.py",
        "patchSetId": 1
      },
      "lineNbr": 1065,
      "author": {
        "id": 1168241
      },
      "writtenOn": "2019-10-23T04:39:18Z",
      "side": 1,
      "message": "How will the cache get invalidated if commit\u003dFalse?",
      "revId": "73c6dfcd31f9d36c18762de949e8654a282558ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8936a33_a1d96b04",
        "filename": "appengine/monorail/services/features_svc.py",
        "patchSetId": 1
      },
      "lineNbr": 1065,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2019-10-24T00:54:46Z",
      "side": 1,
      "message": "Originally I thought the cache invalidation should be called by the caller or the caller\u0027s caller. Eg. in the whole ExpungeUsers pipeline, it should make all the DB executions first and then invalidate the cache for everything at the end if the DB executions were successful.\nBut I\u0027ve changed my mind on this and think it\u0027s simpler to have this invalidate cache regardless of commit. We can always add an invalidate BOOL later on like we do with \u0027commit\u0027.",
      "parentUuid": "408bad59_27e05b06",
      "revId": "73c6dfcd31f9d36c18762de949e8654a282558ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}