{
  "comments": [
    {
      "key": {
        "uuid": "44006429_c6ab6cc8",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:58:50Z",
      "side": 1,
      "message": "All of these files (also in follow up CLs, need copyright header)",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8069d87_28feaf1a",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "Why cast? constants in golang are untyped. This will be automatically cast to int32 at point-of-use: https://play.golang.org/p/lOKZeYq2raQ",
      "range": {
        "startLine": 11,
        "startChar": 19,
        "endLine": 11,
        "endChar": 46
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7760832_c8f61bc8",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "If I omit this, I get build errors such as pasted below unless I cast at point-of-use.\n\npriority/prioritize.go:67:12: cannot use priority (type int) as type int32 in field value",
      "parentUuid": "a8069d87_28feaf1a",
      "range": {
        "startLine": 11,
        "startChar": 19,
        "endLine": 11,
        "endChar": 46
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c8807e_f7816b2c",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T20:50:44Z",
      "side": 1,
      "message": "Ah, that\u0027s because you use :\u003d to declare and assign to priority without any type information, so golang picks int as the type for priority (which later causes problems when you try to assign an int32 value to priority). You must explicitly specify the type of priority, like so: https://play.golang.org/p/z56DrKgtFOo\n\nI think this is a legitimate reason to used typed constants. But prefer this:\n\nconst FreeBucket int32 \u003d vector.NumPriorities",
      "parentUuid": "a7760832_c8f61bc8",
      "range": {
        "startLine": 11,
        "startChar": 19,
        "endLine": 11,
        "endChar": 46
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d733c95_f22b3a86",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T17:52:35Z",
      "side": 1,
      "message": "s/Vector/balance",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba84a5eb_7e4ed76d",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d733c95_f22b3a86",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "236c473a_7adbc36b",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "nit: I\u0027d put these constants in a block, since they are related account knobs.\n\n  const(\n    // FreeBucket is ...\n    FreeBucket \u003d vector.NumPriorities\n    // PromoteThreshold is ...\n    PromoteThreshold \u003d 5.0\n    ...\n  )",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdc3ce51_8dd5f57a",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "236c473a_7adbc36b",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7b9a581_7d99f66e",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T17:52:35Z",
      "side": 1,
      "message": "s/QuotaVector/Vector",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ffd995b_dcbc0173",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7b9a581_7d99f66e",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f82ba78_e88c17db",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "- golang dislikes stutter in package.Function names. So: vector.Empty() instead of vector.EmptyVector()\n- It is standard in golang for all new things to be 0-initialized, and also vector.New() is the conventional function name for this.",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69aee792_69e2b9cc",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f82ba78_e88c17db",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6a0625c_937c93e8",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "Do you _really_ need this?\nThis is introducing a non-trivial indirection in understanding vector.Vector (I have to understand both vector.Vector and vector.V in order to use them properly)\n\nI find using the raw type in Val()/Ref() more readable:\n\nfunc Val(values [NumPriorities]float64) Vector {\n  ...\n}",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b9757a0_52e0dc4a",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "It\u0027s a keystroke saver mainly used in test code. V{} is a lot simpler than [NumPriorities]float64{}\n\nI expected some controversy though. What if I annotate it with strongly worded warning that it is intended only for use within tests as a keystroke saver?\n\nRelated controversy: I also am dot-importing the vector package into some test modules, also as a keystroke saver.",
      "parentUuid": "d6a0625c_937c93e8",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f748b7c4_b845017e",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T20:50:44Z",
      "side": 1,
      "message": "Yeah, na-da for . importing packages (see comment there)\n\nFor tests, you can make this internal type (v vs V) since tests are in the same package, they have access to the internal type.",
      "parentUuid": "0b9757a0_52e0dc4a",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b588e1e3_baa3caec",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T17:52:35Z",
      "side": 1,
      "message": "e.g. Val(V{1, 2, 3})",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ee343e8_20e7aca9",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b588e1e3_baa3caec",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dedef61f_2b480956",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T17:52:35Z",
      "side": 1,
      "message": "e.g. Ref(V{1, 2, 3})",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "755a5e4c_2f053a95",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dedef61f_2b480956",
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f502520f_f2fcc15e",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 48,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "Why do you need this?\ni.e., why do you anticipate having to work with Vectors that are the wrong length at all? Since the purpose of Vector is to be fixed-length, it\u0027ll make understanding code easier if that is *always* the case.\n\nFrom a first look, this sounds to me like a place where fail-fast is better than be-robust. If you don\u0027t have good reasons to expect variable length Vectors, best panic() if you find that to be the case.",
      "range": {
        "startLine": 48,
        "startChar": 5,
        "endLine": 48,
        "endChar": 8
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4cf1ed7_4635890f",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 48,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "makes sense, Done",
      "parentUuid": "f502520f_f2fcc15e",
      "range": {
        "startLine": 48,
        "startChar": 5,
        "endLine": 48,
        "endChar": 8
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44abdce1_ffcd60a6",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "This saves duplicate initialization of newSlice:\n\n  newSlice \u003d make([]float64, 0, NumPriorities)\n  newSlice \u003d append(newSlice, v.Values...)\n  v.Values \u003d newSlice",
      "range": {
        "startLine": 50,
        "startChar": 1,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef7117f4_21db4132",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "n/a, changed to a panic",
      "parentUuid": "44abdce1_ffcd60a6",
      "range": {
        "startLine": 50,
        "startChar": 1,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ab848a5_a573d86d",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "Suggest Equal() instead, to match reflect.DeepEqual()",
      "range": {
        "startLine": 94,
        "startChar": 16,
        "endLine": 94,
        "endChar": 22
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65315f7_42a27050",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ab848a5_a573d86d",
      "range": {
        "startLine": 94,
        "startChar": 16,
        "endLine": 94,
        "endChar": 22
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02bee801_d32470f7",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.proto",
        "patchSetId": 7
      },
      "lineNbr": 4,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "s/a//",
      "range": {
        "startLine": 4,
        "startChar": 12,
        "endLine": 4,
        "endChar": 15
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2ee94c5_6d0c3893",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.proto",
        "patchSetId": 7
      },
      "lineNbr": 4,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02bee801_d32470f7",
      "range": {
        "startLine": 4,
        "startChar": 12,
        "endLine": 4,
        "endChar": 15
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "664b98c4_44899e5f",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector_test.go",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "It is conventional to directly define a value if a struct will be used exactly once:\n\n    val cases []struct {\n      A      Vector\n      B      Vector\n      Expect bool\n    } {\n      {a, a, false},\n      {b, a, false},\n      ...\n    }",
      "range": {
        "startLine": 14,
        "startChar": 1,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8699df57_9a9de21f",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector_test.go",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "664b98c4_44899e5f",
      "range": {
        "startLine": 14,
        "startChar": 1,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3af59b0b_8b03bcea",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector_test.go",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T20:35:41Z",
      "side": 1,
      "message": "Please include an error message that tells you exactly which test case failed.\n\n t.Fail(\"%s \u003c %s, want true, got false\", expect.A, expect.B)",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "702f38ae_99634828",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector_test.go",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T21:27:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3af59b0b_8b03bcea",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "89809a7c825a6e98a86988baf92ff6ce68f17fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}