{
  "comments": [
    {
      "key": {
        "uuid": "c15cabd1_8092f933",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "Add package docstring.\n\nDidn\u0027t `go vet` complain? (should run on preupload)",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 11
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd2297a7_773a8e91",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2020-09-17T18:10:28Z",
      "side": 1,
      "message": "`$ go vet common-tls/internal/ssh/ssh.go`\nDoesn\u0027t complain\n\nStill add docstring?",
      "parentUuid": "c15cabd1_8092f933",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 11
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "888bb647_aabf8b38",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2020-09-17T20:16:36Z",
      "side": 1,
      "message": "Yes, docstring is needed for all packages",
      "parentUuid": "bd2297a7_773a8e91",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 11
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0b82ee0_26d55182",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2020-09-17T20:16:36Z",
      "side": 1,
      "message": "Suggest sshpool so the package name doesn\u0027t conflict with the ssh package, as it is somewhat likely that both packages are used together.",
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcdbb386_46572127",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "nit: This is misleading. Reading this made me think that user has to call Client.Close()\n\nHow about simply: Client wraps an ssh.Client obtained from a ClientPool",
      "range": {
        "startLine": 13,
        "startChar": 35,
        "endLine": 13,
        "endChar": 64
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7efc52f3_cc756db9",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2020-09-17T18:10:28Z",
      "side": 1,
      "message": "Can remove \"users\"\n\n\"Client is used by ClientPool to help close SSH connections.\"",
      "parentUuid": "fcdbb386_46572127",
      "range": {
        "startLine": 13,
        "startChar": 35,
        "endLine": 13,
        "endChar": 64
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cac1324_ca407530",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2020-09-17T20:16:36Z",
      "side": 1,
      "message": "+1 for Client wraps an ssh.Client obtained from a ClientPool",
      "parentUuid": "7efc52f3_cc756db9",
      "range": {
        "startLine": 13,
        "startChar": 35,
        "endLine": 13,
        "endChar": 64
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "995a420a_b95fa600",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "s/Put/put/",
      "range": {
        "startLine": 16,
        "startChar": 55,
        "endLine": 16,
        "endChar": 58
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50913493_83951855",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "nit: Add newline after single line summary",
      "range": {
        "startLine": 29,
        "startChar": 1,
        "endLine": 29,
        "endChar": 48
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dba4ec83_486d6d88",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "nit: Repeated.",
      "range": {
        "startLine": 38,
        "startChar": 3,
        "endLine": 38,
        "endChar": 63
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ec968eb_c3b5dab3",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "Why are we exposing Client.Close() to users at all?\n\nA simpler API would be:\n\n  p :\u003d NewClientPool(...)\n  ...\n  c :\u003d p.Get(...)\n  defer c.Put()\n\n  // Use c.Client\n\nDifferences from current API:\n\n- Replace Pool.Put(Client) with Client.Put()\n\nWe never want the users to be able to Put() a Client in twodifferent Pool instances, which my suggested API captures better.\n\nThis does mean that Client internally needs a reference to Pool, but that\u0027s worthwhile for a cleaner user API.\n\nSimilarly, exposing KnownGood as a variable doesn\u0027t feel right. All we want the users to be able to do is tell us whether they think a Client is still good when they put it back. So, support just that (and no more).\n\n  func (c *Client) Put(healthy bool) {\n    // No need to actually track via a KnownGood variable.\n    // We can simply delete the Client from the Pool if it is unhealthy.\n    // In Pool.Get() we anyway assume that the client is in an unknown state, and the users always assume the same for the returned client.\n  }",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 41,
        "endChar": 68
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b2f5b92_94449520",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:58Z",
      "side": 1,
      "message": "As noted in another comment, I was confused by the docstring for Client that users had to call Close().\n\nThe rest of the comment above still stands.",
      "parentUuid": "1ec968eb_c3b5dab3",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 41,
        "endChar": 68
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02e5bce3_b14e7656",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2020-09-17T18:10:28Z",
      "side": 1,
      "message": "We can remove KnownGood variable if we do this:\n\nSay hostname is tied with Client.\n```\nfunc Put(c *Client) {\n  # Check if Client is good still.\n  s, err :\u003d c.NewSession()\n  if err !\u003d nil {\n    c.close()\n    return\n  }\n  s.Close()\n  p.pool[c.host] \u003d append(p.pool[c.host], c)\n}\n```\n\nWhether Client\u0027s should be tied with the pool is up to you/@ayatane.",
      "parentUuid": "9b2f5b92_94449520",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 41,
        "endChar": 68
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a9ac27_52a88bc8",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2020-09-17T20:16:36Z",
      "side": 1,
      "message": "Client.close() is unexported.\n\np.Put(c) vs c.Return() isn\u0027t a huge difference, but I prefer the former.  The latter is \"magic\"; it\u0027s not clear from the call site what is happening, esp. that a p is involved.\n\nSince we\u0027re now checking the client in Get, we don\u0027t actually need to track knownGood when putting clients back.  We can get rid of the Client wrapper here entirely.",
      "parentUuid": "02e5bce3_b14e7656",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 41,
        "endChar": 68
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bbade3e_12a14717",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2020-09-17T20:23:39Z",
      "side": 1,
      "message": "The reason for using Client now would be to tie SSH client + hostname.\nSo there is no need to do Put(hostname, Client)",
      "parentUuid": "c3a9ac27_52a88bc8",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 41,
        "endChar": 68
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59bf4f91_c0e4bd30",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2020-09-17T20:16:36Z",
      "side": 1,
      "message": "Rename to Pool since the ClientPool is redundant in this context.",
      "range": {
        "startLine": 45,
        "startChar": 5,
        "endLine": 45,
        "endChar": 15
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01a25e1d_efaab39e",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "Whey are we doing this if we claim that the user needs to check state of the Client?",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 76,
        "endChar": 11
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8f410ab_664e6278",
        "filename": "go/src/infra/cros/cmd/common-tls/internal/ssh/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2020-09-17T18:10:28Z",
      "side": 1,
      "message": "User\u0027s don\u0027t need to check the state of the Client.\nThey can simply use it.",
      "parentUuid": "01a25e1d_efaab39e",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 76,
        "endChar": 11
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c874c87e_2e2ef2de",
        "filename": "go/src/infra/cros/cmd/common-tls/provision.go",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2020-09-17T17:12:10Z",
      "side": 1,
      "message": "The word \"infra\" is in general very vague (different readers will have a very different meaning for infra in their heads).\n\nIn this case, we have more specific name handy: tlsssh ?",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 9
      },
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ca71d1_272ce023",
        "filename": "go/src/infra/cros/cmd/common-tls/ssh.go",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2020-09-17T20:16:36Z",
      "side": 1,
      "message": "Just delete this file?",
      "revId": "3bcfaa54224dd5be2a5785e688431d9a1b04c14e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}