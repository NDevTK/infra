{
  "comments": [
    {
      "key": {
        "uuid": "ea4d7486_88899ce4",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 14,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-06T19:37:32Z",
      "side": 1,
      "message": "Empty line before",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38aa2ea2_94e70974",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 14,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea4d7486_88899ce4",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "724660a0_b707177f",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 16,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-06T19:37:32Z",
      "side": 1,
      "message": "Use a single import block",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e27f6d96_ab823eb7",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 16,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "724660a0_b707177f",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a30bbff0_299a1fe2",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 31,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "When viewed from outside the package, the package name is prepended:\n\n priority.Request\n task.Request\n\nWhen seen like this, I have no idea what the difference between the two might be.  Compare for example:\n\n http.Request\n rpc.Request\n\nThe package name provides enough information to understand the difference between the two Requests.\n\nAnother design consideration, let\u0027s not end up in Autotest\u0027s situation where there are a half dozen different Host or Task classes all with subtly different or wildly different meanings.",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2ae2f5b_3c7efc43",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 31,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "I don\u0027t love priority.Request, agreed.\n\nWhat if I were to change the pacakge name to \"prioritized\". Then exported names would become prioritized.Request , prioritized.List, etc.",
      "parentUuid": "a30bbff0_299a1fe2",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "716f559e_b191f223",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 41,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-06T19:37:32Z",
      "side": 1,
      "message": "Premature optimization.  Using pointers means the GC will have to deal with a lot more small objects, which is potentially more expensive.",
      "range": {
        "startLine": 41,
        "startChar": 47,
        "endLine": 41,
        "endChar": 70
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee84d546_8b0c236c",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 41,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "716f559e_b191f223",
      "range": {
        "startLine": 41,
        "startChar": 47,
        "endLine": 41,
        "endChar": 70
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4f1400a_89b485b5",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 42,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-06T19:37:32Z",
      "side": 1,
      "message": "This type definition seems pointless to me.  It\u0027s also a poor variable name; it\u0027s not obvious from the name what it is.",
      "range": {
        "startLine": 42,
        "startChar": 5,
        "endLine": 42,
        "endChar": 9
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64871f09_943b15a2",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 42,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "The intent was that outside users would see it as type priority.List , which reads as what it is. Thoughts?",
      "parentUuid": "e4f1400a_89b485b5",
      "range": {
        "startLine": 42,
        "startChar": 5,
        "endLine": 42,
        "endChar": 9
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fafb2e1_543b7e65",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 52,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "This name is pretty long for a local variable. Shorter variable names are more idiomatic, e.g., result.",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 52,
        "endChar": 20
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e3b0402_e3abf4f8",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 52,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fafb2e1_543b7e65",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 52,
        "endChar": 20
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f00af1d_f1ea3963",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 57,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "This suggests to me that BestPriorityFor should be returning account.FreeBucket, instead of having to special-case it here.  It also seems to me that perhaps BestPriorityFor should live in this package, named priority, rather than the account package.\n\nSee my meta-comment about drawing the right lines between abstractions.",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8db67f8b_08bb9437",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 57,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "The FreeBucket is already assigned by BestPriorityFor for balances that can\u0027t afford anything else. But the case above on :54 is for requests that don\u0027t even have an account or account balance.\n\nAt the moment, I like account.BestPriorityFor, punting on moving it for now.",
      "parentUuid": "9f00af1d_f1ea3963",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e439d59c_e25f8ec6",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "This could be moved out to a separate function (and thus tested separately):\n\n func requestSortFunc(r []Request) func(int, int) bool {\n    return func(i, j int) bool { ... }\n }\n sort.SliceStable(result, requestSortFunc(request))",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b485796_ddb5a536",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "done (partially)",
      "parentUuid": "e439d59c_e25f8ec6",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eba4de6_c7f580eb",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 70,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "(see also stable sort comment below)\n\nThis is just:\n\n if a.Priority \u003d\u003d b.Priority:\n    \u003cspecial case\u003e\n else:\n    return a.Priority \u003c b.Priority\n\nI think the switch case is harder to understand here.",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69a5d165_8c2dbcf0",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 70,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "I agree. The switch was suggested by Prathmesh. But with your vote, I\u0027m moving back to if-else.",
      "parentUuid": "0eba4de6_c7f580eb",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640b8e66_4c933a41",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 75,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "Since you\u0027re doing a stable sort, I think the logic is simpler if you just sort by timestamp first and then by priority.\n\nsort.SliceStable(result, timeSortFunc(request))\nsort.SliceStable(result, prioritySortFunc(request))",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d16d34_13471bd2",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 75,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "That\u0027s more costly, as it means doing 2 sorts.\n\nAlso, eventually I want to use a heap instead of a list, and so I\u0027ll need a Less function that takes account of both priority and enqueue time anyway, so keeping this as is.",
      "parentUuid": "640b8e66_4c933a41",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9de2bdac_4731f35d",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 92,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "I can\u0027t really tell how/why this is used.  It\u0027s not clear to me that this function should be defined here rather than where it will be used.",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 92,
        "endChar": 61
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4705e521_59038c8b",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 92,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "It\u0027s defined here because it is a method on List, as I like the way pList.ForPriority(1) reads.",
      "parentUuid": "9de2bdac_4731f35d",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 92,
        "endChar": 61
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5934bcd_50fa7584",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 96,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "I think there\u0027s a good argument to use binary search here, since we will presumably be scheduling a lot of tests.  (But I can\u0027t say without looking at the caller, my instinct is that the caller should just be iterating through the list of requests once and detect the priority in-line)",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e75717a2_9bc1c2d9",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 96,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Good idea. Added a TODO as I don\u0027t want to optimize this yet (might end up being dumped anyway in favor of a generator).",
      "parentUuid": "d5934bcd_50fa7584",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b77eb35_54594274",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 128,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "This is just counting the number of jobs?  Is there a reason to use int32 specifically?",
      "range": {
        "startLine": 128,
        "startChar": 35,
        "endLine": 128,
        "endChar": 40
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c1c261_d9216342",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 128,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Because it is getting compared with a proto value that is defined as int32. Being explicit here about the type avoids need for ugly typecast at point of comparison.",
      "parentUuid": "9b77eb35_54594274",
      "range": {
        "startLine": 128,
        "startChar": 35,
        "endLine": 128,
        "endChar": 40
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01d1b7b2_d528eb09",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 129,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "just id is fine",
      "range": {
        "startLine": 129,
        "startChar": 5,
        "endLine": 129,
        "endChar": 14
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca4914ed_8fb6b128",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 129,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01d1b7b2_d528eb09",
      "range": {
        "startLine": 129,
        "startChar": 5,
        "endLine": 129,
        "endChar": 14
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5949ed27_b0167c37",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 130,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "The default value is zero already:\n\nhttps://play.golang.org/p/c7Z7S9PumB8\n\nSee also \n\nhttps://blog.golang.org/go-maps-in-action",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 31
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a90f138_aeadc0bd",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 130,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5949ed27_b0167c37",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 31
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21239e2d_262a2a6a",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "This seems potentially expensive to calculate on every loop.",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec5ebe32_74a313f0",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "It\u0027s a single loop through O(workers) list, shouldn\u0027t be too bad and we only do it once. Don\u0027t think I want to optimize at this level yet.",
      "parentUuid": "21239e2d_262a2a6a",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad2c4cbb_7de9702c",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 133,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "Do you need to check membership?  Go maps have reasonable default behavior.",
      "range": {
        "startLine": 133,
        "startChar": 14,
        "endLine": 133,
        "endChar": 55
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9d32f40_ffa5ce87",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 133,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad2c4cbb_7de9702c",
      "range": {
        "startLine": 133,
        "startChar": 14,
        "endLine": 133,
        "endChar": 55
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d07df872_91efa6a2",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 138,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "r is fine for a variable name, the scope is small enough to keep in the reviewer\u0027s/reader\u0027s mind.",
      "range": {
        "startLine": 138,
        "startChar": 8,
        "endLine": 138,
        "endChar": 26
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3369a3e_2eaaf935",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 138,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d07df872_91efa6a2",
      "range": {
        "startLine": 138,
        "startChar": 8,
        "endLine": 138,
        "endChar": 26
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcfe044f_72d47daa",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 141,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "Go philosophy is to not rely on asserts.\n\nhttps://golang.org/doc/faq#assertions\n\nInstead, make it easy to tell whether the code is correct (and add tests), rather than using an assert (which is kind of like admitting that we don\u0027t know what the code will actually do).",
      "range": {
        "startLine": 141,
        "startChar": 12,
        "endLine": 141,
        "endChar": 36
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3439c61c_1cd7c73b",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 141,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcfe044f_72d47daa",
      "range": {
        "startLine": 141,
        "startChar": 12,
        "endLine": 141,
        "endChar": 36
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d7462a4_1c1d40d1",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 144,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "c is fine for a variable name",
      "range": {
        "startLine": 144,
        "startChar": 6,
        "endLine": 144,
        "endChar": 19
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e210e99d_b0772ca5",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 144,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d7462a4_1c1d40d1",
      "range": {
        "startLine": 144,
        "startChar": 6,
        "endLine": 144,
        "endChar": 19
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c714b5_00e3fdac",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 146,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "A large bulk of logic could be extracted out into functions:\n\n numRunningJobsForAccount()\n isAccountOverLimit()  # or GetAccountsOverLimit() for performance\n\nThen this function just becomes:\n\n # adapt pseudocode as needed\n for a in accounts:\n   if isAccountoverLimit(a):\n     for job in jobs[a]:\n       demoteJob(job)  # j.Priority \u003d FreeBucket",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab1283e_b2321552",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 16
      },
      "lineNbr": 146,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Not really as written, because I need to keep a running tally of \"running for account\" while i iterate, so that I can start demoting requests only once they cross the threshold.\n\nAnyway, with the various unnece4ssary map-membership checks removed, the function is a lot shorter and more readable now.",
      "parentUuid": "d0c714b5_00e3fdac",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e521af32_f1b7658d",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 14,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "Empty line before",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be6f953d_5dae1afb",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 14,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e521af32_f1b7658d",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5878a56_7efa6804",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 21,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "Use single import block",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55e01975_90774164",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 21,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5878a56_7efa6804",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84b8f494_0c917440",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 64,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "This test is hard to read.  This test especially could use a comment describing the case it is testing (the previous two tests could also use comments).",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3acb6229_cfcea607",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 64,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Added comments.",
      "parentUuid": "84b8f494_0c917440",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70a3cfa0_5232c4ca",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "Use a constant so the test is reproducible.",
      "range": {
        "startLine": 66,
        "startChar": 12,
        "endLine": 66,
        "endChar": 22
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97044357_0b1f622d",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70a3cfa0_5232c4ca",
      "range": {
        "startLine": 66,
        "startChar": 12,
        "endLine": 66,
        "endChar": 22
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcedd784_28408b7c",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 148,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "All the tests below here are kind of bad.  It\u0027s not clear what exactly they are testing, and if they break, I don\u0027t think I could tell what exactly broke.  Instead of testing the \"full set of behaviors\", make separate tests for each single behavior, e.g.\n\n High priority job gets sorted before low priority job.\n When account exceeds max fanout, jobs are deprioritized.\n etc.",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f2d262_ae5ddec8",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 148,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "I\u0027ve added comments to the preceeding 3 tests to hopefully clarify what they are f9or.\n\nI agree this test is rather complicated, but I wanted something to cover multiple behaviors at once, because the behaviors interact. Hopefully the comments within this test explain what the setup and expectations are.",
      "parentUuid": "fcedd784_28408b7c",
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f409a17_b1669a13",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 246,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "You can just write these as pRequests[3:3] to be consistent visually.",
      "range": {
        "startLine": 246,
        "startChar": 2,
        "endLine": 246,
        "endChar": 14
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80a2fe5a_7bbfecc2",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 246,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f409a17_b1669a13",
      "range": {
        "startLine": 246,
        "startChar": 2,
        "endLine": 246,
        "endChar": 14
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51d93f8e_b8da876f",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 252,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "I think it makes more sense to convert to int32 here instead of for each loop, since priority value is supposed to be int32.",
      "range": {
        "startLine": 252,
        "startChar": 17,
        "endLine": 252,
        "endChar": 18
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ce2cc75_3c2519c8",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 252,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51d93f8e_b8da876f",
      "range": {
        "startLine": 252,
        "startChar": 17,
        "endLine": 252,
        "endChar": 18
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62f6f240_212314e0",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 264,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T00:29:37Z",
      "side": 1,
      "message": "Bad function name, it\u0027s visually not distinguishable from ts (all lower case).  It\u0027s also a bit short.  Very short names like 1-2 chars are often used and preferred as local variables.",
      "range": {
        "startLine": 264,
        "startChar": 5,
        "endLine": 264,
        "endChar": 7
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d29a0c81_14bc9325",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 16
      },
      "lineNbr": 264,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62f6f240_212314e0",
      "range": {
        "startLine": 264,
        "startChar": 5,
        "endLine": 264,
        "endChar": 7
      },
      "revId": "07c4948cbfd7aea6060baa732c61559edbe55302",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}