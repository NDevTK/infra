{
  "comments": [
    {
      "key": {
        "uuid": "50c78fa2_a601f1df",
        "filename": "appengine/findit/handlers/code_coverage.py",
        "patchSetId": 6
      },
      "lineNbr": 784,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-10-25T19:58:31Z",
      "side": 1,
      "message": "this unnecessarily fetches coverage data which is much larger than keys. We only need keys\n\n  .fetch(keys_only\u003dTrue)",
      "range": {
        "startLine": 784,
        "startChar": 62,
        "endLine": 784,
        "endChar": 67
      },
      "revId": "71d83e9f3a86ee2b83b9bf06cd84b6fb8456589f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe5b3f5b_a40d2433",
        "filename": "appengine/findit/handlers/code_coverage.py",
        "patchSetId": 6
      },
      "lineNbr": 785,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-10-25T19:58:31Z",
      "side": 1,
      "message": "the update in L756 and the deletion here should be done concurrently",
      "revId": "71d83e9f3a86ee2b83b9bf06cd84b6fb8456589f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7136c90_64979f0f",
        "filename": "appengine/findit/handlers/code_coverage.py",
        "patchSetId": 6
      },
      "lineNbr": 1134,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-10-25T19:58:31Z",
      "side": 1,
      "message": "not exactly about this CL, but this variable seems redundant. It is latest_entity.cl_patchset.patchset",
      "range": {
        "startLine": 1134,
        "startChar": 4,
        "endLine": 1134,
        "endChar": 19
      },
      "revId": "71d83e9f3a86ee2b83b9bf06cd84b6fb8456589f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "663ef760_fecb1187",
        "filename": "appengine/findit/handlers/code_coverage.py",
        "patchSetId": 6
      },
      "lineNbr": 1139,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-10-25T19:58:31Z",
      "side": 1,
      "message": "this must also check that latest_entity isn\u0027t based on something else, otherwise cache invalidation must follow the transitive closure",
      "range": {
        "startLine": 1139,
        "startChar": 9,
        "endLine": 1139,
        "endChar": 22
      },
      "revId": "71d83e9f3a86ee2b83b9bf06cd84b6fb8456589f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a06bf786_b2870412",
        "filename": "appengine/findit/model/code_coverage.py",
        "patchSetId": 6
      },
      "lineNbr": 182,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-10-25T19:58:31Z",
      "side": 1,
      "message": "do we really need this property? nothing seems to be using it. If this is purely for diagnostics by humans, logs should do",
      "revId": "71d83e9f3a86ee2b83b9bf06cd84b6fb8456589f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1acf02e_3879f08e",
        "filename": "appengine/findit/model/code_coverage.py",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2019-10-25T19:58:31Z",
      "side": 1,
      "message": "this index is never used because; it is the composite index that is used",
      "range": {
        "startLine": 199,
        "startChar": 33,
        "endLine": 199,
        "endChar": 45
      },
      "revId": "71d83e9f3a86ee2b83b9bf06cd84b6fb8456589f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}