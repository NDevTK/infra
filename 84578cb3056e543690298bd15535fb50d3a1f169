{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c5a014b5_918375d2",
        "filename": "go/src/infra/cros/tlslib/firmware.go",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-28T20:24:43Z",
      "side": 1,
      "message": "Full path?",
      "range": {
        "startLine": 44,
        "startChar": 30,
        "endLine": 44,
        "endChar": 53
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "308a95dd_da67f242",
        "filename": "go/src/infra/cros/tlslib/firmware.go",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2022-06-28T23:53:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5a014b5_918375d2",
      "range": {
        "startLine": 44,
        "startChar": 30,
        "endLine": 44,
        "endChar": 53
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6312252e_5bbc6ce9",
        "filename": "go/src/infra/cros/tlslib/firmware.go",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-28T20:24:43Z",
      "side": 1,
      "message": "nit: Create constant and reuse?",
      "range": {
        "startLine": 74,
        "startChar": 24,
        "endLine": 74,
        "endChar": 57
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d964548_1547f8cd",
        "filename": "go/src/infra/cros/tlslib/firmware.go",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2022-06-28T23:53:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6312252e_5bbc6ce9",
      "range": {
        "startLine": 74,
        "startChar": 24,
        "endLine": 74,
        "endChar": 57
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "609628fb_d2f63715",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-28T20:24:43Z",
      "side": 1,
      "message": "This will always need to run before provisioning firmware.\n\nSo place this logic after \n```\nuiStabilizeCtx, cancel :\u003d context.WithTimeout(ctx, 360*time.Second)\n```",
      "range": {
        "startLine": 142,
        "startChar": 3,
        "endLine": 151,
        "endChar": 4
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bc82145_a5ecf4a8",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2022-06-28T23:53:57Z",
      "side": 1,
      "message": "I think if firmware update happens then there will be another reboot, so you might still want make sure the UI is stabilized after the new reboot?",
      "parentUuid": "609628fb_d2f63715",
      "range": {
        "startLine": 142,
        "startChar": 3,
        "endLine": 151,
        "endChar": 4
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d579f120_79539fb9",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-29T00:01:14Z",
      "side": 1,
      "message": "Another reboot can happen, but then UI stablilizing isn\u0027t required after the first one as the OS isn\u0027t changing.",
      "parentUuid": "5bc82145_a5ecf4a8",
      "range": {
        "startLine": 142,
        "startChar": 3,
        "endLine": 151,
        "endChar": 4
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adebb350_b3aebe55",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2022-06-29T00:19:16Z",
      "side": 1,
      "message": "Gotcha, applied the comment.",
      "parentUuid": "d579f120_79539fb9",
      "range": {
        "startLine": 142,
        "startChar": 3,
        "endLine": 151,
        "endChar": 4
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a1c041_4d8295bc",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-28T20:24:43Z",
      "side": 1,
      "message": "There is no need to do this check?\n\nRunning firmware update will be update or no-op.",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 168,
        "endChar": 115
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74908891_babe96de",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2022-06-28T23:53:57Z",
      "side": 1,
      "message": "During the testing stage we found there is a failure pattern that firmware updater report success but firmware version doesn\u0027t change after reboot, so we\u0027ll need to make sure the firmware is actually updated and raise an error if it happens.",
      "parentUuid": "12a1c041_4d8295bc",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 168,
        "endChar": 115
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ff11088_b27c3f8a",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-29T00:01:14Z",
      "side": 1,
      "message": "This can be done much easily, you can see if the slot switched + is the newer version.",
      "parentUuid": "74908891_babe96de",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 168,
        "endChar": 115
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69ba072a_b9504a83",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2022-06-29T00:19:16Z",
      "side": 1,
      "message": "That\u0027s the same then? As I\u0027ll need to getAvailableFirmwareVersion to make knows what\u0027s the newer(expected) version.\n\nAlso, right know I\u0027m trying to use currentFw !\u003d targetFw to determine if an reboot is needed. I thought about use output(stderr) of chromeos-firmwareupdate to determine if it\u0027s an no-op but it seems a bit hacky to parse stderr.",
      "parentUuid": "4ff11088_b27c3f8a",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 168,
        "endChar": 115
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f257ed99_2b458a3b",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-29T00:49:46Z",
      "side": 1,
      "message": "I guess what I\u0027m saying is easier is that:\n 1. Run fw updater\n  Success? Ok go on\n  Fail? Error out\n 2. Check if fw update is going to be tried on next reboot\n  Yes? reboot\n  No? don\u0027t reboot at all\n\nThis doesn\u0027t require version parsing at all, but checking that the slot switch after reboot.\n\n\"is the newer version\" \u003d\u003d newer slot ;)\n\nSorry for my lack of clarity.",
      "parentUuid": "69ba072a_b9504a83",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 168,
        "endChar": 115
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4ab0783_822f52ab",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1307525
      },
      "writtenOn": "2022-06-29T02:36:47Z",
      "side": 1,
      "message": "Gotcha, applied your comment in the new patchset.",
      "parentUuid": "f257ed99_2b458a3b",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 168,
        "endChar": 115
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93f05570_2ce40e7d",
        "filename": "go/src/infra/cros/tlslib/provision.go",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1351160
      },
      "writtenOn": "2022-06-29T02:50:15Z",
      "side": 1,
      "message": "If you want to simplify more, you can even omit the version check.\n\nBut if you want to keep it as a hard check, I\u0027d recommend adding logs of the version when complete / erroring as well.\n\nThis will help debugging when fw updates fail from version X to Y, etc\n\nOtherwise LGTM.",
      "parentUuid": "f4ab0783_822f52ab",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 168,
        "endChar": 115
      },
      "revId": "84578cb3056e543690298bd15535fb50d3a1f169",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}