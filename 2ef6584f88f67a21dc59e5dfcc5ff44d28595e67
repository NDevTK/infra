{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0e5cc0d1_b3bace63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-21T05:56:59Z",
      "side": 1,
      "message": "Generally LGTM, Defer Jared to approve.",
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d39d2d93_1d36b70b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-22T22:32:36Z",
      "side": 1,
      "message": "LGTM except for one other nit.",
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e89bd35_3aa55e8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-22T22:41:46Z",
      "side": 1,
      "message": "One last thing--are the test cases in the CL description all without running `crosfleet login`? Can you add a couple of test cases after logging in to ensure logged-in behavior is not affected?",
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f3d993d_366d2924",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1526722
      },
      "writtenOn": "2022-02-22T22:46:06Z",
      "side": 1,
      "message": "No all the test cases in the CL description are after login with my account. I was not able to run any commands without logging in. Is that possible?",
      "parentUuid": "5e89bd35_3aa55e8d",
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "191488e8_75cc37ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-22T22:56:37Z",
      "side": 1,
      "message": "Resolved offline; the test cases are all after having logged in with a public service account.",
      "parentUuid": "6f3d993d_366d2924",
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e80859e3_16e7f136",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 633,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-21T05:56:59Z",
      "side": 1,
      "message": "it\u0027s not recommended to pass a variable only for logging, as it indicates that the error msg should be annotated at the caller-side",
      "range": {
        "startLine": 633,
        "startChar": 92,
        "endLine": 633,
        "endChar": 99
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84ef9294_78fb4b49",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 633,
      "author": {
        "id": 1526722
      },
      "writtenOn": "2022-02-22T01:07:39Z",
      "side": 1,
      "message": "I have seen other functions in this file which are using cmdName to format error messages. I am ok with removing cmdName from here, defer to Jared if that is necessary.",
      "parentUuid": "e80859e3_16e7f136",
      "range": {
        "startLine": 633,
        "startChar": 92,
        "endLine": 633,
        "endChar": 99
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c5b9362_de909310",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 633,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-22T22:32:25Z",
      "side": 1,
      "message": "Probably not the bets practice but I\u0027m fine with it especially given that it\u0027s already being done elsewhere (by me) in the crosfleet code.",
      "parentUuid": "84ef9294_78fb4b49",
      "range": {
        "startLine": 633,
        "startChar": 92,
        "endLine": 633,
        "endChar": 99
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7e22532_d47837d8",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 644,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-22T22:32:25Z",
      "side": 1,
      "message": "Should this be `||`?",
      "range": {
        "startLine": 644,
        "startChar": 15,
        "endLine": 644,
        "endChar": 18
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0954fe0_6d2bca33",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 644,
      "author": {
        "id": 1526722
      },
      "writtenOn": "2022-02-22T22:46:06Z",
      "side": 1,
      "message": "It should be \"\u0026\u0026\" as we only want to return from the function if we know it is a public user and public users are not allowed to run this command. If there is an error(indicating public user) but public users are allowed we just proceed with the rest of the validation. If there is no error in the next step we check the ok status and return.",
      "parentUuid": "b7e22532_d47837d8",
      "range": {
        "startLine": 644,
        "startChar": 15,
        "endLine": 644,
        "endChar": 18
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69026256_a24bfe9a",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 644,
      "author": {
        "id": 1438503
      },
      "writtenOn": "2022-02-22T22:56:54Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "d0954fe0_6d2bca33",
      "range": {
        "startLine": 644,
        "startChar": 15,
        "endLine": 644,
        "endChar": 18
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "752a8035_d2457fc3",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 647,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-21T05:56:59Z",
      "side": 1,
      "message": "if err !\u003d nil, wrap the error msg for logging.",
      "range": {
        "startLine": 644,
        "startChar": 1,
        "endLine": 647,
        "endChar": 2
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79a162b4_a9fc2168",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 647,
      "author": {
        "id": 1526722
      },
      "writtenOn": "2022-02-22T01:07:39Z",
      "side": 1,
      "message": "We don\u0027t really care about this error message as we only want to determine that the run is by a private user. Showing this error will be misleading.",
      "parentUuid": "752a8035_d2457fc3",
      "range": {
        "startLine": 644,
        "startChar": 1,
        "endLine": 647,
        "endChar": 2
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23bff488_827489dd",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 647,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2022-02-22T04:48:06Z",
      "side": 1,
      "message": "you may not need to print it here, but probably keep an eye on the backend to see if there\u0027s any errors.",
      "parentUuid": "79a162b4_a9fc2168",
      "range": {
        "startLine": 644,
        "startChar": 1,
        "endLine": 647,
        "endChar": 2
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10ae62c7_e363c3f6",
        "filename": "go/src/infra/cmd/crosfleet/internal/run/testcommon.go",
        "patchSetId": 14
      },
      "lineNbr": 647,
      "author": {
        "id": 1526722
      },
      "writtenOn": "2022-02-22T22:46:06Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "23bff488_827489dd",
      "range": {
        "startLine": 644,
        "startChar": 1,
        "endLine": 647,
        "endChar": 2
      },
      "revId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "2ef6584f88f67a21dc59e5dfcc5ff44d28595e67",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}