{
  "comments": [
    {
      "key": {
        "uuid": "f16a5886_226aa0b6",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 18,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-11T00:56:06Z",
      "side": 1,
      "message": "nit: // prefix at each line is more typical in Godoc.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 18,
        "endChar": 2
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3955894_9bf31cc4",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 18,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-11T00:58:20Z",
      "side": 1,
      "message": "err, but ignore. It seems godoc folks actually use /* all the time.\nhttps://github.com/golang/tools/blob/master/cmd/godoc/doc.go",
      "parentUuid": "f16a5886_226aa0b6",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 18,
        "endChar": 2
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3d0d0c3_39349cd3",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 18,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:18:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d3955894_9bf31cc4",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 18,
        "endChar": 2
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45756f5f_951b509f",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "üëç",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 72
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40f9c121_3a5e7a12",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "i guess this is smth that will be added in later CLs, right?",
      "range": {
        "startLine": 54,
        "startChar": 42,
        "endLine": 54,
        "endChar": 47
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "708485dc_6296edad",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:18:44Z",
      "side": 1,
      "message": "It\u0027s not in the current stack, because it requires more than the currently implemented primitives. Added clarification.",
      "parentUuid": "40f9c121_3a5e7a12",
      "range": {
        "startLine": 54,
        "startChar": 42,
        "endLine": 54,
        "endChar": 47
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a66fc3_6b923201",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:19:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "708485dc_6296edad",
      "range": {
        "startLine": 54,
        "startChar": 42,
        "endLine": 54,
        "endChar": 47
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "889c1bff_4d4653ad",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "I think this can actually be deleted (but maybe in later CL) and just cap by max in line 59.",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 44
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e194831_2c16e7ad",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:18:44Z",
      "side": 1,
      "message": "Nope, I want the value to not be latched back down to MaxBalance if it was above it prior to the update. There\u0027s a test for this already in fact.",
      "parentUuid": "889c1bff_4d4653ad",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 44
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e60b92b9_cf1cbb8a",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T21:03:02Z",
      "side": 1,
      "message": "oh, i see. Consider adding a comment before this line then. It\u0027s not clear that this is the intent from godoc for this method.",
      "parentUuid": "2e194831_2c16e7ad",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 44
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b802c0be_15dc9e7d",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.go",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T21:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e60b92b9_cf1cbb8a",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 44
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aacd973a_bbd503fe",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.proto",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "consider sticking all protos into one package or maybe even single file.\nie is there an intended use-case for just vector.proto w/o account config?\n\nof course, if you follow this, it\u0027s fine to do later to avoid excessive rebases.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 58
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a9edf5_ab4f5c48",
        "filename": "go/src/infra/qscheduler/qslib/types/account/account.proto",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:18:44Z",
      "side": 1,
      "message": "Some of the protos have method implemented on them, which (needs? should?) be in the same package as the struct definition. And not all of the proto-using packages depend on all the others, hence this separation.",
      "parentUuid": "aacd973a_bbd503fe",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 58
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d6d7d5d_637f0c77",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-11T00:58:20Z",
      "side": 1,
      "message": "nit: add empty line.",
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcd00cec_7c656061",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T17:33:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d6d7d5d_637f0c77",
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54c2c832_7fb8fb0d",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T17:35:47Z",
      "side": 1,
      "message": "Actually, I think this is fixed later in the stack. It\u0027s a pain to split the fix back into this CL at this point.",
      "parentUuid": "bcd00cec_7c656061",
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf20d5e0_661d1ddd",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "54c2c832_7fb8fb0d",
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9439a28_a917d473",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "i see why you want it, but it\u0027s not equivalent -- IntVector is just a slice; it\u0027s not hiding a Proto inside. I haven\u0027t read all its usages yet, so I don\u0027t yet have concrete improvement proposals.",
      "range": {
        "startLine": 30,
        "startChar": 27,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed91993f_b4a20ad1",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:18:44Z",
      "side": 1,
      "message": "added comment.",
      "parentUuid": "e9439a28_a917d473",
      "range": {
        "startLine": 30,
        "startChar": 27,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85ad549f_671ae3d9",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:19:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ed91993f_b4a20ad1",
      "range": {
        "startLine": 30,
        "startChar": 27,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d623a83_a8232a6e",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 36,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "i\u0027m confused here:\nif it\u0027s 0-initialized, why is there an input argument?\nand if len(v) is always 3, then you may just return \u0026Vector{Values: v}\n\nUpdate: ah, i see the intended usage is either len(v) is 0 or len(v) is 3. Then, perhaps:\n  for len(v) \u003c 3 { v \u003d append(v, 0) }\n  return \u0026Vector{Values: v}",
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f0169a1_03ee94d1",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 36,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:18:44Z",
      "side": 1,
      "message": "Yep. Added comment.",
      "parentUuid": "8d623a83_a8232a6e",
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37fc4c01_e9e85aac",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "i\u0027d actually gamble that this is slightly slower than passing by value.",
      "range": {
        "startLine": 45,
        "startChar": 11,
        "endLine": 45,
        "endChar": 12
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da51740e_f4677571",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "üëç I miss assertions in Go. For unknown to me reason, canonical Go stays clear of them.",
      "range": {
        "startLine": 49,
        "startChar": 3,
        "endLine": 49,
        "endChar": 12
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e267c2c_70e1d80f",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 77,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T18:19:02Z",
      "side": 1,
      "message": "why extra loop instead of ans.Values[i] \u003d a.Values[i] + b.Values[i]  below?",
      "range": {
        "startLine": 77,
        "startChar": 1,
        "endLine": 77,
        "endChar": 27
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85768fd8_563244b2",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 77,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T19:18:44Z",
      "side": 1,
      "message": "This works even if a.Values or b.Values are not of the correct length.\n\nHowever, I can drop this line by passing a.Values to the New() constructor.",
      "parentUuid": "0e267c2c_70e1d80f",
      "range": {
        "startLine": 77,
        "startChar": 1,
        "endLine": 77,
        "endChar": 27
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641d2528_6bf3ba2e",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 77,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-13T21:03:02Z",
      "side": 1,
      "message": "TBH, i don\u0027t understand why you want to support vectors of different lengths.\nGiven New() func godoc \" with the correct underlying slice size.\", I\u0027d expect all Vectors to have length exactly NumPriorities. Is this not the case?",
      "parentUuid": "85768fd8_563244b2",
      "range": {
        "startLine": 77,
        "startChar": 1,
        "endLine": 77,
        "endChar": 27
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e70a0286_86aad5ca",
        "filename": "go/src/infra/qscheduler/qslib/types/vector/vector.go",
        "patchSetId": 14
      },
      "lineNbr": 77,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-13T21:07:53Z",
      "side": 1,
      "message": "I\u0027m being a bit defensive here, in case for instance one day NumPriorities is changed I can still deserialize old vector protos and they won\u0027t break here.",
      "parentUuid": "641d2528_6bf3ba2e",
      "range": {
        "startLine": 77,
        "startChar": 1,
        "endLine": 77,
        "endChar": 27
      },
      "revId": "3702c2952d361860c71489a07ad7b70c6da9a523",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}