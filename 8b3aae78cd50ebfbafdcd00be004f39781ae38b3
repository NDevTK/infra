{
  "comments": [
    {
      "key": {
        "uuid": "76f4d497_ff963924",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/gen.go",
        "patchSetId": 19
      },
      "lineNbr": 14,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Empty line before (check other files too).",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f7e026e_207cca34",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/gen.go",
        "patchSetId": 19
      },
      "lineNbr": 16,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Commented on previous CL, but probably do not want to add go install line here.",
      "range": {
        "startLine": 16,
        "startChar": 14,
        "endLine": 16,
        "endChar": 61
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2acee08_9b170578",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.go",
        "patchSetId": 19
      },
      "lineNbr": 26,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Don\u0027t define interfaces where they are implemented, define them where they are used.\n\ngo/gocomments#TOC-Interfaces\n\nThis is also a code smell that you\u0027re doing unnecessary OOP class hierarchy taxonomy, see below comment.",
      "range": {
        "startLine": 23,
        "startChar": 17,
        "endLine": 26,
        "endChar": 1
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3ce996c_adb6defa",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.go",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think you\u0027re being too clever here.  You do not need a whole layer of abstraction for scheduler actions (this smells like Autotest AgentTasks all over again, as well as some old personal code that I would be embarrassed to share).",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65e9446_a2fe44bf",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.proto",
        "patchSetId": 19
      },
      "lineNbr": 21,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Why is this a proto?  This doesn\u0027t sound like something that should cross RPC boundaries.\n\nDitto everything here.",
      "range": {
        "startLine": 21,
        "startChar": 8,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2be9d6f5_56ef2ed6",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 30,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "This is a smell that you\u0027re being too clever.  Don\u0027t use goroutines/channels if your code can run synchronously, and at a glance it doesn\u0027t appear that QuotaSchedule has any need to run concurrently with other code.\n\ngo/gocomments#TOC-SynchronousFunctions",
      "range": {
        "startLine": 30,
        "startChar": 60,
        "endLine": 30,
        "endChar": 85
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db79ce3c_fa8fef78",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Cast to int32 here so we don\u0027t ever have priority variables of the wrong type.",
      "range": {
        "startLine": 36,
        "startChar": 17,
        "endLine": 36,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42453904_42c648c2",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "This loop is hugely expensive, just eyeballing it:\n\n for priority\n     for worker\n     for worker\n     for account\n         for worker\n         for worker\n         for worker\n         for job",
      "range": {
        "startLine": 36,
        "startChar": 48,
        "endLine": 36,
        "endChar": 64
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e43b0dad_99159c9e",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 93,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "don\u0027t use capital I",
      "range": {
        "startLine": 93,
        "startChar": 5,
        "endLine": 93,
        "endChar": 7
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "225c6104_ee9cc856",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 123,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Move the body of this for loop into a function reprioritizeAccountTasks or similar.\n\nOverall, I think the functions in this file could be broken into smaller logical parts.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "026fa0aa_dfc67520",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 162,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "What\u0027s the point of sending the muts out a channel?\n\nPresumably, this is for logging the changes.  However, it doesn\u0027t make sense in that case to use a Mutater interface, since the receiver isn\u0027t interested in calling the Mutate method.  Instead, it should probably be using something like an Event interface:\n\n type Event interface {\n    func EventString() string\n }\n\nThat way, the receiver can get a string representation without having to do a type assertion.\n\n(But either way, the caller is going to have to do type assertions to get back the original struct and access its fields.)",
      "range": {
        "startLine": 161,
        "startChar": 4,
        "endLine": 162,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dadea611_de529f1e",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 194,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "This seems very expensive.  You only need to iterate through the workers once to associate them with an account.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e3db910_39c6bfd7",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 197,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think it\u0027s clearer just to write worker.RunningTask !\u003d nil  I had to stop and think about what IsIdle() might mean in the context of this code to guess that it is a nil check.",
      "range": {
        "startLine": 197,
        "startChar": 6,
        "endLine": 197,
        "endChar": 21
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ac5dfb8_506e17b4",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 216,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Calculating banned accounts could be moved to a separate function.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bd93cf0_ecd81cae",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 224,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I don\u0027t feel like this function belongs in the types package, it should just be implemented here.",
      "range": {
        "startLine": 224,
        "startChar": 7,
        "endLine": 224,
        "endChar": 24
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03a8281e_e7181cd2",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 226,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think the logic here could be clearer, possibly by pulling out functions.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be4c164d_670f6cec",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler_test.go",
        "patchSetId": 19
      },
      "lineNbr": 28,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think you\u0027d be better served using an injected interface approach\n\n type Mutater interface {\n   func AssignIdleWorker(...)\n   func ChangePriority(...)\n   ....\n }\n\n type LoggignMutator struct {\n     RealMutator RealMutator\n     storedCalls []...\n }\n\n func (m *LoggingMutator) AssignIdleWorker(...) {\n     m.storedCalls \u003d append(m.storedCalls, ...)\n     return m.RealMutator.AssignIdleWorkers(...)\n }\n\nThen, you could also have a NoOpMutater and a MetricsMutator and a RealMutator, etc.",
      "range": {
        "startLine": 28,
        "startChar": 5,
        "endLine": 28,
        "endChar": 20
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}