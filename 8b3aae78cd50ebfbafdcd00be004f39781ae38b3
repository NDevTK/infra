{
  "comments": [
    {
      "key": {
        "uuid": "76f4d497_ff963924",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/gen.go",
        "patchSetId": 19
      },
      "lineNbr": 14,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Empty line before (check other files too).",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5937954b_91a7304e",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/gen.go",
        "patchSetId": 19
      },
      "lineNbr": 14,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T01:45:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76f4d497_ff963924",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f7e026e_207cca34",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/gen.go",
        "patchSetId": 19
      },
      "lineNbr": 16,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Commented on previous CL, but probably do not want to add go install line here.",
      "range": {
        "startLine": 16,
        "startChar": 14,
        "endLine": 16,
        "endChar": 61
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df003e2a_60700cae",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/gen.go",
        "patchSetId": 19
      },
      "lineNbr": 16,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T01:45:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f7e026e_207cca34",
      "range": {
        "startLine": 16,
        "startChar": 14,
        "endLine": 16,
        "endChar": 61
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2acee08_9b170578",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.go",
        "patchSetId": 19
      },
      "lineNbr": 26,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Don\u0027t define interfaces where they are implemented, define them where they are used.\n\ngo/gocomments#TOC-Interfaces\n\nThis is also a code smell that you\u0027re doing unnecessary OOP class hierarchy taxonomy, see below comment.",
      "range": {
        "startLine": 23,
        "startChar": 17,
        "endLine": 26,
        "endChar": 1
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2acf646c_245efa4b",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.go",
        "patchSetId": 19
      },
      "lineNbr": 26,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "Punting on moving this, but adding TODO to move it to scheduler package.",
      "parentUuid": "b2acee08_9b170578",
      "range": {
        "startLine": 23,
        "startChar": 17,
        "endLine": 26,
        "endChar": 1
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3ce996c_adb6defa",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.go",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think you\u0027re being too clever here.  You do not need a whole layer of abstraction for scheduler actions (this smells like Autotest AgentTasks all over again, as well as some old personal code that I would be embarrassed to share).",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6171b070_ce3647d2",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.go",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T01:45:18Z",
      "side": 1,
      "message": "See other comment on the purpose of Mutaters.",
      "parentUuid": "b3ce996c_adb6defa",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d65e9446_a2fe44bf",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.proto",
        "patchSetId": 19
      },
      "lineNbr": 21,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Why is this a proto?  This doesn\u0027t sound like something that should cross RPC boundaries.\n\nDitto everything here.",
      "range": {
        "startLine": 21,
        "startChar": 8,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3ef1ec3_791de9c3",
        "filename": "go/src/infra/qscheduler/qslib/mutaters/mutaters.proto",
        "patchSetId": 19
      },
      "lineNbr": 21,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T01:45:18Z",
      "side": 1,
      "message": "See other comment.",
      "parentUuid": "d65e9446_a2fe44bf",
      "range": {
        "startLine": 21,
        "startChar": 8,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2be9d6f5_56ef2ed6",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 30,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "This is a smell that you\u0027re being too clever.  Don\u0027t use goroutines/channels if your code can run synchronously, and at a glance it doesn\u0027t appear that QuotaSchedule has any need to run concurrently with other code.\n\ngo/gocomments#TOC-SynchronousFunctions",
      "range": {
        "startLine": 30,
        "startChar": 60,
        "endLine": 30,
        "endChar": 85
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "111e292a_d32c5bda",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 30,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-15T22:51:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2be9d6f5_56ef2ed6",
      "range": {
        "startLine": 30,
        "startChar": 60,
        "endLine": 30,
        "endChar": 85
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db79ce3c_fa8fef78",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Cast to int32 here so we don\u0027t ever have priority variables of the wrong type.",
      "range": {
        "startLine": 36,
        "startChar": 17,
        "endLine": 36,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42453904_42c648c2",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "This loop is hugely expensive, just eyeballing it:\n\n for priority\n     for worker\n     for worker\n     for account\n         for worker\n         for worker\n         for worker\n         for job",
      "range": {
        "startLine": 36,
        "startChar": 48,
        "endLine": 36,
        "endChar": 64
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92a04463_67c6c066",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "Agreed, there are possible improvements. Don\u0027t want to optimize prematurely, but there are quite a number of candidates. Added TODO with one idea.",
      "parentUuid": "42453904_42c648c2",
      "range": {
        "startLine": 36,
        "startChar": 48,
        "endLine": 36,
        "endChar": 64
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7703018d_a0ea910c",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db79ce3c_fa8fef78",
      "range": {
        "startLine": 36,
        "startChar": 17,
        "endLine": 36,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e43b0dad_99159c9e",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 93,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "don\u0027t use capital I",
      "range": {
        "startLine": 93,
        "startChar": 5,
        "endLine": 93,
        "endChar": 7
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c433bc1f_9fbdc74f",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 93,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e43b0dad_99159c9e",
      "range": {
        "startLine": 93,
        "startChar": 5,
        "endLine": 93,
        "endChar": 7
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "225c6104_ee9cc856",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 123,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Move the body of this for loop into a function reprioritizeAccountTasks or similar.\n\nOverall, I think the functions in this file could be broken into smaller logical parts.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0ffd954_8af6d979",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 123,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "Punting, with DOTO.",
      "parentUuid": "225c6104_ee9cc856",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "026fa0aa_dfc67520",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 162,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "What\u0027s the point of sending the muts out a channel?\n\nPresumably, this is for logging the changes.  However, it doesn\u0027t make sense in that case to use a Mutater interface, since the receiver isn\u0027t interested in calling the Mutate method.  Instead, it should probably be using something like an Event interface:\n\n type Event interface {\n    func EventString() string\n }\n\nThat way, the receiver can get a string representation without having to do a type assertion.\n\n(But either way, the caller is going to have to do type assertions to get back the original struct and access its fields.)",
      "range": {
        "startLine": 161,
        "startChar": 4,
        "endLine": 162,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19458bca_d1055d28",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 162,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T01:45:18Z",
      "side": 1,
      "message": "The point of sending the Muts out a channel is more than logging, and is rather central to this entire library. I should clarify that, which I think will also address some of your other questions around why everything is a proto.\n\nThe point of the QuotaSchedule function is to generate a list of scheduler actions (which I am calling Mutations). Eventually, there will be middleware between this code and swarming, which feeds in swarming state to QuotaSchedule and translates those into the concrete swarming steps that are required (eg \"Prempt Job\" becomes a few coordinated swarming operations).\n\nWhy use a channel here instead of returning a list?\n1) Using a channel and emitting the mutations individually allows for the same libary to be used in a simulator, and for the simulator to support \"scheduler breakpoint\" in which one can pause the action at each individual scheduler decision. This turned out to be a handy feature of the javascript simulator, so I kept it here.\n2) Using a channel potentially allow us to bail out of the expensive calculation early, if the first few mutations indicate that we should/can. I probably need some more plumbing inside of scheduler logic (e.g. use of context.Context) to really support that.\n\nThis also should explain why all of the State and Config and Mutator types are protos -- they are going to form part of the schema that is used by this qscheduler \u003c-\u003e swarming middleware.",
      "parentUuid": "026fa0aa_dfc67520",
      "range": {
        "startLine": 161,
        "startChar": 4,
        "endLine": 162,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6988729_b0f72792",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 162,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-08T19:32:41Z",
      "side": 1,
      "message": "Thanks, it would be helpful to have a design doc to see the overall picture.\n\nI\u0027m still not convinced that the API complexity here is necessary for the overall design.\n\nThe protos are only needed if talking to a separate service.  Is the intent to make the middleware a separate service?  Normally, service middleware is just a library compiled into the same program (e.g. Django, web middleware that I\u0027m familiar with).  I think having a separate service for talking to swarming and passing protos back and forth is unnecessarily complicated.\n\nThere are other ways to achieve your channel goals 1 and 2 without using a channel-and-goroutine like the current code.  As you noted, you can\u0027t actually do 2 without leaking goroutines currently.\n\nWhat you really want is to be able to provide custom hooks for the various mutation steps.  This sounds like a good fit for using interfaces.  I commented on the tests about this approached.",
      "parentUuid": "19458bca_d1055d28",
      "range": {
        "startLine": 161,
        "startChar": 4,
        "endLine": 162,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83ad16a1_9fbab9cc",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 162,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-15T22:51:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6988729_b0f72792",
      "range": {
        "startLine": 161,
        "startChar": 4,
        "endLine": 162,
        "endChar": 19
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dadea611_de529f1e",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 194,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "This seems very expensive.  You only need to iterate through the workers once to associate them with an account.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a18602d7_9a8c479f",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 194,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "Agreed but don\u0027t want to optimize yet.",
      "parentUuid": "dadea611_de529f1e",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e3db910_39c6bfd7",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 197,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think it\u0027s clearer just to write worker.RunningTask !\u003d nil  I had to stop and think about what IsIdle() might mean in the context of this code to guess that it is a nil check.",
      "range": {
        "startLine": 197,
        "startChar": 6,
        "endLine": 197,
        "endChar": 21
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de3e87d6_fd2aa5d1",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 197,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-15T22:51:23Z",
      "side": 1,
      "message": "Leaving as is for now, but ack.",
      "parentUuid": "8e3db910_39c6bfd7",
      "range": {
        "startLine": 197,
        "startChar": 6,
        "endLine": 197,
        "endChar": 21
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ac5dfb8_506e17b4",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 216,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "Calculating banned accounts could be moved to a separate function.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac3176fa_190f3110",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 216,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "punting.",
      "parentUuid": "1ac5dfb8_506e17b4",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bd93cf0_ecd81cae",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 224,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I don\u0027t feel like this function belongs in the types package, it should just be implemented here.",
      "range": {
        "startLine": 224,
        "startChar": 7,
        "endLine": 224,
        "endChar": 24
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdf465f9_161b6f59",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 224,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "punting",
      "parentUuid": "4bd93cf0_ecd81cae",
      "range": {
        "startLine": 224,
        "startChar": 7,
        "endLine": 224,
        "endChar": 24
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03a8281e_e7181cd2",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 226,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think the logic here could be clearer, possibly by pulling out functions.",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5122101c_7a01b19e",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler.go",
        "patchSetId": 19
      },
      "lineNbr": 226,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "punting",
      "parentUuid": "03a8281e_e7181cd2",
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be4c164d_670f6cec",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler_test.go",
        "patchSetId": 19
      },
      "lineNbr": 28,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2018-08-07T01:26:28Z",
      "side": 1,
      "message": "I think you\u0027d be better served using an injected interface approach\n\n type Mutater interface {\n   func AssignIdleWorker(...)\n   func ChangePriority(...)\n   ....\n }\n\n type LoggignMutator struct {\n     RealMutator RealMutator\n     storedCalls []...\n }\n\n func (m *LoggingMutator) AssignIdleWorker(...) {\n     m.storedCalls \u003d append(m.storedCalls, ...)\n     return m.RealMutator.AssignIdleWorkers(...)\n }\n\nThen, you could also have a NoOpMutater and a MetricsMutator and a RealMutator, etc.",
      "range": {
        "startLine": 28,
        "startChar": 5,
        "endLine": 28,
        "endChar": 20
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b839825b_aa867d0b",
        "filename": "go/src/infra/qscheduler/qslib/scheduler/scheduler_test.go",
        "patchSetId": 19
      },
      "lineNbr": 28,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-08T22:54:09Z",
      "side": 1,
      "message": "I think you are misunderstanding the purpose of Mutaters. Let\u0027s discuss offline.",
      "parentUuid": "be4c164d_670f6cec",
      "range": {
        "startLine": 28,
        "startChar": 5,
        "endLine": 28,
        "endChar": 20
      },
      "revId": "8b3aae78cd50ebfbafdcd00be004f39781ae38b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}