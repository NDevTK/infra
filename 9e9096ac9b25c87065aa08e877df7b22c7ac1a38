{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "564fc64f_7f03997d",
        "filename": "appengine/monorail/tracker/test/tracker_bizobj_test.py",
        "patchSetId": 1
      },
      "lineNbr": 1484,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-10-21T22:38:57Z",
      "side": 1,
      "message": "Could test that\nadding something that already exists in the issue results in no amendment?",
      "revId": "9e9096ac9b25c87065aa08e877df7b22c7ac1a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7b6ca5a_28011af5",
        "filename": "appengine/monorail/tracker/test/tracker_bizobj_test.py",
        "patchSetId": 1
      },
      "lineNbr": 1484,
      "author": {
        "id": 1374960
      },
      "writtenOn": "2020-10-21T23:20:03Z",
      "side": 1,
      "message": "Especially because I didn\u0027t handle that case ðŸ˜Š\n\nFixed now",
      "parentUuid": "564fc64f_7f03997d",
      "revId": "9e9096ac9b25c87065aa08e877df7b22c7ac1a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f4ffff_d5a78a0b",
        "filename": "appengine/monorail/tracker/tracker_bizobj.py",
        "patchSetId": 1
      },
      "lineNbr": 1103,
      "author": {
        "id": 1374960
      },
      "writtenOn": "2020-10-21T21:55:12Z",
      "side": 1,
      "message": "If I understood your comment from the other CL, this may not be required?\n\nIt seems required if we want amendments to stay empty, but maybe you meant downstream we don\u0027t care about amendments with nothing in them?\n\nIf so I can probably re-simplify the code a bit",
      "range": {
        "startLine": 1103,
        "startChar": 0,
        "endLine": 1103,
        "endChar": 31
      },
      "revId": "9e9096ac9b25c87065aa08e877df7b22c7ac1a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9f33519_3b1f4dc9",
        "filename": "appengine/monorail/tracker/tracker_bizobj.py",
        "patchSetId": 1
      },
      "lineNbr": 1103,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2020-10-21T22:15:33Z",
      "side": 1,
      "message": "i was focusing on the wrong thing earlier\nmy comment in the earlier CL was more around the fact that [None] is an acceptable add_refs or remove_refs because:\nMakeBlockedOnAmendment calls _PlusMinusRefsAmendment\nhttps://source.chromium.org/chromium/infra/infra/+/master:appengine/monorail/tracker/tracker_bizobj.py;l\u003d1313?q\u003d_PlusMinusRefsAmendment\u0026ss\u003dchromium%2Finfra%2Finfra:appengine%2Fmonorail%2F\nwhich can handle [some_valid_issue_ref, None, some_valid_issue_Ref]\n\nand I just didn\u0027t like cause it\u0027s weird that [None] is acceptable and also to know that that\u0027s acceptable requires digging through the code.\n\n\nFor this, I\u0027m not aware of us doing anything to check for an Amendment object that\u0027s empty (no added or remove values).\nSo I think we should keep this `if x or y:` check",
      "parentUuid": "a0f4ffff_d5a78a0b",
      "range": {
        "startLine": 1103,
        "startChar": 0,
        "endLine": 1103,
        "endChar": 31
      },
      "revId": "9e9096ac9b25c87065aa08e877df7b22c7ac1a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "372618ed_ba81deca",
        "filename": "appengine/monorail/tracker/tracker_bizobj.py",
        "patchSetId": 1
      },
      "lineNbr": 1103,
      "author": {
        "id": 1374960
      },
      "writtenOn": "2020-10-21T22:22:04Z",
      "side": 1,
      "message": "Got it. Then this is ready for your review",
      "parentUuid": "b9f33519_3b1f4dc9",
      "range": {
        "startLine": 1103,
        "startChar": 0,
        "endLine": 1103,
        "endChar": 31
      },
      "revId": "9e9096ac9b25c87065aa08e877df7b22c7ac1a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}