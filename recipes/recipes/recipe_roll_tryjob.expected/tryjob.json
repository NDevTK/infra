[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::url]/resources/pycurl.py",
      "https://luci-config.appspot.com/_ah/api/config/v1/projects",
      "--outfile",
      "/path/to/tmp/",
      "--attempts",
      "3"
    ],
    "name": "Get luci-config projects"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::url]/resources/pycurl.py",
      "https://luci-config.appspot.com//_ah/api/config/v1/config_sets/projects%2Frecipe_engine%2Frefs%2Fheads%2Fmaster/config/recipes.cfg",
      "--outfile",
      "/path/to/tmp/",
      "--attempts",
      "3"
    ],
    "name": "Get project 'recipe_engine' config 'recipes.cfg'"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::url]/resources/pycurl.py",
      "https://luci-config.appspot.com//_ah/api/config/v1/config_sets/projects%2Fbuild%2Frefs%2Fheads%2Fmaster/config/recipes.cfg",
      "--outfile",
      "/path/to/tmp/",
      "--attempts",
      "3"
    ],
    "name": "Get project 'build' config 'recipes.cfg'"
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]/git_cl.py",
      "description",
      "-d",
      "--rietveld",
      "https://fake.code.review/12345678"
    ],
    "name": "git_cl description (build)",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]/git_footers.py",
      "--json",
      "/path/to/tmp/json"
    ],
    "name": "parse description",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[START_DIR]/build",
      "511"
    ],
    "name": "makedirs build directory",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::bot_update]/resources/bot_update.py",
      "--spec",
      "cache_dir = '[START_DIR]/__cache_dir'\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'build', 'url': 'https://repo.repo/build'}]",
      "--patch_root",
      "build",
      "--revision_mapping_file",
      "{}",
      "--git-cache-dir",
      "[START_DIR]/__cache_dir",
      "--issue",
      "12345678",
      "--patchset",
      "1",
      "--rietveld_server",
      "https://fake.code.review",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "build@HEAD",
      "--output_manifest"
    ],
    "cwd": "[START_DIR]/build",
    "env": {
      "GIT_HTTP_LOW_SPEED_LIMIT": "1000",
      "GIT_HTTP_LOW_SPEED_TIME": "300",
      "PATH": "%(PATH)s:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "infra_step": true,
    "name": "bot_update - build",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"fixed_revisions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"build\": \"HEAD\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {}, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"build\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {}, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"build\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[START_DIR]/recipe_engine",
      "511"
    ],
    "name": "makedirs recipe_engine directory",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::bot_update]/resources/bot_update.py",
      "--spec",
      "cache_dir = '[START_DIR]/__cache_dir'\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'recipe_engine', 'url': 'https://repo.repo/recipe_engine'}]",
      "--patch_root",
      "recipe_engine",
      "--revision_mapping_file",
      "{}",
      "--git-cache-dir",
      "[START_DIR]/__cache_dir",
      "--rietveld_server",
      "https://fake.code.review",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "recipe_engine@HEAD",
      "--output_manifest"
    ],
    "cwd": "[START_DIR]/recipe_engine",
    "env": {
      "GIT_HTTP_LOW_SPEED_LIMIT": "1000",
      "GIT_HTTP_LOW_SPEED_TIME": "300",
      "PATH": "%(PATH)s:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "infra_step": true,
    "name": "bot_update (without patch) - recipe_engine",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"fixed_revisions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"recipe_engine\": \"HEAD\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {}, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"recipe_engine\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {}, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"recipe_engine\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/build/build/recipes.py",
      "--use-bootstrap",
      "-O",
      "recipe_engine=[START_DIR]/recipe_engine/recipe_engine",
      "--package",
      "[START_DIR]/build/build/infra/config/recipes.cfg",
      "test",
      "run"
    ],
    "name": "build tests",
    "~followup_annotations": [
      "@@@STEP_LINK@reference builder@https://build.chromium.org/p/chromium.tools.build/builders/recipe-simulation_trusty64@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]