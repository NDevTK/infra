{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1919b24e_6748d008",
        "filename": "go/src/infra/cros/tlslib/fake_omaha.go",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "FYI you can use _ if you don\u0027t want named return besides the error.  Mostly to avoid exposing internal variable names in the function signature.",
      "range": {
        "startLine": 25,
        "startChar": 88,
        "endLine": 25,
        "endChar": 90
      },
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbfeb538_5f1aa036",
        "filename": "go/src/infra/cros/tlslib/fake_omaha.go",
        "patchSetId": 9
      },
      "lineNbr": 92,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "s/\u003d/:\u003d/",
      "range": {
        "startLine": 92,
        "startChar": 7,
        "endLine": 92,
        "endChar": 9
      },
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a397139c_e7956a8f",
        "filename": "go/src/infra/cros/tlslib/internal/nebraska/nebraska.go",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "s/It\u0027s callers\u0027/It is the caller\u0027s/",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 17
      },
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa508c6f_bb195027",
        "filename": "go/src/infra/cros/tlslib/internal/nebraska/nebraska.go",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "Instead of passing in the server and peeking into private fields, better to pass in the command line args like before.  That reduces the coupling with the private details, it also lets you check the command line that is constructed.  For the \nfake, you can use very simple flag parsing to get the --runtime-root\n\n for i in args {\n  if args[i] \u003d\u003d --runtime-root { root \u003d args[i+1] }\n }",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af22024d_e13beed5",
        "filename": "go/src/infra/cros/tlslib/internal/nebraska/nebraska.go",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "Include more info about gsPathPrefix, updatePayloadsAddress? example format, etc.",
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7a191a8_133ab36e",
        "filename": "go/src/infra/cros/tlslib/internal/nebraska/nebraska.go",
        "patchSetId": 9
      },
      "lineNbr": 221,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "note, we may want to add sigterm, sleep, sigkill (even though I dislike sigkill, unfortunately sometimes we just get leaks).",
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "179d60df_9af3a2f9",
        "filename": "go/src/infra/cros/tlslib/internal/nebraska/nebraska.go",
        "patchSetId": 9
      },
      "lineNbr": 253,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "panic for case unrecognized ?",
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1c40299_8814ce95",
        "filename": "go/src/infra/cros/tlslib/internal/nebraska/nebraska_test.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "Recommend wrapping the things being tested in subtests.  Specifically\n\nt.Run(\"port file parsing\"...)\nt.Run(\"cleanup\"...)\n\nare two separate things being tested here.  The smaller we can make each test, the better (easier to understand, faster to run, more granularity when it fails, more parallelism).\n\nThere\u0027s a problem with making them subtests though; you can skip specific subtests, which may skip cleanup.  The solution to that is to make two separate tests, one for testing the port file and another for the close cleanup, so skipping the cleanup test doesn\u0027t skip the cleanup in the port file test.  It\u0027s also good practice to make tests independent and not rely on setup/cleanup for other tests when possible.",
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "333d301c_1b3ea596",
        "filename": "go/src/infra/cros/tlslib/internal/nebraska/nebraska_test.go",
        "patchSetId": 9
      },
      "lineNbr": 99,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "Move these into the subtests, don\u0027t share them between tests.  Sharing them between parallel tests is actually a race bug as they\u0027re all touching the same got variable.",
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e84af7ad_15f19062",
        "filename": "go/src/infra/cros/tlslib/internal/resource/manager.go",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "s/exists/exits/",
      "range": {
        "startLine": 25,
        "startChar": 55,
        "endLine": 25,
        "endChar": 61
      },
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c261686a_386ff5e3",
        "filename": "go/src/infra/cros/tlslib/internal/resource/manager_test.go",
        "patchSetId": 9
      },
      "lineNbr": 16,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2021-03-11T02:13:29Z",
      "side": 1,
      "message": "nit: you can add a test that Close method is called/not called, since that\u0027s one of the important behaviors.  But I don\u0027t think the tests here are too valuable since the impl is simple",
      "revId": "b817cd084fd3a2074c1a609d083b429da61e53c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}