# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: metrics.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import any_pb2 as any__pb2
import timestamp_pb2 as timestamp__pb2
import acquisition_network_device_pb2 as acquisition__network__device__pb2
import acquisition_task_pb2 as acquisition__task__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='metrics.proto',
  package='prodx.client.mon',
  syntax='proto3',
  serialized_pb=_b('\n\rmetrics.proto\x12\x10prodx.client.mon\x1a\tany.proto\x1a\x0ftimestamp.proto\x1a acquisition_network_device.proto\x1a\x16\x61\x63quisition_task.proto\"Q\n\x0eMetricsPayload\x12?\n\x12metrics_collection\x18\x01 \x03(\x0b\x32#.prodx.client.mon.MetricsCollection\"\xbd\x01\n\x11MetricsCollection\x12:\n\x10metrics_data_set\x18\x01 \x03(\x0b\x32 .prodx.client.mon.MetricsDataSet\x12\x36\n\x0enetwork_device\x18\x0b \x01(\x0b\x32\x1c.monarch.prodx.NetworkDeviceH\x00\x12#\n\x04task\x18\x0c \x01(\x0b\x32\x13.monarch.prodx.TaskH\x00\x42\x0f\n\rtarget_schema\"\xfd\x03\n\x0eMetricsDataSet\x12\x13\n\x0bmetric_name\x18\x01 \x01(\t\x12P\n\x10\x66ield_descriptor\x18\x02 \x03(\x0b\x32\x36.prodx.client.mon.MetricsDataSet.MetricFieldDescriptor\x12\x31\n\x0bstream_kind\x18\x03 \x01(\x0e\x32\x1c.prodx.client.mon.StreamKind\x12/\n\nvalue_type\x18\x04 \x01(\x0e\x32\x1b.prodx.client.mon.ValueType\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x32\n\x0b\x61nnotations\x18\x06 \x01(\x0b\x32\x1d.prodx.client.mon.Annotations\x12+\n\x04\x64\x61ta\x18\x07 \x03(\x0b\x32\x1d.prodx.client.mon.MetricsData\x1a\xa9\x01\n\x15MetricFieldDescriptor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12T\n\nfield_type\x18\x02 \x01(\x0e\x32@.prodx.client.mon.MetricsDataSet.MetricFieldDescriptor.FieldType\",\n\tFieldType\x12\n\n\x06STRING\x10\x00\x12\t\n\x05INT64\x10\x01\x12\x08\n\x04\x42OOL\x10\x02\"\xf7\t\n\x0bMetricsData\x12\x14\n\nbool_value\x18\x01 \x01(\x08H\x00\x12\x16\n\x0cstring_value\x18\x02 \x01(\tH\x00\x12\x15\n\x0bint64_value\x18\x03 \x01(\x03H\x00\x12\x16\n\x0c\x64ouble_value\x18\x04 \x01(\x01H\x00\x12H\n\x12\x64istribution_value\x18\x05 \x01(\x0b\x32*.prodx.client.mon.MetricsData.DistributionH\x00\x12\x38\n\x05\x66ield\x18\x06 \x03(\x0b\x32).prodx.client.mon.MetricsData.MetricField\x12\x33\n\x0fstart_timestamp\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x31\n\rend_timestamp\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1ai\n\x0bMetricField\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x16\n\x0cstring_value\x18\x02 \x01(\tH\x00\x12\x15\n\x0bint64_value\x18\x03 \x01(\x03H\x00\x12\x14\n\nbool_value\x18\x04 \x01(\x08H\x00\x42\x07\n\x05value\x1a\xaa\x06\n\x0c\x44istribution\x12\r\n\x05\x63ount\x18\x01 \x01(\x03\x12\x0c\n\x04mean\x18\x02 \x01(\x01\x12 \n\x18sum_of_squared_deviation\x18\x03 \x01(\x01\x12\x0f\n\x07minimum\x18\x04 \x01(\x01\x12\x0f\n\x07maximum\x18\x05 \x01(\x01\x12R\n\x0elinear_buckets\x18\x06 \x01(\x0b\x32\x38.prodx.client.mon.MetricsData.Distribution.LinearOptionsH\x00\x12\\\n\x13\x65xponential_buckets\x18\x07 \x01(\x0b\x32=.prodx.client.mon.MetricsData.Distribution.ExponentialOptionsH\x00\x12V\n\x10\x65xplicit_buckets\x18\x08 \x01(\x0b\x32:.prodx.client.mon.MetricsData.Distribution.ExplicitOptionsH\x00\x12\x18\n\x0c\x62ucket_count\x18\t \x03(\x03\x42\x02\x10\x01\x12\x45\n\x08\x65xemplar\x18\n \x03(\x0b\x32\x33.prodx.client.mon.MetricsData.Distribution.Exemplar\x1aJ\n\rLinearOptions\x12\x1a\n\x12num_finite_buckets\x18\x01 \x01(\x05\x12\r\n\x05width\x18\x02 \x01(\x01\x12\x0e\n\x06offset\x18\x03 \x01(\x01\x1aV\n\x12\x45xponentialOptions\x12\x1a\n\x12num_finite_buckets\x18\x01 \x01(\x05\x12\x15\n\rgrowth_factor\x18\x02 \x01(\x01\x12\r\n\x05scale\x18\x03 \x01(\x01\x1a$\n\x0f\x45xplicitOptions\x12\x11\n\x05\x62ound\x18\x01 \x03(\x01\x42\x02\x10\x01\x1ar\n\x08\x45xemplar\x12\r\n\x05value\x18\x01 \x01(\x01\x12-\n\ttimestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12(\n\nattachment\x18\x03 \x03(\x0b\x32\x14.google.protobuf.AnyB\x10\n\x0e\x62ucket_optionsB\x07\n\x05value\"m\n\x0b\x41nnotations\x12\x0c\n\x04unit\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x08\x12\x13\n\x0b\x64\x65precation\x18\x03 \x01(\t\x12(\n\nannotation\x18\x04 \x03(\x0b\x32\x14.google.protobuf.Any*2\n\nStreamKind\x12\t\n\x05GAUGE\x10\x00\x12\x0e\n\nCUMULATIVE\x10\x01\x12\t\n\x05\x44\x45LTA\x10\x02*J\n\tValueType\x12\x08\n\x04\x42OOL\x10\x00\x12\n\n\x06STRING\x10\x01\x12\t\n\x05INT64\x10\x02\x12\n\n\x06\x44OUBLE\x10\x03\x12\x10\n\x0c\x44ISTRIBUTION\x10\x04\x62\x06proto3')
  ,
  dependencies=[any__pb2.DESCRIPTOR,timestamp__pb2.DESCRIPTOR,acquisition__network__device__pb2.DESCRIPTOR,acquisition__task__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_STREAMKIND = _descriptor.EnumDescriptor(
  name='StreamKind',
  full_name='prodx.client.mon.StreamKind',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GAUGE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CUMULATIVE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELTA', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2293,
  serialized_end=2343,
)
_sym_db.RegisterEnumDescriptor(_STREAMKIND)

StreamKind = enum_type_wrapper.EnumTypeWrapper(_STREAMKIND)
_VALUETYPE = _descriptor.EnumDescriptor(
  name='ValueType',
  full_name='prodx.client.mon.ValueType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT64', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOUBLE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISTRIBUTION', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2345,
  serialized_end=2419,
)
_sym_db.RegisterEnumDescriptor(_VALUETYPE)

ValueType = enum_type_wrapper.EnumTypeWrapper(_VALUETYPE)
GAUGE = 0
CUMULATIVE = 1
DELTA = 2
BOOL = 0
STRING = 1
INT64 = 2
DOUBLE = 3
DISTRIBUTION = 4


_METRICSDATASET_METRICFIELDDESCRIPTOR_FIELDTYPE = _descriptor.EnumDescriptor(
  name='FieldType',
  full_name='prodx.client.mon.MetricsDataSet.MetricFieldDescriptor.FieldType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STRING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT64', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=862,
  serialized_end=906,
)
_sym_db.RegisterEnumDescriptor(_METRICSDATASET_METRICFIELDDESCRIPTOR_FIELDTYPE)


_METRICSPAYLOAD = _descriptor.Descriptor(
  name='MetricsPayload',
  full_name='prodx.client.mon.MetricsPayload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metrics_collection', full_name='prodx.client.mon.MetricsPayload.metrics_collection', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=202,
)


_METRICSCOLLECTION = _descriptor.Descriptor(
  name='MetricsCollection',
  full_name='prodx.client.mon.MetricsCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metrics_data_set', full_name='prodx.client.mon.MetricsCollection.metrics_data_set', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network_device', full_name='prodx.client.mon.MetricsCollection.network_device', index=1,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task', full_name='prodx.client.mon.MetricsCollection.task', index=2,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='target_schema', full_name='prodx.client.mon.MetricsCollection.target_schema',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=205,
  serialized_end=394,
)


_METRICSDATASET_METRICFIELDDESCRIPTOR = _descriptor.Descriptor(
  name='MetricFieldDescriptor',
  full_name='prodx.client.mon.MetricsDataSet.MetricFieldDescriptor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='prodx.client.mon.MetricsDataSet.MetricFieldDescriptor.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='field_type', full_name='prodx.client.mon.MetricsDataSet.MetricFieldDescriptor.field_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _METRICSDATASET_METRICFIELDDESCRIPTOR_FIELDTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=737,
  serialized_end=906,
)

_METRICSDATASET = _descriptor.Descriptor(
  name='MetricsDataSet',
  full_name='prodx.client.mon.MetricsDataSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metric_name', full_name='prodx.client.mon.MetricsDataSet.metric_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='field_descriptor', full_name='prodx.client.mon.MetricsDataSet.field_descriptor', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stream_kind', full_name='prodx.client.mon.MetricsDataSet.stream_kind', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_type', full_name='prodx.client.mon.MetricsDataSet.value_type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='prodx.client.mon.MetricsDataSet.description', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='annotations', full_name='prodx.client.mon.MetricsDataSet.annotations', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='prodx.client.mon.MetricsDataSet.data', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_METRICSDATASET_METRICFIELDDESCRIPTOR, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=397,
  serialized_end=906,
)


_METRICSDATA_METRICFIELD = _descriptor.Descriptor(
  name='MetricField',
  full_name='prodx.client.mon.MetricsData.MetricField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='prodx.client.mon.MetricsData.MetricField.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='string_value', full_name='prodx.client.mon.MetricsData.MetricField.string_value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='int64_value', full_name='prodx.client.mon.MetricsData.MetricField.int64_value', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bool_value', full_name='prodx.client.mon.MetricsData.MetricField.bool_value', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='prodx.client.mon.MetricsData.MetricField.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1253,
  serialized_end=1358,
)

_METRICSDATA_DISTRIBUTION_LINEAROPTIONS = _descriptor.Descriptor(
  name='LinearOptions',
  full_name='prodx.client.mon.MetricsData.Distribution.LinearOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_finite_buckets', full_name='prodx.client.mon.MetricsData.Distribution.LinearOptions.num_finite_buckets', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='width', full_name='prodx.client.mon.MetricsData.Distribution.LinearOptions.width', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='prodx.client.mon.MetricsData.Distribution.LinearOptions.offset', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1837,
  serialized_end=1911,
)

_METRICSDATA_DISTRIBUTION_EXPONENTIALOPTIONS = _descriptor.Descriptor(
  name='ExponentialOptions',
  full_name='prodx.client.mon.MetricsData.Distribution.ExponentialOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_finite_buckets', full_name='prodx.client.mon.MetricsData.Distribution.ExponentialOptions.num_finite_buckets', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='growth_factor', full_name='prodx.client.mon.MetricsData.Distribution.ExponentialOptions.growth_factor', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='prodx.client.mon.MetricsData.Distribution.ExponentialOptions.scale', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1913,
  serialized_end=1999,
)

_METRICSDATA_DISTRIBUTION_EXPLICITOPTIONS = _descriptor.Descriptor(
  name='ExplicitOptions',
  full_name='prodx.client.mon.MetricsData.Distribution.ExplicitOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bound', full_name='prodx.client.mon.MetricsData.Distribution.ExplicitOptions.bound', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2001,
  serialized_end=2037,
)

_METRICSDATA_DISTRIBUTION_EXEMPLAR = _descriptor.Descriptor(
  name='Exemplar',
  full_name='prodx.client.mon.MetricsData.Distribution.Exemplar',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='prodx.client.mon.MetricsData.Distribution.Exemplar.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='prodx.client.mon.MetricsData.Distribution.Exemplar.timestamp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attachment', full_name='prodx.client.mon.MetricsData.Distribution.Exemplar.attachment', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2039,
  serialized_end=2153,
)

_METRICSDATA_DISTRIBUTION = _descriptor.Descriptor(
  name='Distribution',
  full_name='prodx.client.mon.MetricsData.Distribution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='prodx.client.mon.MetricsData.Distribution.count', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mean', full_name='prodx.client.mon.MetricsData.Distribution.mean', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sum_of_squared_deviation', full_name='prodx.client.mon.MetricsData.Distribution.sum_of_squared_deviation', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='prodx.client.mon.MetricsData.Distribution.minimum', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='prodx.client.mon.MetricsData.Distribution.maximum', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linear_buckets', full_name='prodx.client.mon.MetricsData.Distribution.linear_buckets', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exponential_buckets', full_name='prodx.client.mon.MetricsData.Distribution.exponential_buckets', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='explicit_buckets', full_name='prodx.client.mon.MetricsData.Distribution.explicit_buckets', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bucket_count', full_name='prodx.client.mon.MetricsData.Distribution.bucket_count', index=8,
      number=9, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='exemplar', full_name='prodx.client.mon.MetricsData.Distribution.exemplar', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_METRICSDATA_DISTRIBUTION_LINEAROPTIONS, _METRICSDATA_DISTRIBUTION_EXPONENTIALOPTIONS, _METRICSDATA_DISTRIBUTION_EXPLICITOPTIONS, _METRICSDATA_DISTRIBUTION_EXEMPLAR, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='bucket_options', full_name='prodx.client.mon.MetricsData.Distribution.bucket_options',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1361,
  serialized_end=2171,
)

_METRICSDATA = _descriptor.Descriptor(
  name='MetricsData',
  full_name='prodx.client.mon.MetricsData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bool_value', full_name='prodx.client.mon.MetricsData.bool_value', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='string_value', full_name='prodx.client.mon.MetricsData.string_value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='int64_value', full_name='prodx.client.mon.MetricsData.int64_value', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='double_value', full_name='prodx.client.mon.MetricsData.double_value', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distribution_value', full_name='prodx.client.mon.MetricsData.distribution_value', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='field', full_name='prodx.client.mon.MetricsData.field', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_timestamp', full_name='prodx.client.mon.MetricsData.start_timestamp', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_timestamp', full_name='prodx.client.mon.MetricsData.end_timestamp', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_METRICSDATA_METRICFIELD, _METRICSDATA_DISTRIBUTION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='prodx.client.mon.MetricsData.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=909,
  serialized_end=2180,
)


_ANNOTATIONS = _descriptor.Descriptor(
  name='Annotations',
  full_name='prodx.client.mon.Annotations',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='unit', full_name='prodx.client.mon.Annotations.unit', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='prodx.client.mon.Annotations.timestamp', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deprecation', full_name='prodx.client.mon.Annotations.deprecation', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='annotation', full_name='prodx.client.mon.Annotations.annotation', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2182,
  serialized_end=2291,
)

_METRICSPAYLOAD.fields_by_name['metrics_collection'].message_type = _METRICSCOLLECTION
_METRICSCOLLECTION.fields_by_name['metrics_data_set'].message_type = _METRICSDATASET
_METRICSCOLLECTION.fields_by_name['network_device'].message_type = acquisition__network__device__pb2._NETWORKDEVICE
_METRICSCOLLECTION.fields_by_name['task'].message_type = acquisition__task__pb2._TASK
_METRICSCOLLECTION.oneofs_by_name['target_schema'].fields.append(
  _METRICSCOLLECTION.fields_by_name['network_device'])
_METRICSCOLLECTION.fields_by_name['network_device'].containing_oneof = _METRICSCOLLECTION.oneofs_by_name['target_schema']
_METRICSCOLLECTION.oneofs_by_name['target_schema'].fields.append(
  _METRICSCOLLECTION.fields_by_name['task'])
_METRICSCOLLECTION.fields_by_name['task'].containing_oneof = _METRICSCOLLECTION.oneofs_by_name['target_schema']
_METRICSDATASET_METRICFIELDDESCRIPTOR.fields_by_name['field_type'].enum_type = _METRICSDATASET_METRICFIELDDESCRIPTOR_FIELDTYPE
_METRICSDATASET_METRICFIELDDESCRIPTOR.containing_type = _METRICSDATASET
_METRICSDATASET_METRICFIELDDESCRIPTOR_FIELDTYPE.containing_type = _METRICSDATASET_METRICFIELDDESCRIPTOR
_METRICSDATASET.fields_by_name['field_descriptor'].message_type = _METRICSDATASET_METRICFIELDDESCRIPTOR
_METRICSDATASET.fields_by_name['stream_kind'].enum_type = _STREAMKIND
_METRICSDATASET.fields_by_name['value_type'].enum_type = _VALUETYPE
_METRICSDATASET.fields_by_name['annotations'].message_type = _ANNOTATIONS
_METRICSDATASET.fields_by_name['data'].message_type = _METRICSDATA
_METRICSDATA_METRICFIELD.containing_type = _METRICSDATA
_METRICSDATA_METRICFIELD.oneofs_by_name['value'].fields.append(
  _METRICSDATA_METRICFIELD.fields_by_name['string_value'])
_METRICSDATA_METRICFIELD.fields_by_name['string_value'].containing_oneof = _METRICSDATA_METRICFIELD.oneofs_by_name['value']
_METRICSDATA_METRICFIELD.oneofs_by_name['value'].fields.append(
  _METRICSDATA_METRICFIELD.fields_by_name['int64_value'])
_METRICSDATA_METRICFIELD.fields_by_name['int64_value'].containing_oneof = _METRICSDATA_METRICFIELD.oneofs_by_name['value']
_METRICSDATA_METRICFIELD.oneofs_by_name['value'].fields.append(
  _METRICSDATA_METRICFIELD.fields_by_name['bool_value'])
_METRICSDATA_METRICFIELD.fields_by_name['bool_value'].containing_oneof = _METRICSDATA_METRICFIELD.oneofs_by_name['value']
_METRICSDATA_DISTRIBUTION_LINEAROPTIONS.containing_type = _METRICSDATA_DISTRIBUTION
_METRICSDATA_DISTRIBUTION_EXPONENTIALOPTIONS.containing_type = _METRICSDATA_DISTRIBUTION
_METRICSDATA_DISTRIBUTION_EXPLICITOPTIONS.containing_type = _METRICSDATA_DISTRIBUTION
_METRICSDATA_DISTRIBUTION_EXEMPLAR.fields_by_name['timestamp'].message_type = timestamp__pb2._TIMESTAMP
_METRICSDATA_DISTRIBUTION_EXEMPLAR.fields_by_name['attachment'].message_type = any__pb2._ANY
_METRICSDATA_DISTRIBUTION_EXEMPLAR.containing_type = _METRICSDATA_DISTRIBUTION
_METRICSDATA_DISTRIBUTION.fields_by_name['linear_buckets'].message_type = _METRICSDATA_DISTRIBUTION_LINEAROPTIONS
_METRICSDATA_DISTRIBUTION.fields_by_name['exponential_buckets'].message_type = _METRICSDATA_DISTRIBUTION_EXPONENTIALOPTIONS
_METRICSDATA_DISTRIBUTION.fields_by_name['explicit_buckets'].message_type = _METRICSDATA_DISTRIBUTION_EXPLICITOPTIONS
_METRICSDATA_DISTRIBUTION.fields_by_name['exemplar'].message_type = _METRICSDATA_DISTRIBUTION_EXEMPLAR
_METRICSDATA_DISTRIBUTION.containing_type = _METRICSDATA
_METRICSDATA_DISTRIBUTION.oneofs_by_name['bucket_options'].fields.append(
  _METRICSDATA_DISTRIBUTION.fields_by_name['linear_buckets'])
_METRICSDATA_DISTRIBUTION.fields_by_name['linear_buckets'].containing_oneof = _METRICSDATA_DISTRIBUTION.oneofs_by_name['bucket_options']
_METRICSDATA_DISTRIBUTION.oneofs_by_name['bucket_options'].fields.append(
  _METRICSDATA_DISTRIBUTION.fields_by_name['exponential_buckets'])
_METRICSDATA_DISTRIBUTION.fields_by_name['exponential_buckets'].containing_oneof = _METRICSDATA_DISTRIBUTION.oneofs_by_name['bucket_options']
_METRICSDATA_DISTRIBUTION.oneofs_by_name['bucket_options'].fields.append(
  _METRICSDATA_DISTRIBUTION.fields_by_name['explicit_buckets'])
_METRICSDATA_DISTRIBUTION.fields_by_name['explicit_buckets'].containing_oneof = _METRICSDATA_DISTRIBUTION.oneofs_by_name['bucket_options']
_METRICSDATA.fields_by_name['distribution_value'].message_type = _METRICSDATA_DISTRIBUTION
_METRICSDATA.fields_by_name['field'].message_type = _METRICSDATA_METRICFIELD
_METRICSDATA.fields_by_name['start_timestamp'].message_type = timestamp__pb2._TIMESTAMP
_METRICSDATA.fields_by_name['end_timestamp'].message_type = timestamp__pb2._TIMESTAMP
_METRICSDATA.oneofs_by_name['value'].fields.append(
  _METRICSDATA.fields_by_name['bool_value'])
_METRICSDATA.fields_by_name['bool_value'].containing_oneof = _METRICSDATA.oneofs_by_name['value']
_METRICSDATA.oneofs_by_name['value'].fields.append(
  _METRICSDATA.fields_by_name['string_value'])
_METRICSDATA.fields_by_name['string_value'].containing_oneof = _METRICSDATA.oneofs_by_name['value']
_METRICSDATA.oneofs_by_name['value'].fields.append(
  _METRICSDATA.fields_by_name['int64_value'])
_METRICSDATA.fields_by_name['int64_value'].containing_oneof = _METRICSDATA.oneofs_by_name['value']
_METRICSDATA.oneofs_by_name['value'].fields.append(
  _METRICSDATA.fields_by_name['double_value'])
_METRICSDATA.fields_by_name['double_value'].containing_oneof = _METRICSDATA.oneofs_by_name['value']
_METRICSDATA.oneofs_by_name['value'].fields.append(
  _METRICSDATA.fields_by_name['distribution_value'])
_METRICSDATA.fields_by_name['distribution_value'].containing_oneof = _METRICSDATA.oneofs_by_name['value']
_ANNOTATIONS.fields_by_name['annotation'].message_type = any__pb2._ANY
DESCRIPTOR.message_types_by_name['MetricsPayload'] = _METRICSPAYLOAD
DESCRIPTOR.message_types_by_name['MetricsCollection'] = _METRICSCOLLECTION
DESCRIPTOR.message_types_by_name['MetricsDataSet'] = _METRICSDATASET
DESCRIPTOR.message_types_by_name['MetricsData'] = _METRICSDATA
DESCRIPTOR.message_types_by_name['Annotations'] = _ANNOTATIONS
DESCRIPTOR.enum_types_by_name['StreamKind'] = _STREAMKIND
DESCRIPTOR.enum_types_by_name['ValueType'] = _VALUETYPE

MetricsPayload = _reflection.GeneratedProtocolMessageType('MetricsPayload', (_message.Message,), dict(
  DESCRIPTOR = _METRICSPAYLOAD,
  __module__ = 'metrics_pb2'
  # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsPayload)
  ))
_sym_db.RegisterMessage(MetricsPayload)

MetricsCollection = _reflection.GeneratedProtocolMessageType('MetricsCollection', (_message.Message,), dict(
  DESCRIPTOR = _METRICSCOLLECTION,
  __module__ = 'metrics_pb2'
  # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsCollection)
  ))
_sym_db.RegisterMessage(MetricsCollection)

MetricsDataSet = _reflection.GeneratedProtocolMessageType('MetricsDataSet', (_message.Message,), dict(

  MetricFieldDescriptor = _reflection.GeneratedProtocolMessageType('MetricFieldDescriptor', (_message.Message,), dict(
    DESCRIPTOR = _METRICSDATASET_METRICFIELDDESCRIPTOR,
    __module__ = 'metrics_pb2'
    # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsDataSet.MetricFieldDescriptor)
    ))
  ,
  DESCRIPTOR = _METRICSDATASET,
  __module__ = 'metrics_pb2'
  # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsDataSet)
  ))
_sym_db.RegisterMessage(MetricsDataSet)
_sym_db.RegisterMessage(MetricsDataSet.MetricFieldDescriptor)

MetricsData = _reflection.GeneratedProtocolMessageType('MetricsData', (_message.Message,), dict(

  MetricField = _reflection.GeneratedProtocolMessageType('MetricField', (_message.Message,), dict(
    DESCRIPTOR = _METRICSDATA_METRICFIELD,
    __module__ = 'metrics_pb2'
    # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsData.MetricField)
    ))
  ,

  Distribution = _reflection.GeneratedProtocolMessageType('Distribution', (_message.Message,), dict(

    LinearOptions = _reflection.GeneratedProtocolMessageType('LinearOptions', (_message.Message,), dict(
      DESCRIPTOR = _METRICSDATA_DISTRIBUTION_LINEAROPTIONS,
      __module__ = 'metrics_pb2'
      # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsData.Distribution.LinearOptions)
      ))
    ,

    ExponentialOptions = _reflection.GeneratedProtocolMessageType('ExponentialOptions', (_message.Message,), dict(
      DESCRIPTOR = _METRICSDATA_DISTRIBUTION_EXPONENTIALOPTIONS,
      __module__ = 'metrics_pb2'
      # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsData.Distribution.ExponentialOptions)
      ))
    ,

    ExplicitOptions = _reflection.GeneratedProtocolMessageType('ExplicitOptions', (_message.Message,), dict(
      DESCRIPTOR = _METRICSDATA_DISTRIBUTION_EXPLICITOPTIONS,
      __module__ = 'metrics_pb2'
      # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsData.Distribution.ExplicitOptions)
      ))
    ,

    Exemplar = _reflection.GeneratedProtocolMessageType('Exemplar', (_message.Message,), dict(
      DESCRIPTOR = _METRICSDATA_DISTRIBUTION_EXEMPLAR,
      __module__ = 'metrics_pb2'
      # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsData.Distribution.Exemplar)
      ))
    ,
    DESCRIPTOR = _METRICSDATA_DISTRIBUTION,
    __module__ = 'metrics_pb2'
    # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsData.Distribution)
    ))
  ,
  DESCRIPTOR = _METRICSDATA,
  __module__ = 'metrics_pb2'
  # @@protoc_insertion_point(class_scope:prodx.client.mon.MetricsData)
  ))
_sym_db.RegisterMessage(MetricsData)
_sym_db.RegisterMessage(MetricsData.MetricField)
_sym_db.RegisterMessage(MetricsData.Distribution)
_sym_db.RegisterMessage(MetricsData.Distribution.LinearOptions)
_sym_db.RegisterMessage(MetricsData.Distribution.ExponentialOptions)
_sym_db.RegisterMessage(MetricsData.Distribution.ExplicitOptions)
_sym_db.RegisterMessage(MetricsData.Distribution.Exemplar)

Annotations = _reflection.GeneratedProtocolMessageType('Annotations', (_message.Message,), dict(
  DESCRIPTOR = _ANNOTATIONS,
  __module__ = 'metrics_pb2'
  # @@protoc_insertion_point(class_scope:prodx.client.mon.Annotations)
  ))
_sym_db.RegisterMessage(Annotations)


_METRICSDATA_DISTRIBUTION_EXPLICITOPTIONS.fields_by_name['bound'].has_options = True
_METRICSDATA_DISTRIBUTION_EXPLICITOPTIONS.fields_by_name['bound']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_METRICSDATA_DISTRIBUTION.fields_by_name['bucket_count'].has_options = True
_METRICSDATA_DISTRIBUTION.fields_by_name['bucket_count']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
# @@protoc_insertion_point(module_scope)
