// Copyright 2016 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: infra/tricium/api/v1/config.proto

package tricium

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Roles relevant to Tricium.
type Acl_Role int32

const (
	// Can read progress/results.
	Acl_READER Acl_Role = 0
	// Can request analysis.
	Acl_REQUESTER Acl_Role = 1
)

// Enum value maps for Acl_Role.
var (
	Acl_Role_name = map[int32]string{
		0: "READER",
		1: "REQUESTER",
	}
	Acl_Role_value = map[string]int32{
		"READER":    0,
		"REQUESTER": 1,
	}
)

func (x Acl_Role) Enum() *Acl_Role {
	p := new(Acl_Role)
	*p = x
	return p
}

func (x Acl_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Acl_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_infra_tricium_api_v1_config_proto_enumTypes[0].Descriptor()
}

func (Acl_Role) Type() protoreflect.EnumType {
	return &file_infra_tricium_api_v1_config_proto_enumTypes[0]
}

func (x Acl_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Acl_Role.Descriptor instead.
func (Acl_Role) EnumDescriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{5, 0}
}

// Tricium service configuration.
//
// Listing supported platforms and analyzers shared between projects connected
// to Tricium.
type ServiceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Supported platforms.
	Platforms []*Platform_Details `protobuf:"bytes,1,rep,name=platforms,proto3" json:"platforms,omitempty"`
	// Supported data types.
	DataDetails []*Data_TypeDetails `protobuf:"bytes,2,rep,name=data_details,json=dataDetails,proto3" json:"data_details,omitempty"`
	// List of shared functions.
	Functions []*Function `protobuf:"bytes,3,rep,name=functions,proto3" json:"functions,omitempty"`
	// Buildbucket server to use for this service instance.
	//
	// This should be a hostname, no schema or trailing slash.
	BuildbucketServerHost string `protobuf:"bytes,9,opt,name=buildbucket_server_host,json=buildbucketServerHost,proto3" json:"buildbucket_server_host,omitempty"`
}

func (x *ServiceConfig) Reset() {
	*x = ServiceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_tricium_api_v1_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceConfig) ProtoMessage() {}

func (x *ServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_infra_tricium_api_v1_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceConfig.ProtoReflect.Descriptor instead.
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceConfig) GetPlatforms() []*Platform_Details {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *ServiceConfig) GetDataDetails() []*Data_TypeDetails {
	if x != nil {
		return x.DataDetails
	}
	return nil
}

func (x *ServiceConfig) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *ServiceConfig) GetBuildbucketServerHost() string {
	if x != nil {
		return x.BuildbucketServerHost
	}
	return ""
}

// Tricium project configuration.
//
// Specifies details needed to connect a project to Tricium.
// Adds project-specific functions and selects shared function
// implementations.
type ProjectConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Access control rules for direct requests for the project.
	Acls []*Acl `protobuf:"bytes,2,rep,name=acls,proto3" json:"acls,omitempty"`
	// Analyzer definitions.
	//
	// Each analyzer generally corresponds to one builder.
	Functions []*Function `protobuf:"bytes,3,rep,name=functions,proto3" json:"functions,omitempty"`
	// Selection of function implementations to run for this project.
	//
	// An analyzer is only enabled if there is a selections entry. Generally all
	// defined functions are listed as selections. Note that the function
	// (analyzer) name must match.
	Selections []*Selection `protobuf:"bytes,4,rep,name=selections,proto3" json:"selections,omitempty"`
	// Repositories, including Git and Gerrit details.
	Repos []*RepoDetails `protobuf:"bytes,5,rep,name=repos,proto3" json:"repos,omitempty"`
	// General service account for this project.
	ServiceAccount string `protobuf:"bytes,6,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Ignored. Kept because some Tricium configs still define this field.
	//
	// Deprecated: Do not use.
	SwarmingServiceAccount string `protobuf:"bytes,7,opt,name=swarming_service_account,json=swarmingServiceAccount,proto3" json:"swarming_service_account,omitempty"`
}

func (x *ProjectConfig) Reset() {
	*x = ProjectConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_tricium_api_v1_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectConfig) ProtoMessage() {}

func (x *ProjectConfig) ProtoReflect() protoreflect.Message {
	mi := &file_infra_tricium_api_v1_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectConfig.ProtoReflect.Descriptor instead.
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectConfig) GetAcls() []*Acl {
	if x != nil {
		return x.Acls
	}
	return nil
}

func (x *ProjectConfig) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *ProjectConfig) GetSelections() []*Selection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *ProjectConfig) GetRepos() []*RepoDetails {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *ProjectConfig) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

// Deprecated: Do not use.
func (x *ProjectConfig) GetSwarmingServiceAccount() string {
	if x != nil {
		return x.SwarmingServiceAccount
	}
	return ""
}

// Repository details for one repository.
type RepoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The repository type.
	//
	// Types that are assignable to Source:
	//	*RepoDetails_GerritProject
	//	*RepoDetails_GitRepo
	Source isRepoDetails_Source `protobuf_oneof:"source"`
	// Whether to disable reporting results back (default: enabled).
	DisableReporting bool `protobuf:"varint,6,opt,name=disable_reporting,json=disableReporting,proto3" json:"disable_reporting,omitempty"`
	// Whitelisted groups.
	//
	// The owner of a change will be checked for membership of a whitelisted
	// group. Absence of this field means all groups are whitelisted.
	//
	// Group names must be known to the Chrome infra auth service,
	// https://chrome-infra-auth.appspot.com. Contact a Chromium trooper
	// if you need to add or modify a group: g.co/bugatrooper.
	WhitelistedGroup []string `protobuf:"bytes,7,rep,name=whitelisted_group,json=whitelistedGroup,proto3" json:"whitelisted_group,omitempty"`
}

func (x *RepoDetails) Reset() {
	*x = RepoDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_tricium_api_v1_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoDetails) ProtoMessage() {}

func (x *RepoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_infra_tricium_api_v1_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoDetails.ProtoReflect.Descriptor instead.
func (*RepoDetails) Descriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{2}
}

func (m *RepoDetails) GetSource() isRepoDetails_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *RepoDetails) GetGerritProject() *GerritProject {
	if x, ok := x.GetSource().(*RepoDetails_GerritProject); ok {
		return x.GerritProject
	}
	return nil
}

func (x *RepoDetails) GetGitRepo() *GitRepo {
	if x, ok := x.GetSource().(*RepoDetails_GitRepo); ok {
		return x.GitRepo
	}
	return nil
}

func (x *RepoDetails) GetDisableReporting() bool {
	if x != nil {
		return x.DisableReporting
	}
	return false
}

func (x *RepoDetails) GetWhitelistedGroup() []string {
	if x != nil {
		return x.WhitelistedGroup
	}
	return nil
}

type isRepoDetails_Source interface {
	isRepoDetails_Source()
}

type RepoDetails_GerritProject struct {
	GerritProject *GerritProject `protobuf:"bytes,4,opt,name=gerrit_project,json=gerritProject,proto3,oneof"`
}

type RepoDetails_GitRepo struct {
	GitRepo *GitRepo `protobuf:"bytes,5,opt,name=git_repo,json=gitRepo,proto3,oneof"`
}

func (*RepoDetails_GerritProject) isRepoDetails_Source() {}

func (*RepoDetails_GitRepo) isRepoDetails_Source() {}

// Specifies a Gerrit project and its corresponding git repo.
type GerritProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Gerrit host to connect to.
	//
	// Value must not include the schema part; it will be assumed to be "https".
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Gerrit project name.
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Full URL for the corresponding git repo.
	GitUrl string `protobuf:"bytes,3,opt,name=git_url,json=gitUrl,proto3" json:"git_url,omitempty"`
}

func (x *GerritProject) Reset() {
	*x = GerritProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_tricium_api_v1_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GerritProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GerritProject) ProtoMessage() {}

func (x *GerritProject) ProtoReflect() protoreflect.Message {
	mi := &file_infra_tricium_api_v1_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GerritProject.ProtoReflect.Descriptor instead.
func (*GerritProject) Descriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{3}
}

func (x *GerritProject) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GerritProject) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GerritProject) GetGitUrl() string {
	if x != nil {
		return x.GitUrl
	}
	return ""
}

type GitRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Full repository url, including schema.
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GitRepo) Reset() {
	*x = GitRepo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_tricium_api_v1_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepo) ProtoMessage() {}

func (x *GitRepo) ProtoReflect() protoreflect.Message {
	mi := &file_infra_tricium_api_v1_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepo.ProtoReflect.Descriptor instead.
func (*GitRepo) Descriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{4}
}

func (x *GitRepo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Access control rules.
type Acl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Role of a group or identity.
	Role Acl_Role `protobuf:"varint,1,opt,name=role,proto3,enum=tricium.Acl_Role" json:"role,omitempty"`
	// Name of group, as defined in the auth service. Specify either group or
	// identity, not both.
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	// Identity, as defined by the auth service. Can be either an email address
	// or an identity string, for instance, "anonymous:anonymous" for anonymous
	// users. Specify either group or identity, not both.
	Identity string `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *Acl) Reset() {
	*x = Acl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_tricium_api_v1_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acl) ProtoMessage() {}

func (x *Acl) ProtoReflect() protoreflect.Message {
	mi := &file_infra_tricium_api_v1_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acl.ProtoReflect.Descriptor instead.
func (*Acl) Descriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{5}
}

func (x *Acl) GetRole() Acl_Role {
	if x != nil {
		return x.Role
	}
	return Acl_READER
}

func (x *Acl) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Acl) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

// Selection of function implementations to run for a project.
type Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of function to run.
	Function string `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	// Name of platform to retrieve results from.
	Platform Platform_Name `protobuf:"varint,2,opt,name=platform,proto3,enum=tricium.Platform_Name" json:"platform,omitempty"`
}

func (x *Selection) Reset() {
	*x = Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_tricium_api_v1_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selection) ProtoMessage() {}

func (x *Selection) ProtoReflect() protoreflect.Message {
	mi := &file_infra_tricium_api_v1_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selection.ProtoReflect.Descriptor instead.
func (*Selection) Descriptor() ([]byte, []int) {
	return file_infra_tricium_api_v1_config_proto_rawDescGZIP(), []int{6}
}

func (x *Selection) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Selection) GetPlatform() Platform_Name {
	if x != nil {
		return x.Platform
	}
	return Platform_ANY
}

var File_infra_tricium_api_v1_config_proto protoreflect.FileDescriptor

var file_infra_tricium_api_v1_config_proto_rawDesc = []byte{
	0x0a, 0x21, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x1a, 0x1f, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2f, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2f, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x23, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x69,
	0x75, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x2f, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x36, 0x0a, 0x17, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a,
	0x04, 0x08, 0x06, 0x10, 0x07, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08, 0x08, 0x10,
	0x09, 0x22, 0xa9, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2e, 0x41, 0x63, 0x6c, 0x52,
	0x04, 0x61, 0x63, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x69,
	0x75, 0x6d, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x69,
	0x63, 0x69, 0x75, 0x6d, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x69, 0x63,
	0x69, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x18, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x16, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe1, 0x01,
	0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3f, 0x0a,
	0x0e, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2e,
	0x47, 0x65, 0x72, 0x72, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d,
	0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2e, 0x47, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x48, 0x00, 0x52, 0x07, 0x67, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x2b, 0x0a,
	0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x56, 0x0a, 0x0d, 0x47, 0x65, 0x72, 0x72, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x1b, 0x0a, 0x07, 0x47, 0x69, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x81, 0x01, 0x0a, 0x03, 0x41, 0x63, 0x6c, 0x12, 0x25,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74,
	0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2e, 0x41, 0x63, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x21, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x52, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x52, 0x10, 0x01, 0x22, 0x61, 0x0a, 0x09, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x42, 0x1e, 0x5a,
	0x1c, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x72, 0x69, 0x63, 0x69, 0x75, 0x6d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_tricium_api_v1_config_proto_rawDescOnce sync.Once
	file_infra_tricium_api_v1_config_proto_rawDescData = file_infra_tricium_api_v1_config_proto_rawDesc
)

func file_infra_tricium_api_v1_config_proto_rawDescGZIP() []byte {
	file_infra_tricium_api_v1_config_proto_rawDescOnce.Do(func() {
		file_infra_tricium_api_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_tricium_api_v1_config_proto_rawDescData)
	})
	return file_infra_tricium_api_v1_config_proto_rawDescData
}

var file_infra_tricium_api_v1_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_infra_tricium_api_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_infra_tricium_api_v1_config_proto_goTypes = []interface{}{
	(Acl_Role)(0),            // 0: tricium.Acl.Role
	(*ServiceConfig)(nil),    // 1: tricium.ServiceConfig
	(*ProjectConfig)(nil),    // 2: tricium.ProjectConfig
	(*RepoDetails)(nil),      // 3: tricium.RepoDetails
	(*GerritProject)(nil),    // 4: tricium.GerritProject
	(*GitRepo)(nil),          // 5: tricium.GitRepo
	(*Acl)(nil),              // 6: tricium.Acl
	(*Selection)(nil),        // 7: tricium.Selection
	(*Platform_Details)(nil), // 8: tricium.Platform.Details
	(*Data_TypeDetails)(nil), // 9: tricium.Data.TypeDetails
	(*Function)(nil),         // 10: tricium.Function
	(Platform_Name)(0),       // 11: tricium.Platform.Name
}
var file_infra_tricium_api_v1_config_proto_depIdxs = []int32{
	8,  // 0: tricium.ServiceConfig.platforms:type_name -> tricium.Platform.Details
	9,  // 1: tricium.ServiceConfig.data_details:type_name -> tricium.Data.TypeDetails
	10, // 2: tricium.ServiceConfig.functions:type_name -> tricium.Function
	6,  // 3: tricium.ProjectConfig.acls:type_name -> tricium.Acl
	10, // 4: tricium.ProjectConfig.functions:type_name -> tricium.Function
	7,  // 5: tricium.ProjectConfig.selections:type_name -> tricium.Selection
	3,  // 6: tricium.ProjectConfig.repos:type_name -> tricium.RepoDetails
	4,  // 7: tricium.RepoDetails.gerrit_project:type_name -> tricium.GerritProject
	5,  // 8: tricium.RepoDetails.git_repo:type_name -> tricium.GitRepo
	0,  // 9: tricium.Acl.role:type_name -> tricium.Acl.Role
	11, // 10: tricium.Selection.platform:type_name -> tricium.Platform.Name
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_infra_tricium_api_v1_config_proto_init() }
func file_infra_tricium_api_v1_config_proto_init() {
	if File_infra_tricium_api_v1_config_proto != nil {
		return
	}
	file_infra_tricium_api_v1_data_proto_init()
	file_infra_tricium_api_v1_function_proto_init()
	file_infra_tricium_api_v1_platform_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_infra_tricium_api_v1_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_tricium_api_v1_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_tricium_api_v1_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_tricium_api_v1_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GerritProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_tricium_api_v1_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitRepo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_tricium_api_v1_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_tricium_api_v1_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_infra_tricium_api_v1_config_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*RepoDetails_GerritProject)(nil),
		(*RepoDetails_GitRepo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_tricium_api_v1_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_tricium_api_v1_config_proto_goTypes,
		DependencyIndexes: file_infra_tricium_api_v1_config_proto_depIdxs,
		EnumInfos:         file_infra_tricium_api_v1_config_proto_enumTypes,
		MessageInfos:      file_infra_tricium_api_v1_config_proto_msgTypes,
	}.Build()
	File_infra_tricium_api_v1_config_proto = out.File
	file_infra_tricium_api_v1_config_proto_rawDesc = nil
	file_infra_tricium_api_v1_config_proto_goTypes = nil
	file_infra_tricium_api_v1_config_proto_depIdxs = nil
}
