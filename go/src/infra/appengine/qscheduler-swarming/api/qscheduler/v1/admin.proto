// Copyright 2018 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

syntax = "proto3";

package qscheduler;

import "infra/qscheduler/qslib/protos/config.proto";
import "infra/qscheduler/qslib/protos/state.proto";

// This API is under development and subject to compatibility-breaking changes.
// Do not use for production.

// QSchedulerAdmin is the administrative API for a quotascheduler.
service QSchedulerAdmin {
    // CreateSchedulerPool creates a scheduler, with the given configuration
    // options.
    rpc CreateSchedulerPool(CreateSchedulerPoolRequest) returns (CreateSchedulerPoolResponse);

    // CreateAccount creates a quota account within a scheduler, with the
    // given configuration options.
    rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);

    // Wipe wipes out the state of a scheduler.
    //
    // This endpoint is intended for debug purposes, and may go away at any
    // point. May have significant correctness or performance impact on
    // scheduler.
    rpc Wipe(WipeRequest) returns (WipeResponse);
}

// QSchedulerView is a inspection / viewing API for quotascheduler. All calls
// are read-only.
service QSchedulerView {
    // ListAccounts returns the set of accounts for a given scheduler.
    rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);

    // InspectPool returns a description of the state of a scheduler, for debugging
    // or diagnostic purposes.
    rpc InspectPool(InspectPoolRequest) returns (InspectPoolResponse);
}

message CreateSchedulerPoolRequest {
    // PoolId is the unique id of this scheduler pool.
    string pool_id = 1;

    // Config is the scheduler configuration for the scheduler to create.
    protos.SchedulerConfig config = 2;
}

message CreateSchedulerPoolResponse {}

message CreateAccountRequest {
    // PoolID is the id of the scheduler to create an account within.
    string pool_id = 1;

    // AccountId is the unique id of the account (within the given pool).
    string account_id = 2;

    // Config is the quota account config for the quota account to create.
    protos.AccountConfig config = 3;
}

message CreateAccountResponse {}

message WipeRequest {
        // PoolID is the id of the scheduler to wipe.
        string pool_id = 1;
}

message WipeResponse {}

message ListAccountsRequest {
    // PoolID is the id of the scheduler to list accounts from.
    string pool_id = 1;
}

message ListAccountsResponse {
    map<string, protos.AccountConfig> accounts = 1;
}

message InspectPoolRequest {
    string pool_id = 1;
}

message InspectPoolResponse {
    // NumWaitingTasks is the number of waiting tasks.
    int32 num_waiting_tasks = 1;

    // NumRunningTasks is the number of running tasks.
    int32 num_running_tasks = 2;

    // IdleBots is the number of idle bots.
    int32 num_idle_bots = 3;

    // AccountBalances is the set of balances for all accounts.
    map<string, protos.SchedulerState.Balance> account_balances = 4;

    message RunningTask {
        // Id is the id of the request.
        string id = 1;

        // BotId is the id of the bot running the request.
        string bot_id = 2;

        // Priority is the current quotascheduler priority that the task is
        // running at.
        int32 priority = 3;

        // AccountID is the account id of the request.
        string account_id = 4;
    }

    // RunningTasks is a description of the running tasks according to
    // quotascheduler.
    repeated RunningTask running_tasks = 5;

    message WaitingTask {
        // Id is the id of the request.
        string id = 1;

        // AccountID is the account id of the request.
        string account_id = 2;
    }

    // WaitingTasks is a description of the tasks that are waiting
    // according to quotascheduler.
    repeated WaitingTask waiting_tasks = 6;

    message IdleBot {
        // Id is the id of the bot.
        string id = 1;

        // Dimensions are the dimensions of the bot.
        repeated string dimensions = 2;
    }

    // IdleBots is a description of the idle bots according to quotascheduler.
    repeated IdleBot idle_bots = 7;

    // Labels is the label set configured for this scheduler.
    repeated string labels = 8;
}
