// Copyright 2020 The Chromium Authors. All Rights Reserved.
// Use of this source code is governed by the Apache v2.0 license that can be
// found in the LICENSE file.

syntax = "proto3";

package rubber_stamper.config;

option go_package = "infra/appengine/rubber-stamper/config";

// Config is the service-wide configuration data for rubber-stamper.
message Config {
  // A map stores configs for all the Gerrit hosts, where keys are names of
  // hosts (e.g. "chromium" or "chrome-internal"), values are corresponding
  // configs.
  map<string, HostConfig> host_configs = 1;
}

// HostConfig describes the config to be used for a Gerrit host.
message HostConfig {
  // A map stores config for repositories, where keys are names of repos (e.g.
  // "chromium/src", "infra/infra") and values are corresponding configs.
  map<string, RepoConfig> repo_configs = 1;
}

// RepoConfig describes the config to be used for a Gerrit repository.
message RepoConfig {
  BenignFilePattern benign_file_pattern = 1;
}

// BenignFilePattern describes pattern of changes to benign files.
message BenignFilePattern {
  // A map contains the information that which files are allowed under which
  // directories, where keys are file extensions, values are paths of files
  // or directories. For paths to specific files, these files can be considered
  // benign files; for paths to directories, files under these directories with
  // corresponding extensions can be considered as benign files. For files with
  // no extensions, their key should be an empty string "".
  map<string, Paths> file_extension_map = 1;
}

// Paths contains a list of allowed paths.
message Paths {
  // We use the Match function in package `path` to judge whether a file
  // belongs to a path. Therefore, the `paths` here should follow the same
  // syntax as the `pattern` variable in Match function.
  // https://golang.org/pkg/path/#Match
  //
  // TODO: supports "**" in the syntax.
  repeated string paths = 1;
}
