// Copyright 2019 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package arquebus.config;

import "google/protobuf/duration.proto";

option go_package = "infra/appengine/arquebus/app/config";

// Config is the service-wide configuration data for Arquebus
message Config {
  // AccessGroup is the luci-auth group who has access to admin pages and
  // APIs.
  string access_group = 1;

  // The endpoint for Monorail APIs.
  string monorail_hostname = 2;

  // A list of Assigner config(s).
  repeated Assigner assigners = 3;

  // The endpoint for RotaNG APIs.
  string rotang_hostname = 4;

  // The endpoint for Rotation Proxy APIs.
  string rotation_proxy_hostname = 5;
}

// IssueQuery describes the issue query to be used for searching unassigned
// issues in Monorail.
message IssueQuery {
  // Free-form text query.
  string q = 1;
  // String name of the projects to search issues for, e.g. "chromium".
  repeated string project_names = 2;
}

// Oncall represents a rotation shift modelled in Rotation Proxy.
message Oncall {
  // Deprecated: Use Rotation.name instead.
  string rotation = 1;

  enum Position {
    UNSET = 0;
    PRIMARY = 1;
    SECONDARY = 2;
  }
  // The oncall position in the shift.
  Position position = 2;
  // The name of the rotation.
  string name = 3;
}

// UserSource represents a single source to find a valid Monorail user to whom
// Arquebus will assign or cc issues found.
message UserSource {
  oneof from {
    // Deprecated: Use UserSource.Rotation instead.
    Oncall oncall = 1 [deprecated = true];

    // The email address of a Monorail user account.
    string email = 2; // e.g., user@chromium.org

    // Represents a rotation shift modelled in rotation-proxy.
    Oncall rotation = 3;
  }
}

// Assigner contains specifications for an Assigner job.
message Assigner {
  // The unique ID of the Assigner.
  //
  // This value will be used in URLs of UI, so keep it short. Note that
  // only lowercase alphabet letters and numbers are allowed. A hyphen may
  // be placed between letters and numbers.
  string id = 1;

  // An email list of the owners of the Assigner.
  repeated string owners = 2;

  // The duration between the start of an Assigner run and the next one.
  //
  // This value should be at least a minute long.
  google.protobuf.Duration interval = 3;

  // IssueQuery describes the search criteria to look for issues to assign.
  IssueQuery issue_query = 4;

  // If multiple values are specified in assignees, Arquebus iterates the list
  // in the order until it finds a currently available assignee. Note that
  // Monorail users are always assumed to be available.
  repeated UserSource assignees = 6;
  // If multiple values are specified in ccs, all the available roations and
  // users are added to the CC of searched issues.
  repeated UserSource ccs = 7;

  // If DryRun is set, Assigner doesn't update the found issues.
  bool dry_run = 8;

  // The description shown on UI.
  string description = 9;

  // Comment is an additional message that is added to the body of the issue
  // comment that is posted when an issue gets updated.
  string comment = 10;
}
