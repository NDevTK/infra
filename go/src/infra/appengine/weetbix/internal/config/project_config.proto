// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package weetbix.v1;

option go_package = "infra/appengine/weetbix/internal/config;config";

// ProjectConfig is the project-specific configuration data for Weetbix.
message ProjectConfig {
  // The monorail configuration to use when filing bugs.
  MonorailProject monorail = 1;

  // The threshold at which to file bugs. If a cluster's impact exceeds
  // the given threshold, a bug will be filed for it.
  ImpactThreshold bug_filing_threshold = 2;

  // The BigQuery table Weetbix should use to store clustered failures.
  // Weetbix will use this table when performing analysis. Equally, it
  // may be consumed by the project itself to do other ad-hoc analyses.
  //
  // If the table does not exist, it will be automatically created. Weetbix
  // will manage the schema and contents of this table.
  BigQueryTable clustered_failures_table = 3;
}

// Describes a BigQuery table which will be used by Weetbix.
message BigQueryTable {
  // Name of the BigQuery project.
  string project = 1;

  // Name of the BigQuery Dataset.
  string dataset = 2;

  // Name of the BigQuery Table.
  string table = 3;
}

// MonorailProject describes the configuration to use when filing bugs
// into a given monorail project.
message MonorailProject {
  // The monorail project being described.
  // E.g. "chromium".
  string project = 1;

  // The field values to use when creating new bugs.
  // For example, on chromium issue tracker, there is a manadatory
  // issue type field (field 10), which must be set to "Bug".
  repeated MonorailFieldValue default_field_values = 2;

  // The ID of the issue's priority field. You can find this by visiting
  // https://monorail-prod.appspot.com/p/<project>/adminLabels, scrolling
  // down to Custom fields and finding the ID of the field you wish to set.
  int64 priority_field_id = 3;

  // The possible bug priorities and their associated impact thresholds.
  // Priorities must be listed from highest (i.e. P0) to lowest (i.e. P3).
  // Higher priorities can only be reached if the thresholds for all lower
  // priorities are also met.
  // The impact thresholds for setting the lowest priority implicitly
  // identifies the bug closure threshold -- if no priority can be
  // matched, the bug is closed. Satisfying the threshold for filing bugs MUST
  // at least imply the threshold for the lowest priority, and MAY imply
  // the thresholds of higher priorities.
  repeated MonorailPriority priorities = 4;

  // Controls the amount of hysteresis used in setting bug priorities.
  // Once a bug is assigned a given priority, its priority will only be
  // increased if it exceeds the next priority's thresholds by the
  // specified percentage margin, and decreased if the current priority's
  // thresholds exceed the bug's impact by the given percentage margin.
  //
  // A value of 100 indicates impact may be double the threshold for
  // the next highest priority value, (or half the threshold of the
  // current priority value,) before a bug's priority is increased
  // (or decreased).
  //
  // Valid values are from 0 (no hystersis) to 1,000 (10x hysteresis).
  int64 priority_hysteresis_percent = 5;
}

// MonorailFieldValue describes a monorail field/value pair.
message MonorailFieldValue {
  // The ID of the field to set. You can find this by visiting
  // https://monorail-prod.appspot.com/p/<project>/adminLabels, scrolling
  // down to Custom fields and finding the ID of the field you wish to set.
  int64 field_id = 1;

  // The field value. Values are encoded according to the field type:
  // - Enumeration types: the string enumeration value (e.g. "Bug").
  // - Integer types: the integer, converted to a string (e.g. "1052").
  // - String types: the value, included verbatim.
  // - User types: the user's resource name (e.g. "users/2627516260").
  //   User IDs can be identified by looking at the people listing for a
  //   project:  https://monorail-prod.appspot.com/p/<project>/people/list.
  //   The User ID is included in the URL as u=<number> when clicking into
  //   the page for a particular user. For example, "user/3816576959" is
  //   https://monorail-prod.appspot.com/p/chromium/people/detail?u=3816576959.
  // - Date types: the number of seconds since epoch, as a string
  //   (e.g. "1609459200" for 1 January 2021).
  // - URL type: the URL value, as a string (e.g. "https://www.google.com/").
  //
  // The source of truth for mapping of field types to values is as
  // defined in the Monorail v3 API, found here:
  // https://source.chromium.org/chromium/infra/infra/+/main:appengine/monorail/api/v3/api_proto/issue_objects.proto?q=%22message%20FieldValue%22
  string value = 2;
}

// MonorailPriority represents configuration for when to use a given
// priority value in a bug.
message MonorailPriority {
  // The monorail priority value. For example, "0". This depends on the
  // valid priority field values you have defined in your monorail project.
  string priority = 1;

  // The threshold at which to apply the priority.
  ImpactThreshold threshold = 2;
}

// ImpactThreshold specifies a condition on a cluster's impact metrics.
// The threshold is considered satisfied if any of the individual metric
// thresholds is satisfied (i.e. if multiple thresholds are set, they are
// combined using an OR-semantic). If no threshold is set on any individual
// metric, the threshold as a whole is unsatisfiable.
message ImpactThreshold {
  // The minimum number of unexpected failures that should occur in 1 day.
  optional int64 unexpected_failures_1d = 1;

  // The minimum number of unexpected failures that should occur in 3 days.
  optional int64 unexpected_failures_3d = 2;

  // The minimum number of unexpected failures that should occur in 7 days.
  optional int64 unexpected_failures_7d = 3;
}
