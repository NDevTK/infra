// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package weetbix.v1;

import "infra/appengine/weetbix/proto/v1/common.proto";

option go_package = "infra/appengine/weetbix/proto/v1;weetbixpb";

// Represents a function Variant -> bool.
message VariantPredicate {
  oneof predicate {
    // A variant must be equal this definition exactly.
    Variant equals = 1;

    // A variant's key-value pairs must contain those in this one.
    Variant contains = 2;
  }
}

// Represents a function TestVerdict -> bool.
message TestVerdictPredicate {
  // Optional. The project-scoped realm to query the history from.
  // This is the realm without the "<project>:" prefix.
  //
  // When specified, only the test history entries found in the matching realm
  // will be returned.
  string sub_realm = 1;

  // Optional. The subset of test variants to request history for.
  VariantPredicate variant_predicate = 2;

  // Optional. Whether test verdicts generated by code with unsubmitted changes
  // (e.g. Gerrit changes) should be included in the response.
  //
  // If no filter is specified, all verdicts are returned (regardless of
  // submitted status).
  weetbix.v1.SubmittedFilter submitted_filter = 3;

  // Optional. Specify a range of timestamps to query the test history from.
  //
  // Test history older than the configured TTL (90 days) will not be returned.
  // When omitted, return all available test history.
  TimeRange partition_time_range = 4;
}
