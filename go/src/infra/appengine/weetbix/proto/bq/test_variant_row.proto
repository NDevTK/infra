// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package weetbix.bq;

import "google/protobuf/timestamp.proto";
import "infra/appengine/weetbix/proto/v1/analyzed_test_variant.proto";
import "infra/appengine/weetbix/proto/v1/common.proto";

option go_package = "infra/appengine/weetbix/proto/bq;weetbixpb";

// Verdict represent results of a test variant within an invocation.
message Verdict {
  // Id of the invocation that contains the verdict.
  string invocation = 1;

  // Status of the verdict.
  // String representation of weetbix.v1.VerdictStatus.
  string status = 2;

  // Invocation creation time.
  google.protobuf.Timestamp create_time = 3;
  // TODO: Add information about clusters and bugs.
}

// TestVariantRow represents a row in a BigQuery table for a Weetbix analyzed
// test variant.
message TestVariantRow {
  // Can be used to refer to this test variant.
  // Format:
  // "realms/{REALM}/tests/{URL_ESCAPED_TEST_ID}/variants/{VARIANT_HASH}"
  string name = 1;

  // Realm that the test variant exists under.
  // See https://source.chromium.org/chromium/infra/infra/+/main:go/src/go.chromium.org/luci/common/proto/realms/realms_config.proto
  string realm = 2;

  // Test id, identifier of the test. Unique in a LUCI realm.
  string test_id = 3;

  // Hash of the variant.
  string variant_hash = 4;

  // Description of one specific way of running the test,
  // e.g. a specific bucket, builder and a test suite.
  repeated weetbix.v1.StringPair variant = 5;

  // Information about the test at the time of its execution.
  weetbix.v1.TestMetadata test_metadata = 6;

  // Metadata for the test variant.
  // See luci.resultdb.v1.Tags for details.
  repeated weetbix.v1.StringPair tags = 7;

  // A range of time. Flake statistics are calculated using test results
  // in the verdicts that were finalized within that range.
  weetbix.v1.TimeRange time_range = 8;

  // Status of the test variant.
  // String representation of weetbix.v1.AnalyzedTestVariantStatus.
  string status = 9;

  // Flakiness statistics of the test variant.
  weetbix.v1.FlakeStatistics flake_statistics = 10;

  // Verdicts of the test variant during the time range.
  repeated Verdict verdicts = 11;

  // Partition_time is used to partition the table.
  // It's the same as the latest of time_range.
  google.protobuf.Timestamp partition_time = 12;
}
