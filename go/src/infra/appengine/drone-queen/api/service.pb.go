// Copyright 2019 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: infra/appengine/drone-queen/api/service.proto

package api

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportDroneResponse_Status int32

const (
	// UNKNOWN_ERROR should not be used normally.  It is the default
	// value if the status is missing or unknown.  For example, if the
	// service uses a new enum value that the client does not know
	// about yet, the client will use the default value.
	ReportDroneResponse_UNKNOWN_ERROR ReportDroneResponse_Status = 0
	ReportDroneResponse_OK            ReportDroneResponse_Status = 1
	ReportDroneResponse_UNKNOWN_UUID  ReportDroneResponse_Status = 2
)

// Enum value maps for ReportDroneResponse_Status.
var (
	ReportDroneResponse_Status_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "OK",
		2: "UNKNOWN_UUID",
	}
	ReportDroneResponse_Status_value = map[string]int32{
		"UNKNOWN_ERROR": 0,
		"OK":            1,
		"UNKNOWN_UUID":  2,
	}
)

func (x ReportDroneResponse_Status) Enum() *ReportDroneResponse_Status {
	p := new(ReportDroneResponse_Status)
	*p = x
	return p
}

func (x ReportDroneResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportDroneResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_infra_appengine_drone_queen_api_service_proto_enumTypes[0].Descriptor()
}

func (ReportDroneResponse_Status) Type() protoreflect.EnumType {
	return &file_infra_appengine_drone_queen_api_service_proto_enumTypes[0]
}

func (x ReportDroneResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportDroneResponse_Status.Descriptor instead.
func (ReportDroneResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{1, 0}
}

type ReportDroneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// drone_uuid is the UUID assigned to the drone.  New drones should
	// leave this empty; a new UUID will be assigned to the drone.
	DroneUuid string `protobuf:"bytes,1,opt,name=drone_uuid,json=droneUuid,proto3" json:"drone_uuid,omitempty"`
	// load_indicators are used for load balancing.
	LoadIndicators *ReportDroneRequest_LoadIndicators `protobuf:"bytes,2,opt,name=load_indicators,json=loadIndicators,proto3" json:"load_indicators,omitempty"`
	// drone_description is a human friendly description of the current drone.
	DroneDescription string `protobuf:"bytes,3,opt,name=drone_description,json=droneDescription,proto3" json:"drone_description,omitempty"`
}

func (x *ReportDroneRequest) Reset() {
	*x = ReportDroneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDroneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDroneRequest) ProtoMessage() {}

func (x *ReportDroneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDroneRequest.ProtoReflect.Descriptor instead.
func (*ReportDroneRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{0}
}

func (x *ReportDroneRequest) GetDroneUuid() string {
	if x != nil {
		return x.DroneUuid
	}
	return ""
}

func (x *ReportDroneRequest) GetLoadIndicators() *ReportDroneRequest_LoadIndicators {
	if x != nil {
		return x.LoadIndicators
	}
	return nil
}

func (x *ReportDroneRequest) GetDroneDescription() string {
	if x != nil {
		return x.DroneDescription
	}
	return ""
}

type ReportDroneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status reports the status of the call.  It is important to check
	// this for errors.
	Status ReportDroneResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=drone_queen.ReportDroneResponse_Status" json:"status,omitempty"`
	// drone_uuid is the UUID assigned to the drone.  If drone_uuid was
	// set in the request, this field will either have the same value or
	// be omitted.
	DroneUuid string `protobuf:"bytes,2,opt,name=drone_uuid,json=droneUuid,proto3" json:"drone_uuid,omitempty"`
	// expiration_time is when the current assignment expires.
	ExpirationTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	// assigned_duts are the DUTs assigned to the drone.
	AssignedDuts []string `protobuf:"bytes,4,rep,name=assigned_duts,json=assignedDuts,proto3" json:"assigned_duts,omitempty"`
	// draining_duts are the DUTs that the drone should drain.  This is
	// always a subset of assigned_duts.
	DrainingDuts []string `protobuf:"bytes,5,rep,name=draining_duts,json=drainingDuts,proto3" json:"draining_duts,omitempty"`
}

func (x *ReportDroneResponse) Reset() {
	*x = ReportDroneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDroneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDroneResponse) ProtoMessage() {}

func (x *ReportDroneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDroneResponse.ProtoReflect.Descriptor instead.
func (*ReportDroneResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{1}
}

func (x *ReportDroneResponse) GetStatus() ReportDroneResponse_Status {
	if x != nil {
		return x.Status
	}
	return ReportDroneResponse_UNKNOWN_ERROR
}

func (x *ReportDroneResponse) GetDroneUuid() string {
	if x != nil {
		return x.DroneUuid
	}
	return ""
}

func (x *ReportDroneResponse) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

func (x *ReportDroneResponse) GetAssignedDuts() []string {
	if x != nil {
		return x.AssignedDuts
	}
	return nil
}

func (x *ReportDroneResponse) GetDrainingDuts() []string {
	if x != nil {
		return x.DrainingDuts
	}
	return nil
}

type ReleaseDutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// drone_uuid is the UUID assigned to the drone.
	DroneUuid string `protobuf:"bytes,1,opt,name=drone_uuid,json=droneUuid,proto3" json:"drone_uuid,omitempty"`
	// duts to release.  It is not an error if a DUT is not assigned to
	// the drone.
	Duts []string `protobuf:"bytes,2,rep,name=duts,proto3" json:"duts,omitempty"`
}

func (x *ReleaseDutsRequest) Reset() {
	*x = ReleaseDutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseDutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseDutsRequest) ProtoMessage() {}

func (x *ReleaseDutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseDutsRequest.ProtoReflect.Descriptor instead.
func (*ReleaseDutsRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseDutsRequest) GetDroneUuid() string {
	if x != nil {
		return x.DroneUuid
	}
	return ""
}

func (x *ReleaseDutsRequest) GetDuts() []string {
	if x != nil {
		return x.Duts
	}
	return nil
}

type ReleaseDutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseDutsResponse) Reset() {
	*x = ReleaseDutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseDutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseDutsResponse) ProtoMessage() {}

func (x *ReleaseDutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseDutsResponse.ProtoReflect.Descriptor instead.
func (*ReleaseDutsResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{3}
}

type DeclareDutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// duts is all of the DUTs to be made available to drones.  DUTs
	// omitted from this list will be drained and deleted.
	Duts []string `protobuf:"bytes,1,rep,name=duts,proto3" json:"duts,omitempty"`
}

func (x *DeclareDutsRequest) Reset() {
	*x = DeclareDutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareDutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareDutsRequest) ProtoMessage() {}

func (x *DeclareDutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareDutsRequest.ProtoReflect.Descriptor instead.
func (*DeclareDutsRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeclareDutsRequest) GetDuts() []string {
	if x != nil {
		return x.Duts
	}
	return nil
}

type DeclareDutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeclareDutsResponse) Reset() {
	*x = DeclareDutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareDutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareDutsResponse) ProtoMessage() {}

func (x *DeclareDutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareDutsResponse.ProtoReflect.Descriptor instead.
func (*DeclareDutsResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{5}
}

type ListDronesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDronesRequest) Reset() {
	*x = ListDronesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDronesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDronesRequest) ProtoMessage() {}

func (x *ListDronesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDronesRequest.ProtoReflect.Descriptor instead.
func (*ListDronesRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{6}
}

type ListDronesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drones []*ListDronesResponse_Drone `protobuf:"bytes,1,rep,name=drones,proto3" json:"drones,omitempty"`
}

func (x *ListDronesResponse) Reset() {
	*x = ListDronesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDronesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDronesResponse) ProtoMessage() {}

func (x *ListDronesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDronesResponse.ProtoReflect.Descriptor instead.
func (*ListDronesResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListDronesResponse) GetDrones() []*ListDronesResponse_Drone {
	if x != nil {
		return x.Drones
	}
	return nil
}

type ListDutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDutsRequest) Reset() {
	*x = ListDutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutsRequest) ProtoMessage() {}

func (x *ListDutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutsRequest.ProtoReflect.Descriptor instead.
func (*ListDutsRequest) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{8}
}

type ListDutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duts []*ListDutsResponse_Dut `protobuf:"bytes,1,rep,name=duts,proto3" json:"duts,omitempty"`
}

func (x *ListDutsResponse) Reset() {
	*x = ListDutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutsResponse) ProtoMessage() {}

func (x *ListDutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutsResponse.ProtoReflect.Descriptor instead.
func (*ListDutsResponse) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListDutsResponse) GetDuts() []*ListDutsResponse_Dut {
	if x != nil {
		return x.Duts
	}
	return nil
}

type ReportDroneRequest_LoadIndicators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// dut_capacity is a simple load indicator that indicates how many
	// total DUTs the drone can support.
	DutCapacity uint32 `protobuf:"varint,1,opt,name=dut_capacity,json=dutCapacity,proto3" json:"dut_capacity,omitempty"`
}

func (x *ReportDroneRequest_LoadIndicators) Reset() {
	*x = ReportDroneRequest_LoadIndicators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDroneRequest_LoadIndicators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDroneRequest_LoadIndicators) ProtoMessage() {}

func (x *ReportDroneRequest_LoadIndicators) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDroneRequest_LoadIndicators.ProtoReflect.Descriptor instead.
func (*ReportDroneRequest_LoadIndicators) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ReportDroneRequest_LoadIndicators) GetDutCapacity() uint32 {
	if x != nil {
		return x.DutCapacity
	}
	return 0
}

type ListDronesResponse_Drone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExpirationTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	DroneDescription string                 `protobuf:"bytes,3,opt,name=drone_description,json=droneDescription,proto3" json:"drone_description,omitempty"`
}

func (x *ListDronesResponse_Drone) Reset() {
	*x = ListDronesResponse_Drone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDronesResponse_Drone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDronesResponse_Drone) ProtoMessage() {}

func (x *ListDronesResponse_Drone) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDronesResponse_Drone.ProtoReflect.Descriptor instead.
func (*ListDronesResponse_Drone) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListDronesResponse_Drone) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListDronesResponse_Drone) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

func (x *ListDronesResponse_Drone) GetDroneDescription() string {
	if x != nil {
		return x.DroneDescription
	}
	return ""
}

type ListDutsResponse_Dut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssignedDrone string `protobuf:"bytes,2,opt,name=assigned_drone,json=assignedDrone,proto3" json:"assigned_drone,omitempty"`
	Draining      bool   `protobuf:"varint,3,opt,name=draining,proto3" json:"draining,omitempty"`
}

func (x *ListDutsResponse_Dut) Reset() {
	*x = ListDutsResponse_Dut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutsResponse_Dut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutsResponse_Dut) ProtoMessage() {}

func (x *ListDutsResponse_Dut) ProtoReflect() protoreflect.Message {
	mi := &file_infra_appengine_drone_queen_api_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutsResponse_Dut.ProtoReflect.Descriptor instead.
func (*ListDutsResponse_Dut) Descriptor() ([]byte, []int) {
	return file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListDutsResponse_Dut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListDutsResponse_Dut) GetAssignedDrone() string {
	if x != nil {
		return x.AssignedDrone
	}
	return ""
}

func (x *ListDutsResponse_Dut) GetDraining() bool {
	if x != nil {
		return x.Draining
	}
	return false
}

var File_infra_appengine_drone_queen_api_service_proto protoreflect.FileDescriptor

var file_infra_appengine_drone_queen_api_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x57, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64,
	0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x33, 0x0a, 0x0e, 0x4c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x75, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x64, 0x75, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0xbb,
	0x02, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72, 0x6f, 0x6e, 0x65,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x72, 0x6f,
	0x6e, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x75, 0x74, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x75, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x44, 0x75, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x02, 0x22, 0x47, 0x0a, 0x12,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x75, 0x74, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x12,
	0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x75, 0x74, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72,
	0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x64, 0x72, 0x6f,
	0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x72, 0x6f, 0x6e,
	0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x6f, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x72, 0x6f, 0x6e, 0x65,
	0x52, 0x06, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x73, 0x1a, 0x89, 0x01, 0x0a, 0x05, 0x44, 0x72, 0x6f,
	0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x72, 0x6f, 0x6e, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04,
	0x64, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x72, 0x6f,
	0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x75, 0x74, 0x52, 0x04, 0x64,
	0x75, 0x74, 0x73, 0x1a, 0x58, 0x0a, 0x03, 0x44, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x72, 0x6f, 0x6e,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x32, 0xab, 0x01,
	0x0a, 0x05, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x72, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x72, 0x6f, 0x6e, 0x65,
	0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x72, 0x6f, 0x6e,
	0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x65, 0x0a, 0x11, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x50, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x44, 0x75, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x44, 0x65,
	0x63, 0x6c, 0x61, 0x72, 0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x44,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xa1, 0x01, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x4d,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x64,
	0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x72, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64,
	0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x72, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x72, 0x6f, 0x6e,
	0x65, 0x5f, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x65, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x2d,
	0x71, 0x75, 0x65, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_infra_appengine_drone_queen_api_service_proto_rawDescOnce sync.Once
	file_infra_appengine_drone_queen_api_service_proto_rawDescData = file_infra_appengine_drone_queen_api_service_proto_rawDesc
)

func file_infra_appengine_drone_queen_api_service_proto_rawDescGZIP() []byte {
	file_infra_appengine_drone_queen_api_service_proto_rawDescOnce.Do(func() {
		file_infra_appengine_drone_queen_api_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_appengine_drone_queen_api_service_proto_rawDescData)
	})
	return file_infra_appengine_drone_queen_api_service_proto_rawDescData
}

var file_infra_appengine_drone_queen_api_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_infra_appengine_drone_queen_api_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_infra_appengine_drone_queen_api_service_proto_goTypes = []interface{}{
	(ReportDroneResponse_Status)(0),           // 0: drone_queen.ReportDroneResponse.Status
	(*ReportDroneRequest)(nil),                // 1: drone_queen.ReportDroneRequest
	(*ReportDroneResponse)(nil),               // 2: drone_queen.ReportDroneResponse
	(*ReleaseDutsRequest)(nil),                // 3: drone_queen.ReleaseDutsRequest
	(*ReleaseDutsResponse)(nil),               // 4: drone_queen.ReleaseDutsResponse
	(*DeclareDutsRequest)(nil),                // 5: drone_queen.DeclareDutsRequest
	(*DeclareDutsResponse)(nil),               // 6: drone_queen.DeclareDutsResponse
	(*ListDronesRequest)(nil),                 // 7: drone_queen.ListDronesRequest
	(*ListDronesResponse)(nil),                // 8: drone_queen.ListDronesResponse
	(*ListDutsRequest)(nil),                   // 9: drone_queen.ListDutsRequest
	(*ListDutsResponse)(nil),                  // 10: drone_queen.ListDutsResponse
	(*ReportDroneRequest_LoadIndicators)(nil), // 11: drone_queen.ReportDroneRequest.LoadIndicators
	(*ListDronesResponse_Drone)(nil),          // 12: drone_queen.ListDronesResponse.Drone
	(*ListDutsResponse_Dut)(nil),              // 13: drone_queen.ListDutsResponse.Dut
	(*timestamppb.Timestamp)(nil),             // 14: google.protobuf.Timestamp
}
var file_infra_appengine_drone_queen_api_service_proto_depIdxs = []int32{
	11, // 0: drone_queen.ReportDroneRequest.load_indicators:type_name -> drone_queen.ReportDroneRequest.LoadIndicators
	0,  // 1: drone_queen.ReportDroneResponse.status:type_name -> drone_queen.ReportDroneResponse.Status
	14, // 2: drone_queen.ReportDroneResponse.expiration_time:type_name -> google.protobuf.Timestamp
	12, // 3: drone_queen.ListDronesResponse.drones:type_name -> drone_queen.ListDronesResponse.Drone
	13, // 4: drone_queen.ListDutsResponse.duts:type_name -> drone_queen.ListDutsResponse.Dut
	14, // 5: drone_queen.ListDronesResponse.Drone.expiration_time:type_name -> google.protobuf.Timestamp
	1,  // 6: drone_queen.Drone.ReportDrone:input_type -> drone_queen.ReportDroneRequest
	3,  // 7: drone_queen.Drone.ReleaseDuts:input_type -> drone_queen.ReleaseDutsRequest
	5,  // 8: drone_queen.InventoryProvider.DeclareDuts:input_type -> drone_queen.DeclareDutsRequest
	7,  // 9: drone_queen.Inspect.ListDrones:input_type -> drone_queen.ListDronesRequest
	9,  // 10: drone_queen.Inspect.ListDuts:input_type -> drone_queen.ListDutsRequest
	2,  // 11: drone_queen.Drone.ReportDrone:output_type -> drone_queen.ReportDroneResponse
	4,  // 12: drone_queen.Drone.ReleaseDuts:output_type -> drone_queen.ReleaseDutsResponse
	6,  // 13: drone_queen.InventoryProvider.DeclareDuts:output_type -> drone_queen.DeclareDutsResponse
	8,  // 14: drone_queen.Inspect.ListDrones:output_type -> drone_queen.ListDronesResponse
	10, // 15: drone_queen.Inspect.ListDuts:output_type -> drone_queen.ListDutsResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_infra_appengine_drone_queen_api_service_proto_init() }
func file_infra_appengine_drone_queen_api_service_proto_init() {
	if File_infra_appengine_drone_queen_api_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDroneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDroneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseDutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseDutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareDutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareDutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDronesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDronesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDroneRequest_LoadIndicators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDronesResponse_Drone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_appengine_drone_queen_api_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutsResponse_Dut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_appengine_drone_queen_api_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_infra_appengine_drone_queen_api_service_proto_goTypes,
		DependencyIndexes: file_infra_appengine_drone_queen_api_service_proto_depIdxs,
		EnumInfos:         file_infra_appengine_drone_queen_api_service_proto_enumTypes,
		MessageInfos:      file_infra_appengine_drone_queen_api_service_proto_msgTypes,
	}.Build()
	File_infra_appengine_drone_queen_api_service_proto = out.File
	file_infra_appengine_drone_queen_api_service_proto_rawDesc = nil
	file_infra_appengine_drone_queen_api_service_proto_goTypes = nil
	file_infra_appengine_drone_queen_api_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DroneClient is the client API for Drone service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DroneClient interface {
	// ReportDrone is called by drones to report liveness and get DUT
	// assignments.
	//
	// See the README for details on the contract that the drone must
	// follow.
	ReportDrone(ctx context.Context, in *ReportDroneRequest, opts ...grpc.CallOption) (*ReportDroneResponse, error)
	// ReleaseDuts is called by drones to release ownership of DUTs.
	ReleaseDuts(ctx context.Context, in *ReleaseDutsRequest, opts ...grpc.CallOption) (*ReleaseDutsResponse, error)
}
type dronePRPCClient struct {
	client *prpc.Client
}

func NewDronePRPCClient(client *prpc.Client) DroneClient {
	return &dronePRPCClient{client}
}

func (c *dronePRPCClient) ReportDrone(ctx context.Context, in *ReportDroneRequest, opts ...grpc.CallOption) (*ReportDroneResponse, error) {
	out := new(ReportDroneResponse)
	err := c.client.Call(ctx, "drone_queen.Drone", "ReportDrone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dronePRPCClient) ReleaseDuts(ctx context.Context, in *ReleaseDutsRequest, opts ...grpc.CallOption) (*ReleaseDutsResponse, error) {
	out := new(ReleaseDutsResponse)
	err := c.client.Call(ctx, "drone_queen.Drone", "ReleaseDuts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type droneClient struct {
	cc grpc.ClientConnInterface
}

func NewDroneClient(cc grpc.ClientConnInterface) DroneClient {
	return &droneClient{cc}
}

func (c *droneClient) ReportDrone(ctx context.Context, in *ReportDroneRequest, opts ...grpc.CallOption) (*ReportDroneResponse, error) {
	out := new(ReportDroneResponse)
	err := c.cc.Invoke(ctx, "/drone_queen.Drone/ReportDrone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *droneClient) ReleaseDuts(ctx context.Context, in *ReleaseDutsRequest, opts ...grpc.CallOption) (*ReleaseDutsResponse, error) {
	out := new(ReleaseDutsResponse)
	err := c.cc.Invoke(ctx, "/drone_queen.Drone/ReleaseDuts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DroneServer is the server API for Drone service.
type DroneServer interface {
	// ReportDrone is called by drones to report liveness and get DUT
	// assignments.
	//
	// See the README for details on the contract that the drone must
	// follow.
	ReportDrone(context.Context, *ReportDroneRequest) (*ReportDroneResponse, error)
	// ReleaseDuts is called by drones to release ownership of DUTs.
	ReleaseDuts(context.Context, *ReleaseDutsRequest) (*ReleaseDutsResponse, error)
}

// UnimplementedDroneServer can be embedded to have forward compatible implementations.
type UnimplementedDroneServer struct {
}

func (*UnimplementedDroneServer) ReportDrone(context.Context, *ReportDroneRequest) (*ReportDroneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportDrone not implemented")
}
func (*UnimplementedDroneServer) ReleaseDuts(context.Context, *ReleaseDutsRequest) (*ReleaseDutsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseDuts not implemented")
}

func RegisterDroneServer(s prpc.Registrar, srv DroneServer) {
	s.RegisterService(&_Drone_serviceDesc, srv)
}

func _Drone_ReportDrone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportDroneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DroneServer).ReportDrone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drone_queen.Drone/ReportDrone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DroneServer).ReportDrone(ctx, req.(*ReportDroneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Drone_ReleaseDuts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseDutsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DroneServer).ReleaseDuts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drone_queen.Drone/ReleaseDuts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DroneServer).ReleaseDuts(ctx, req.(*ReleaseDutsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Drone_serviceDesc = grpc.ServiceDesc{
	ServiceName: "drone_queen.Drone",
	HandlerType: (*DroneServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReportDrone",
			Handler:    _Drone_ReportDrone_Handler,
		},
		{
			MethodName: "ReleaseDuts",
			Handler:    _Drone_ReleaseDuts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/drone-queen/api/service.proto",
}

// InventoryProviderClient is the client API for InventoryProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InventoryProviderClient interface {
	// DeclareDuts tells the service about all of the DUTs available to
	// assign to drones.
	DeclareDuts(ctx context.Context, in *DeclareDutsRequest, opts ...grpc.CallOption) (*DeclareDutsResponse, error)
}
type inventoryProviderPRPCClient struct {
	client *prpc.Client
}

func NewInventoryProviderPRPCClient(client *prpc.Client) InventoryProviderClient {
	return &inventoryProviderPRPCClient{client}
}

func (c *inventoryProviderPRPCClient) DeclareDuts(ctx context.Context, in *DeclareDutsRequest, opts ...grpc.CallOption) (*DeclareDutsResponse, error) {
	out := new(DeclareDutsResponse)
	err := c.client.Call(ctx, "drone_queen.InventoryProvider", "DeclareDuts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type inventoryProviderClient struct {
	cc grpc.ClientConnInterface
}

func NewInventoryProviderClient(cc grpc.ClientConnInterface) InventoryProviderClient {
	return &inventoryProviderClient{cc}
}

func (c *inventoryProviderClient) DeclareDuts(ctx context.Context, in *DeclareDutsRequest, opts ...grpc.CallOption) (*DeclareDutsResponse, error) {
	out := new(DeclareDutsResponse)
	err := c.cc.Invoke(ctx, "/drone_queen.InventoryProvider/DeclareDuts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InventoryProviderServer is the server API for InventoryProvider service.
type InventoryProviderServer interface {
	// DeclareDuts tells the service about all of the DUTs available to
	// assign to drones.
	DeclareDuts(context.Context, *DeclareDutsRequest) (*DeclareDutsResponse, error)
}

// UnimplementedInventoryProviderServer can be embedded to have forward compatible implementations.
type UnimplementedInventoryProviderServer struct {
}

func (*UnimplementedInventoryProviderServer) DeclareDuts(context.Context, *DeclareDutsRequest) (*DeclareDutsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclareDuts not implemented")
}

func RegisterInventoryProviderServer(s prpc.Registrar, srv InventoryProviderServer) {
	s.RegisterService(&_InventoryProvider_serviceDesc, srv)
}

func _InventoryProvider_DeclareDuts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeclareDutsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryProviderServer).DeclareDuts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drone_queen.InventoryProvider/DeclareDuts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryProviderServer).DeclareDuts(ctx, req.(*DeclareDutsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InventoryProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "drone_queen.InventoryProvider",
	HandlerType: (*InventoryProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeclareDuts",
			Handler:    _InventoryProvider_DeclareDuts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/drone-queen/api/service.proto",
}

// InspectClient is the client API for Inspect service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InspectClient interface {
	ListDrones(ctx context.Context, in *ListDronesRequest, opts ...grpc.CallOption) (*ListDronesResponse, error)
	ListDuts(ctx context.Context, in *ListDutsRequest, opts ...grpc.CallOption) (*ListDutsResponse, error)
}
type inspectPRPCClient struct {
	client *prpc.Client
}

func NewInspectPRPCClient(client *prpc.Client) InspectClient {
	return &inspectPRPCClient{client}
}

func (c *inspectPRPCClient) ListDrones(ctx context.Context, in *ListDronesRequest, opts ...grpc.CallOption) (*ListDronesResponse, error) {
	out := new(ListDronesResponse)
	err := c.client.Call(ctx, "drone_queen.Inspect", "ListDrones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inspectPRPCClient) ListDuts(ctx context.Context, in *ListDutsRequest, opts ...grpc.CallOption) (*ListDutsResponse, error) {
	out := new(ListDutsResponse)
	err := c.client.Call(ctx, "drone_queen.Inspect", "ListDuts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type inspectClient struct {
	cc grpc.ClientConnInterface
}

func NewInspectClient(cc grpc.ClientConnInterface) InspectClient {
	return &inspectClient{cc}
}

func (c *inspectClient) ListDrones(ctx context.Context, in *ListDronesRequest, opts ...grpc.CallOption) (*ListDronesResponse, error) {
	out := new(ListDronesResponse)
	err := c.cc.Invoke(ctx, "/drone_queen.Inspect/ListDrones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inspectClient) ListDuts(ctx context.Context, in *ListDutsRequest, opts ...grpc.CallOption) (*ListDutsResponse, error) {
	out := new(ListDutsResponse)
	err := c.cc.Invoke(ctx, "/drone_queen.Inspect/ListDuts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InspectServer is the server API for Inspect service.
type InspectServer interface {
	ListDrones(context.Context, *ListDronesRequest) (*ListDronesResponse, error)
	ListDuts(context.Context, *ListDutsRequest) (*ListDutsResponse, error)
}

// UnimplementedInspectServer can be embedded to have forward compatible implementations.
type UnimplementedInspectServer struct {
}

func (*UnimplementedInspectServer) ListDrones(context.Context, *ListDronesRequest) (*ListDronesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDrones not implemented")
}
func (*UnimplementedInspectServer) ListDuts(context.Context, *ListDutsRequest) (*ListDutsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDuts not implemented")
}

func RegisterInspectServer(s prpc.Registrar, srv InspectServer) {
	s.RegisterService(&_Inspect_serviceDesc, srv)
}

func _Inspect_ListDrones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDronesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InspectServer).ListDrones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drone_queen.Inspect/ListDrones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InspectServer).ListDrones(ctx, req.(*ListDronesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Inspect_ListDuts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDutsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InspectServer).ListDuts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drone_queen.Inspect/ListDuts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InspectServer).ListDuts(ctx, req.(*ListDutsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Inspect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "drone_queen.Inspect",
	HandlerType: (*InspectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDrones",
			Handler:    _Inspect_ListDrones_Handler,
		},
		{
			MethodName: "ListDuts",
			Handler:    _Inspect_ListDuts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/drone-queen/api/service.proto",
}
