// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/appengine/unified-fleet/api/v1/registration.proto

package api

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterMachinesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterMachinesRequest) Reset()         { *m = RegisterMachinesRequest{} }
func (m *RegisterMachinesRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterMachinesRequest) ProtoMessage()    {}
func (*RegisterMachinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03b63be86218c229, []int{0}
}

func (m *RegisterMachinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterMachinesRequest.Unmarshal(m, b)
}
func (m *RegisterMachinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterMachinesRequest.Marshal(b, m, deterministic)
}
func (m *RegisterMachinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterMachinesRequest.Merge(m, src)
}
func (m *RegisterMachinesRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterMachinesRequest.Size(m)
}
func (m *RegisterMachinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterMachinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterMachinesRequest proto.InternalMessageInfo

type RegisterMachinesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterMachinesResponse) Reset()         { *m = RegisterMachinesResponse{} }
func (m *RegisterMachinesResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterMachinesResponse) ProtoMessage()    {}
func (*RegisterMachinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_03b63be86218c229, []int{1}
}

func (m *RegisterMachinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterMachinesResponse.Unmarshal(m, b)
}
func (m *RegisterMachinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterMachinesResponse.Marshal(b, m, deterministic)
}
func (m *RegisterMachinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterMachinesResponse.Merge(m, src)
}
func (m *RegisterMachinesResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterMachinesResponse.Size(m)
}
func (m *RegisterMachinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterMachinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterMachinesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterMachinesRequest)(nil), "fleet.RegisterMachinesRequest")
	proto.RegisterType((*RegisterMachinesResponse)(nil), "fleet.RegisterMachinesResponse")
}

func init() {
	proto.RegisterFile("infra/appengine/unified-fleet/api/v1/registration.proto", fileDescriptor_03b63be86218c229)
}

var fileDescriptor_03b63be86218c229 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8e, 0x21, 0x0f, 0xc2, 0x30,
	0x10, 0x46, 0x05, 0x19, 0xa2, 0x41, 0x90, 0x1a, 0x60, 0x02, 0x92, 0x79, 0xda, 0x00, 0x02, 0x8f,
	0xc7, 0x14, 0x87, 0x3b, 0xc6, 0x75, 0x5c, 0x42, 0xae, 0x47, 0xdb, 0xf1, 0xfb, 0x49, 0x8a, 0x21,
	0x2c, 0xd3, 0xef, 0xcb, 0x7b, 0x9f, 0x3a, 0x12, 0xfb, 0x08, 0x16, 0x44, 0x90, 0x3b, 0x62, 0xb4,
	0x3d, 0x93, 0x27, 0xbc, 0x6f, 0xfd, 0x13, 0x31, 0x5b, 0x10, 0xb2, 0xef, 0x9d, 0x8d, 0xd8, 0x51,
	0xca, 0x11, 0x32, 0x05, 0x36, 0x12, 0x43, 0x0e, 0xba, 0x2a, 0x83, 0x66, 0xa5, 0x16, 0xae, 0x40,
	0x8c, 0x67, 0x68, 0x1f, 0xc4, 0x98, 0x1c, 0xbe, 0x7a, 0x4c, 0xb9, 0xa9, 0xd5, 0x72, 0x88, 0x92,
	0x04, 0x4e, 0xb8, 0x6f, 0xd5, 0xcc, 0xfd, 0x38, 0xf5, 0x45, 0xcd, 0xff, 0xb7, 0x7a, 0x6d, 0x4a,
	0xc2, 0x8c, 0xf8, 0xeb, 0xcd, 0x28, 0xff, 0x46, 0x4e, 0xd5, 0x75, 0x02, 0x42, 0xb7, 0x69, 0x39,
	0x7c, 0xf8, 0x04, 0x00, 0x00, 0xff, 0xff, 0x75, 0x50, 0x1d, 0xa2, 0xeb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RegistrationClient is the client API for Registration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationClient interface {
	// RegisterMachines registers new Chrome/ChromeLab machines.
	RegisterMachines(ctx context.Context, in *RegisterMachinesRequest, opts ...grpc.CallOption) (*RegisterMachinesResponse, error)
}
type registrationPRPCClient struct {
	client *prpc.Client
}

func NewRegistrationPRPCClient(client *prpc.Client) RegistrationClient {
	return &registrationPRPCClient{client}
}

func (c *registrationPRPCClient) RegisterMachines(ctx context.Context, in *RegisterMachinesRequest, opts ...grpc.CallOption) (*RegisterMachinesResponse, error) {
	out := new(RegisterMachinesResponse)
	err := c.client.Call(ctx, "fleet.Registration", "RegisterMachines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type registrationClient struct {
	cc grpc.ClientConnInterface
}

func NewRegistrationClient(cc grpc.ClientConnInterface) RegistrationClient {
	return &registrationClient{cc}
}

func (c *registrationClient) RegisterMachines(ctx context.Context, in *RegisterMachinesRequest, opts ...grpc.CallOption) (*RegisterMachinesResponse, error) {
	out := new(RegisterMachinesResponse)
	err := c.cc.Invoke(ctx, "/fleet.Registration/RegisterMachines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistrationServer is the server API for Registration service.
type RegistrationServer interface {
	// RegisterMachines registers new Chrome/ChromeLab machines.
	RegisterMachines(context.Context, *RegisterMachinesRequest) (*RegisterMachinesResponse, error)
}

// UnimplementedRegistrationServer can be embedded to have forward compatible implementations.
type UnimplementedRegistrationServer struct {
}

func (*UnimplementedRegistrationServer) RegisterMachines(ctx context.Context, req *RegisterMachinesRequest) (*RegisterMachinesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterMachines not implemented")
}

func RegisterRegistrationServer(s prpc.Registrar, srv RegistrationServer) {
	s.RegisterService(&_Registration_serviceDesc, srv)
}

func _Registration_RegisterMachines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterMachinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).RegisterMachines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleet.Registration/RegisterMachines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).RegisterMachines(ctx, req.(*RegisterMachinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Registration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fleet.Registration",
	HandlerType: (*RegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterMachines",
			Handler:    _Registration_RegisterMachines_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/unified-fleet/api/v1/registration.proto",
}
