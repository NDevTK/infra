// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/appengine/crosskylabadmin/app/config/config.proto

package config

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Config is the configuration data served by luci-config for this app.
type Config struct {
	// AccessGroup is the luci-auth group controlling access to admin app APIs.
	AccessGroup string `protobuf:"bytes,1,opt,name=access_group,json=accessGroup,proto3" json:"access_group,omitempty"`
	// Swarming contains information about the Swarming instance that hosts the
	// bots managed by this app.
	Swarming *Swarming `protobuf:"bytes,2,opt,name=swarming,proto3" json:"swarming,omitempty"`
	// Tasker contains configuration data specific to the Tasker API endpoints.
	Tasker *Tasker `protobuf:"bytes,3,opt,name=tasker,proto3" json:"tasker,omitempty"`
	// Cron contains the configuration data specific to cron jobs on this app.
	Cron *Cron `protobuf:"bytes,4,opt,name=cron,proto3" json:"cron,omitempty"`
	// Inventory contains configuration information about skylab inventory
	// repo.
	Inventory            *Inventory `protobuf:"bytes,5,opt,name=inventory,proto3" json:"inventory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_d85dab011e4afc14, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetAccessGroup() string {
	if m != nil {
		return m.AccessGroup
	}
	return ""
}

func (m *Config) GetSwarming() *Swarming {
	if m != nil {
		return m.Swarming
	}
	return nil
}

func (m *Config) GetTasker() *Tasker {
	if m != nil {
		return m.Tasker
	}
	return nil
}

func (m *Config) GetCron() *Cron {
	if m != nil {
		return m.Cron
	}
	return nil
}

func (m *Config) GetInventory() *Inventory {
	if m != nil {
		return m.Inventory
	}
	return nil
}

// Swarming contains information about the Swarming instance that hosts the bots
// managed by this app.
type Swarming struct {
	// Host is the swarming instance hosting skylab bots.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// BotPool is the swarming pool containing skylab bots.
	BotPool string `protobuf:"bytes,2,opt,name=bot_pool,json=botPool,proto3" json:"bot_pool,omitempty"`
	// FleetAdminTaskTag identifies all tasks created by the fleet admin app.
	FleetAdminTaskTag string `protobuf:"bytes,3,opt,name=fleet_admin_task_tag,json=fleetAdminTaskTag,proto3" json:"fleet_admin_task_tag,omitempty"`
	// LuciProjectTag is the swarming tag that associates the task with a
	// luci project, allowing milo to work with the swarming UI.
	LuciProjectTag       string   `protobuf:"bytes,4,opt,name=luci_project_tag,json=luciProjectTag,proto3" json:"luci_project_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Swarming) Reset()         { *m = Swarming{} }
func (m *Swarming) String() string { return proto.CompactTextString(m) }
func (*Swarming) ProtoMessage()    {}
func (*Swarming) Descriptor() ([]byte, []int) {
	return fileDescriptor_d85dab011e4afc14, []int{1}
}

func (m *Swarming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Swarming.Unmarshal(m, b)
}
func (m *Swarming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Swarming.Marshal(b, m, deterministic)
}
func (m *Swarming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Swarming.Merge(m, src)
}
func (m *Swarming) XXX_Size() int {
	return xxx_messageInfo_Swarming.Size(m)
}
func (m *Swarming) XXX_DiscardUnknown() {
	xxx_messageInfo_Swarming.DiscardUnknown(m)
}

var xxx_messageInfo_Swarming proto.InternalMessageInfo

func (m *Swarming) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Swarming) GetBotPool() string {
	if m != nil {
		return m.BotPool
	}
	return ""
}

func (m *Swarming) GetFleetAdminTaskTag() string {
	if m != nil {
		return m.FleetAdminTaskTag
	}
	return ""
}

func (m *Swarming) GetLuciProjectTag() string {
	if m != nil {
		return m.LuciProjectTag
	}
	return ""
}

// Tasker contains configuration data specific to the Tasker API endpoints.
type Tasker struct {
	// BackgroundTaskExecutionTimeoutSecs is the execution timeout (in
	// seconds) for background tasks created by tasker.
	BackgroundTaskExecutionTimeoutSecs int64 `protobuf:"varint,1,opt,name=background_task_execution_timeout_secs,json=backgroundTaskExecutionTimeoutSecs,proto3" json:"background_task_execution_timeout_secs,omitempty"`
	// BackgroundTaskExpirationSecs is the expiration time (in seconds) for
	// background tasks created by tasker.
	BackgroundTaskExpirationSecs int64 `protobuf:"varint,2,opt,name=background_task_expiration_secs,json=backgroundTaskExpirationSecs,proto3" json:"background_task_expiration_secs,omitempty"`
	// LogdogHost is the Logdog host to use for logging from the created tasks.
	LogdogHost           string   `protobuf:"bytes,3,opt,name=logdog_host,json=logdogHost,proto3" json:"logdog_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tasker) Reset()         { *m = Tasker{} }
func (m *Tasker) String() string { return proto.CompactTextString(m) }
func (*Tasker) ProtoMessage()    {}
func (*Tasker) Descriptor() ([]byte, []int) {
	return fileDescriptor_d85dab011e4afc14, []int{2}
}

func (m *Tasker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tasker.Unmarshal(m, b)
}
func (m *Tasker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tasker.Marshal(b, m, deterministic)
}
func (m *Tasker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tasker.Merge(m, src)
}
func (m *Tasker) XXX_Size() int {
	return xxx_messageInfo_Tasker.Size(m)
}
func (m *Tasker) XXX_DiscardUnknown() {
	xxx_messageInfo_Tasker.DiscardUnknown(m)
}

var xxx_messageInfo_Tasker proto.InternalMessageInfo

func (m *Tasker) GetBackgroundTaskExecutionTimeoutSecs() int64 {
	if m != nil {
		return m.BackgroundTaskExecutionTimeoutSecs
	}
	return 0
}

func (m *Tasker) GetBackgroundTaskExpirationSecs() int64 {
	if m != nil {
		return m.BackgroundTaskExpirationSecs
	}
	return 0
}

func (m *Tasker) GetLogdogHost() string {
	if m != nil {
		return m.LogdogHost
	}
	return ""
}

// Cron contains the configuration data specific to cron jobs on this app.
type Cron struct {
	// FleetAdminTaskPriority is the swarming task priority of created tasks.
	//
	// This must be numerically smaller (i.e. more important) than Skylab's test
	// task priority range [49-255] and numerically larger than the minimum
	// allowed Swarming priority (20) for non administrator users.
	FleetAdminTaskPriority int64 `protobuf:"varint,1,opt,name=fleet_admin_task_priority,json=fleetAdminTaskPriority,proto3" json:"fleet_admin_task_priority,omitempty"`
	// EnsureTasksCount is the number of background tasks maintained against
	// each bot.
	EnsureTasksCount int32 `protobuf:"varint,2,opt,name=ensure_tasks_count,json=ensureTasksCount,proto3" json:"ensure_tasks_count,omitempty"`
	// RepairIdleDuration is the duration for which a bot in the fleet must have
	// been idle for a repair task to be created against it.
	RepairIdleDuration *duration.Duration `protobuf:"bytes,3,opt,name=repair_idle_duration,json=repairIdleDuration,proto3" json:"repair_idle_duration,omitempty"`
	// RepairAttemptDelayDuration is the time between successive attempts at
	// repairing repair failed bots in the fleet.
	RepairAttemptDelayDuration *duration.Duration `protobuf:"bytes,4,opt,name=repair_attempt_delay_duration,json=repairAttemptDelayDuration,proto3" json:"repair_attempt_delay_duration,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}           `json:"-"`
	XXX_unrecognized           []byte             `json:"-"`
	XXX_sizecache              int32              `json:"-"`
}

func (m *Cron) Reset()         { *m = Cron{} }
func (m *Cron) String() string { return proto.CompactTextString(m) }
func (*Cron) ProtoMessage()    {}
func (*Cron) Descriptor() ([]byte, []int) {
	return fileDescriptor_d85dab011e4afc14, []int{3}
}

func (m *Cron) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cron.Unmarshal(m, b)
}
func (m *Cron) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cron.Marshal(b, m, deterministic)
}
func (m *Cron) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cron.Merge(m, src)
}
func (m *Cron) XXX_Size() int {
	return xxx_messageInfo_Cron.Size(m)
}
func (m *Cron) XXX_DiscardUnknown() {
	xxx_messageInfo_Cron.DiscardUnknown(m)
}

var xxx_messageInfo_Cron proto.InternalMessageInfo

func (m *Cron) GetFleetAdminTaskPriority() int64 {
	if m != nil {
		return m.FleetAdminTaskPriority
	}
	return 0
}

func (m *Cron) GetEnsureTasksCount() int32 {
	if m != nil {
		return m.EnsureTasksCount
	}
	return 0
}

func (m *Cron) GetRepairIdleDuration() *duration.Duration {
	if m != nil {
		return m.RepairIdleDuration
	}
	return nil
}

func (m *Cron) GetRepairAttemptDelayDuration() *duration.Duration {
	if m != nil {
		return m.RepairAttemptDelayDuration
	}
	return nil
}

// Skylab inventory is stored in a git project. A Gitiles server as well as
// Gerrit review server are used by this app to view and update the inventory
// data.
type Inventory struct {
	// Gitiles server hosting inventory project.
	// e.g. chromium.googlesource.com
	GitilesHost string `protobuf:"bytes,1,opt,name=gitiles_host,json=gitilesHost,proto3" json:"gitiles_host,omitempty"`
	// Gerrit code review server hosting inventory project.
	// e.g. chromium-review.googlesource.com
	GerritHost string `protobuf:"bytes,2,opt,name=gerrit_host,json=gerritHost,proto3" json:"gerrit_host,omitempty"`
	// Git project containing the inventory data.
	Project string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// Git branch from the inventory project to be used.
	Branch string `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	// Path to the lab inventory data file within the git project.
	// e.g. data/skylab/lab.textpb
	//
	// This field will be deprecated soon, in favor of lab_data_path.
	DataPath string `protobuf:"bytes,5,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	// Inventory environment managed by this instance of the app.
	// e.g. ENVIRONMENT_STAGING
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	// Path to the infrastructure inventory data file within the git project.
	// e.g. data/skylab/server_db.textpb
	InfrastructureDataPath string `protobuf:"bytes,7,opt,name=infrastructure_data_path,json=infrastructureDataPath,proto3" json:"infrastructure_data_path,omitempty"`
	// Reserved and not yet used. Will relace data_path when that field is deprecated.
	//
	// Path to the lab inventory data file within the git project.
	// e.g. data/skylab/lab.textpb
	LabDataPath          string   `protobuf:"bytes,8,opt,name=lab_data_path,json=labDataPath,proto3" json:"lab_data_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inventory) Reset()         { *m = Inventory{} }
func (m *Inventory) String() string { return proto.CompactTextString(m) }
func (*Inventory) ProtoMessage()    {}
func (*Inventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_d85dab011e4afc14, []int{4}
}

func (m *Inventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory.Unmarshal(m, b)
}
func (m *Inventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory.Marshal(b, m, deterministic)
}
func (m *Inventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory.Merge(m, src)
}
func (m *Inventory) XXX_Size() int {
	return xxx_messageInfo_Inventory.Size(m)
}
func (m *Inventory) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory proto.InternalMessageInfo

func (m *Inventory) GetGitilesHost() string {
	if m != nil {
		return m.GitilesHost
	}
	return ""
}

func (m *Inventory) GetGerritHost() string {
	if m != nil {
		return m.GerritHost
	}
	return ""
}

func (m *Inventory) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Inventory) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Inventory) GetDataPath() string {
	if m != nil {
		return m.DataPath
	}
	return ""
}

func (m *Inventory) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Inventory) GetInfrastructureDataPath() string {
	if m != nil {
		return m.InfrastructureDataPath
	}
	return ""
}

func (m *Inventory) GetLabDataPath() string {
	if m != nil {
		return m.LabDataPath
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "crosskylabadmin.config.Config")
	proto.RegisterType((*Swarming)(nil), "crosskylabadmin.config.Swarming")
	proto.RegisterType((*Tasker)(nil), "crosskylabadmin.config.Tasker")
	proto.RegisterType((*Cron)(nil), "crosskylabadmin.config.Cron")
	proto.RegisterType((*Inventory)(nil), "crosskylabadmin.config.Inventory")
}

func init() {
	proto.RegisterFile("infra/appengine/crosskylabadmin/app/config/config.proto", fileDescriptor_d85dab011e4afc14)
}

var fileDescriptor_d85dab011e4afc14 = []byte{
	// 675 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x4d, 0x4f, 0x1b, 0x3b,
	0x14, 0x86, 0x95, 0x10, 0x42, 0x72, 0x72, 0xef, 0x15, 0xd7, 0x42, 0xd1, 0x40, 0x29, 0x84, 0x59,
	0x54, 0x2c, 0xaa, 0x49, 0xd5, 0x4a, 0xfd, 0x90, 0x2a, 0x55, 0x14, 0x50, 0x8b, 0xba, 0x89, 0x86,
	0xac, 0xaa, 0x4a, 0x96, 0xc7, 0xe3, 0x4c, 0x5c, 0x26, 0xf6, 0xc8, 0xf6, 0xd0, 0xe6, 0x7f, 0xb0,
	0xea, 0xa2, 0xbf, 0xa6, 0x3f, 0xac, 0xf2, 0xc7, 0x10, 0x3e, 0x8a, 0xba, 0x82, 0x79, 0xcf, 0xf3,
	0xbe, 0xb6, 0x8f, 0x8f, 0x03, 0xaf, 0xb8, 0x98, 0x29, 0x32, 0x26, 0x55, 0xc5, 0x44, 0xc1, 0x05,
	0x1b, 0x53, 0x25, 0xb5, 0xbe, 0x58, 0x96, 0x24, 0x23, 0xf9, 0x82, 0x0b, 0x5b, 0x19, 0x53, 0x29,
	0x66, 0xbc, 0x08, 0x7f, 0x92, 0x4a, 0x49, 0x23, 0xd1, 0xf0, 0x0e, 0x98, 0xf8, 0xea, 0xce, 0x5e,
	0x21, 0x65, 0x51, 0xb2, 0xb1, 0xa3, 0xb2, 0x7a, 0x36, 0xce, 0x6b, 0x45, 0x0c, 0x97, 0xc2, 0xfb,
	0xe2, 0xab, 0x36, 0x74, 0x8f, 0x1d, 0x8a, 0x0e, 0xe0, 0x1f, 0x42, 0x29, 0xd3, 0x1a, 0x17, 0x4a,
	0xd6, 0x55, 0xd4, 0x1a, 0xb5, 0x0e, 0xfb, 0xe9, 0xc0, 0x6b, 0x1f, 0xac, 0x84, 0xde, 0x42, 0x4f,
	0x7f, 0x23, 0x6a, 0xc1, 0x45, 0x11, 0xb5, 0x47, 0xad, 0xc3, 0xc1, 0xf3, 0x51, 0xf2, 0xe7, 0x85,
	0x93, 0xf3, 0xc0, 0xa5, 0xd7, 0x0e, 0xf4, 0x12, 0xba, 0x86, 0xe8, 0x0b, 0xa6, 0xa2, 0x35, 0xe7,
	0xdd, 0x7b, 0xc8, 0x3b, 0x75, 0x54, 0x1a, 0x68, 0xf4, 0x0c, 0x3a, 0x54, 0x49, 0x11, 0x75, 0x9c,
	0x6b, 0xf7, 0x21, 0xd7, 0xb1, 0x92, 0x22, 0x75, 0x24, 0x7a, 0x07, 0x7d, 0x2e, 0x2e, 0x99, 0x30,
	0x52, 0x2d, 0xa3, 0x75, 0x67, 0x3b, 0x78, 0xc8, 0x76, 0xd6, 0x80, 0xe9, 0xca, 0x13, 0x5f, 0xb5,
	0xa0, 0xd7, 0x9c, 0x00, 0x21, 0xe8, 0xcc, 0xa5, 0x36, 0xa1, 0x21, 0xee, 0x7f, 0xb4, 0x0d, 0xbd,
	0x4c, 0x1a, 0x5c, 0x49, 0x59, 0xba, 0x4e, 0xf4, 0xd3, 0x8d, 0x4c, 0x9a, 0x89, 0x94, 0x25, 0x1a,
	0xc3, 0xd6, 0xac, 0x64, 0xcc, 0x60, 0xb7, 0x0c, 0xb6, 0x87, 0xc0, 0x86, 0x14, 0xee, 0xd0, 0xfd,
	0xf4, 0x7f, 0x57, 0x3b, 0xb2, 0x25, 0x7b, 0xcc, 0x29, 0x29, 0xd0, 0x21, 0x6c, 0x96, 0x35, 0xe5,
	0xb8, 0x52, 0xf2, 0x2b, 0xa3, 0xc6, 0xc1, 0x1d, 0x07, 0xff, 0x67, 0xf5, 0x89, 0x97, 0xa7, 0xa4,
	0x88, 0x7f, 0xb5, 0xa0, 0xeb, 0x9b, 0x83, 0x52, 0x78, 0x92, 0x11, 0x7a, 0x61, 0xaf, 0x4a, 0xe4,
	0x7e, 0x11, 0xf6, 0x9d, 0xd1, 0xda, 0xde, 0x2d, 0x36, 0x7c, 0xc1, 0x64, 0x6d, 0xb0, 0x66, 0x54,
	0xbb, 0x6d, 0xaf, 0xa5, 0xf1, 0x8a, 0xb6, 0x09, 0xa7, 0x0d, 0x3b, 0xf5, 0xe8, 0x39, 0xa3, 0x1a,
	0x9d, 0xc2, 0xfe, 0xfd, 0xcc, 0x8a, 0xfb, 0x81, 0xf1, 0x61, 0x6d, 0x17, 0xb6, 0x7b, 0x37, 0xac,
	0x81, 0x5c, 0xcc, 0x3e, 0x0c, 0x4a, 0x59, 0xe4, 0xb2, 0xc0, 0xae, 0x6d, 0xfe, 0xdc, 0xe0, 0xa5,
	0x8f, 0x52, 0x9b, 0xf8, 0x47, 0x1b, 0x3a, 0xf6, 0xb6, 0xd0, 0x1b, 0xd8, 0xbe, 0xd7, 0xaa, 0x4a,
	0x71, 0xa9, 0xb8, 0x59, 0x86, 0x7d, 0x0f, 0x6f, 0xf7, 0x6b, 0x12, 0xaa, 0xe8, 0x29, 0x20, 0x26,
	0x74, 0xad, 0x98, 0x73, 0x69, 0x4c, 0x65, 0x2d, 0x8c, 0xdb, 0xde, 0x7a, 0xba, 0xe9, 0x2b, 0x96,
	0xd7, 0xc7, 0x56, 0x47, 0x9f, 0x60, 0x4b, 0xb1, 0x8a, 0x70, 0x85, 0x79, 0x5e, 0x32, 0xdc, 0x3c,
	0x82, 0x30, 0x88, 0xdb, 0x89, 0x7f, 0x25, 0x49, 0xf3, 0x4a, 0x92, 0x93, 0x00, 0xa4, 0xc8, 0xdb,
	0xce, 0xf2, 0x92, 0x35, 0x1a, 0xfa, 0x02, 0x8f, 0x43, 0x18, 0x31, 0x86, 0x2d, 0x2a, 0x83, 0x73,
	0x56, 0x92, 0xe5, 0x2a, 0xb5, 0xf3, 0xb7, 0xd4, 0x1d, 0xef, 0x3f, 0xf2, 0xf6, 0x13, 0xeb, 0x6e,
	0x6a, 0xf1, 0xcf, 0x36, 0xf4, 0xaf, 0x67, 0xd2, 0x3e, 0xca, 0x82, 0x1b, 0x5e, 0x32, 0x8d, 0x6f,
	0xcc, 0xe0, 0x20, 0x68, 0xb6, 0x9b, 0xb6, 0xdd, 0x05, 0x53, 0x8a, 0x1b, 0x4f, 0xf8, 0x69, 0x04,
	0x2f, 0x39, 0x20, 0x82, 0x8d, 0x30, 0x5a, 0xe1, 0x2e, 0x9a, 0x4f, 0x34, 0x84, 0x6e, 0xa6, 0x88,
	0xa0, 0xf3, 0x30, 0x6f, 0xe1, 0x0b, 0x3d, 0x82, 0x7e, 0x4e, 0x0c, 0xc1, 0x15, 0x31, 0x73, 0xf7,
	0x7e, 0xfa, 0x69, 0xcf, 0x0a, 0x13, 0x62, 0xe6, 0x68, 0x04, 0x03, 0x26, 0x2e, 0xb9, 0x92, 0x62,
	0xc1, 0x84, 0x89, 0xba, 0x7e, 0x47, 0x37, 0x24, 0xf4, 0x1a, 0x22, 0xf7, 0x3b, 0xa6, 0x8d, 0xaa,
	0xa9, 0xb1, 0x77, 0xb4, 0x4a, 0xdb, 0x70, 0xf8, 0xf0, 0x76, 0xfd, 0xa4, 0xc9, 0x8e, 0xe1, 0xdf,
	0x92, 0x64, 0x37, 0xf0, 0x9e, 0x4f, 0x2f, 0x49, 0xd6, 0x30, 0xef, 0x7b, 0x9f, 0xbb, 0xfe, 0xe9,
	0x66, 0x5d, 0xd7, 0xd9, 0x17, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xc6, 0x0c, 0x38, 0x36,
	0x05, 0x00, 0x00,
}
