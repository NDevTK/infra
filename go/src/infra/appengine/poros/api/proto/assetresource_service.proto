// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package poros;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "poros/api/proto/resources.proto";

option go_package = "infra/appengine/poros/api/proto;proto";

// Performs operations on AssetResource.
service AssetResource {
  // Creates the given AssetResource.
  rpc Create(CreateAssetResourceRequest) returns (AssetResourceModel);

  // Retrieves a AssetResource for a given unique value.
  rpc Get(GetAssetResourceRequest) returns (AssetResourceModel);

  // Update a single AssetResource in EnterpriseAsset.
  rpc Update(UpdateAssetResourceRequest) returns (AssetResourceModel);

  // Deletes the given AssetResource.
  rpc Delete(DeleteAssetResourceRequest) returns (.google.protobuf.Empty);

  // Lists all AssetResources.
  rpc List(ListAssetResourcesRequest) returns (ListAssetResourcesResponse);

}

// Request to create a single asseAssetResource
message CreateAssetResourceRequest {
  // Unique identifier for the asset resource entity
  string asset_resource_id = 1;
  // Identifier of the asset associated with the entity
  string asset_id = 2;
  // Identifier of the resource associated with the entity
  string resource_id = 3;
  // Alias name of the entity
  string alias_name = 4;
  // Flag to denote whether this AssetResource is default
  bool default = 5;
}

// Gets an AssetResource.
message GetAssetResourceRequest {
  // The unique identifier of the AssetResource to retrieve.
  string asset_resource_id = 1;
}

// Request to update a single AssetResource.
message UpdateAssetResourceRequest {
  // The existing AssetResource to update in the database.
  AssetResourceModel asset_resource = 1;

  // The list of fields to update.
  .google.protobuf.FieldMask update_mask = 2;
}

// Request to delete a single AssetResource.
message DeleteAssetResourceRequest {
  // The unique identifier of the AssetResource entity to delete from the database.
  string asset_resource_id = 1;
}

// Request to list all AssetResource entities.
message ListAssetResourcesRequest {
  // Fields to include on each result
  .google.protobuf.FieldMask read_mask = 1;

  // Number of results per page
  int32 page_size = 2;

  // Page token from a previous page's ListAssetResourcesResponse
  string page_token = 3;
}

// Response to ListAssetResourcesRequest.
message ListAssetResourcesResponse {
  // The result set.
  repeated AssetResourceModel asset_resources = 1;

  // A page token that can be passed into future requests to get the next page.
  // Empty if there is no next page.
  string next_page_token = 2;
}

