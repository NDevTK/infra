// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.20.1
// source: poros/api/proto/assetresource_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create a single asseAssetResource
type CreateAssetResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the asset resource entity
	AssetResourceId string `protobuf:"bytes,1,opt,name=asset_resource_id,json=assetResourceId,proto3" json:"asset_resource_id,omitempty"`
	// Identifier of the asset associated with the entity
	AssetId string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// Identifier of the resource associated with the entity
	ResourceId string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Alias name of the entity
	AliasName string `protobuf:"bytes,4,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"`
	// Flag to denote whether this AssetResource is default
	Default bool `protobuf:"varint,5,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *CreateAssetResourceRequest) Reset() {
	*x = CreateAssetResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetResourceRequest) ProtoMessage() {}

func (x *CreateAssetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateAssetResourceRequest) Descriptor() ([]byte, []int) {
	return file_poros_api_proto_assetresource_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAssetResourceRequest) GetAssetResourceId() string {
	if x != nil {
		return x.AssetResourceId
	}
	return ""
}

func (x *CreateAssetResourceRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *CreateAssetResourceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *CreateAssetResourceRequest) GetAliasName() string {
	if x != nil {
		return x.AliasName
	}
	return ""
}

func (x *CreateAssetResourceRequest) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

// Gets an AssetResource.
type GetAssetResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the AssetResource to retrieve.
	AssetResourceId string `protobuf:"bytes,1,opt,name=asset_resource_id,json=assetResourceId,proto3" json:"asset_resource_id,omitempty"`
}

func (x *GetAssetResourceRequest) Reset() {
	*x = GetAssetResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetResourceRequest) ProtoMessage() {}

func (x *GetAssetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetResourceRequest.ProtoReflect.Descriptor instead.
func (*GetAssetResourceRequest) Descriptor() ([]byte, []int) {
	return file_poros_api_proto_assetresource_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAssetResourceRequest) GetAssetResourceId() string {
	if x != nil {
		return x.AssetResourceId
	}
	return ""
}

// Request to update a single AssetResource.
type UpdateAssetResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The existing AssetResource to update in the database.
	AssetResource *AssetResourceModel `protobuf:"bytes,1,opt,name=asset_resource,json=assetResource,proto3" json:"asset_resource,omitempty"`
	// The list of fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateAssetResourceRequest) Reset() {
	*x = UpdateAssetResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetResourceRequest) ProtoMessage() {}

func (x *UpdateAssetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssetResourceRequest) Descriptor() ([]byte, []int) {
	return file_poros_api_proto_assetresource_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAssetResourceRequest) GetAssetResource() *AssetResourceModel {
	if x != nil {
		return x.AssetResource
	}
	return nil
}

func (x *UpdateAssetResourceRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// Request to delete a single AssetResource.
type DeleteAssetResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the AssetResource entity to delete from the database.
	AssetResourceId string `protobuf:"bytes,1,opt,name=asset_resource_id,json=assetResourceId,proto3" json:"asset_resource_id,omitempty"`
}

func (x *DeleteAssetResourceRequest) Reset() {
	*x = DeleteAssetResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetResourceRequest) ProtoMessage() {}

func (x *DeleteAssetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssetResourceRequest) Descriptor() ([]byte, []int) {
	return file_poros_api_proto_assetresource_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteAssetResourceRequest) GetAssetResourceId() string {
	if x != nil {
		return x.AssetResourceId
	}
	return ""
}

// Request to list all AssetResource entities.
type ListAssetResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields to include on each result
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// Number of results per page
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from a previous page's ListAssetResourcesResponse
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListAssetResourcesRequest) Reset() {
	*x = ListAssetResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetResourcesRequest) ProtoMessage() {}

func (x *ListAssetResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListAssetResourcesRequest) Descriptor() ([]byte, []int) {
	return file_poros_api_proto_assetresource_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListAssetResourcesRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *ListAssetResourcesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAssetResourcesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response to ListAssetResourcesRequest.
type ListAssetResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result set.
	AssetResources []*AssetResourceModel `protobuf:"bytes,1,rep,name=asset_resources,json=assetResources,proto3" json:"asset_resources,omitempty"`
	// A page token that can be passed into future requests to get the next page.
	// Empty if there is no next page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAssetResourcesResponse) Reset() {
	*x = ListAssetResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetResourcesResponse) ProtoMessage() {}

func (x *ListAssetResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poros_api_proto_assetresource_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListAssetResourcesResponse) Descriptor() ([]byte, []int) {
	return file_poros_api_proto_assetresource_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListAssetResourcesResponse) GetAssetResources() []*AssetResourceModel {
	if x != nil {
		return x.AssetResources
	}
	return nil
}

func (x *ListAssetResourcesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_poros_api_proto_assetresource_service_proto protoreflect.FileDescriptor

var file_poros_api_proto_assetresource_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x6f, 0x72, 0x6f, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0d, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x48, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x32, 0xf3, 0x02, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e,
	0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x46, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x72,
	0x6f, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x43, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x21, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x27, 0x5a, 0x25, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x6f, 0x72, 0x6f, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_poros_api_proto_assetresource_service_proto_rawDescOnce sync.Once
	file_poros_api_proto_assetresource_service_proto_rawDescData = file_poros_api_proto_assetresource_service_proto_rawDesc
)

func file_poros_api_proto_assetresource_service_proto_rawDescGZIP() []byte {
	file_poros_api_proto_assetresource_service_proto_rawDescOnce.Do(func() {
		file_poros_api_proto_assetresource_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_poros_api_proto_assetresource_service_proto_rawDescData)
	})
	return file_poros_api_proto_assetresource_service_proto_rawDescData
}

var file_poros_api_proto_assetresource_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_poros_api_proto_assetresource_service_proto_goTypes = []interface{}{
	(*CreateAssetResourceRequest)(nil), // 0: poros.CreateAssetResourceRequest
	(*GetAssetResourceRequest)(nil),    // 1: poros.GetAssetResourceRequest
	(*UpdateAssetResourceRequest)(nil), // 2: poros.UpdateAssetResourceRequest
	(*DeleteAssetResourceRequest)(nil), // 3: poros.DeleteAssetResourceRequest
	(*ListAssetResourcesRequest)(nil),  // 4: poros.ListAssetResourcesRequest
	(*ListAssetResourcesResponse)(nil), // 5: poros.ListAssetResourcesResponse
	(*AssetResourceModel)(nil),         // 6: poros.AssetResourceModel
	(*fieldmaskpb.FieldMask)(nil),      // 7: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),              // 8: google.protobuf.Empty
}
var file_poros_api_proto_assetresource_service_proto_depIdxs = []int32{
	6, // 0: poros.UpdateAssetResourceRequest.asset_resource:type_name -> poros.AssetResourceModel
	7, // 1: poros.UpdateAssetResourceRequest.update_mask:type_name -> google.protobuf.FieldMask
	7, // 2: poros.ListAssetResourcesRequest.read_mask:type_name -> google.protobuf.FieldMask
	6, // 3: poros.ListAssetResourcesResponse.asset_resources:type_name -> poros.AssetResourceModel
	0, // 4: poros.AssetResource.Create:input_type -> poros.CreateAssetResourceRequest
	1, // 5: poros.AssetResource.Get:input_type -> poros.GetAssetResourceRequest
	2, // 6: poros.AssetResource.Update:input_type -> poros.UpdateAssetResourceRequest
	3, // 7: poros.AssetResource.Delete:input_type -> poros.DeleteAssetResourceRequest
	4, // 8: poros.AssetResource.List:input_type -> poros.ListAssetResourcesRequest
	6, // 9: poros.AssetResource.Create:output_type -> poros.AssetResourceModel
	6, // 10: poros.AssetResource.Get:output_type -> poros.AssetResourceModel
	6, // 11: poros.AssetResource.Update:output_type -> poros.AssetResourceModel
	8, // 12: poros.AssetResource.Delete:output_type -> google.protobuf.Empty
	5, // 13: poros.AssetResource.List:output_type -> poros.ListAssetResourcesResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_poros_api_proto_assetresource_service_proto_init() }
func file_poros_api_proto_assetresource_service_proto_init() {
	if File_poros_api_proto_assetresource_service_proto != nil {
		return
	}
	file_poros_api_proto_resources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_poros_api_proto_assetresource_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poros_api_proto_assetresource_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poros_api_proto_assetresource_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssetResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poros_api_proto_assetresource_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssetResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poros_api_proto_assetresource_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poros_api_proto_assetresource_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_poros_api_proto_assetresource_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_poros_api_proto_assetresource_service_proto_goTypes,
		DependencyIndexes: file_poros_api_proto_assetresource_service_proto_depIdxs,
		MessageInfos:      file_poros_api_proto_assetresource_service_proto_msgTypes,
	}.Build()
	File_poros_api_proto_assetresource_service_proto = out.File
	file_poros_api_proto_assetresource_service_proto_rawDesc = nil
	file_poros_api_proto_assetresource_service_proto_goTypes = nil
	file_poros_api_proto_assetresource_service_proto_depIdxs = nil
}
