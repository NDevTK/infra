// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// The protos describing the properties controlling the chromium_bootstrap
// recipe module

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: infra/chromium/bootstrapper/bootstrap/chromium_bootstrap.proto

package bootstrap

import (
	proto "go.chromium.org/luci/buildbucket/proto"
	api "go.chromium.org/luci/swarming/proto/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A CIPD location.
//
// Next ID: 5
type Cipd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server           string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Package          string `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
	RequestedVersion string `protobuf:"bytes,3,opt,name=requested_version,json=requestedVersion,proto3" json:"requested_version,omitempty"`
	ActualVersion    string `protobuf:"bytes,4,opt,name=actual_version,json=actualVersion,proto3" json:"actual_version,omitempty"`
}

func (x *Cipd) Reset() {
	*x = Cipd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cipd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cipd) ProtoMessage() {}

func (x *Cipd) ProtoReflect() protoreflect.Message {
	mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cipd.ProtoReflect.Descriptor instead.
func (*Cipd) Descriptor() ([]byte, []int) {
	return file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescGZIP(), []int{0}
}

func (x *Cipd) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Cipd) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *Cipd) GetRequestedVersion() string {
	if x != nil {
		return x.RequestedVersion
	}
	return ""
}

func (x *Cipd) GetActualVersion() string {
	if x != nil {
		return x.ActualVersion
	}
	return ""
}

// Information about the executable being bootstrapped.
//
// Next ID: 4
type BootstrappedExe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The location that the bootstrapped executable is retrieved from.
	//
	// Types that are assignable to Source:
	//
	//	*BootstrappedExe_Cipd
	//	*BootstrappedExe_Cas
	Source isBootstrappedExe_Source `protobuf_oneof:"source"`
	Cmd    []string                 `protobuf:"bytes,3,rep,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *BootstrappedExe) Reset() {
	*x = BootstrappedExe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrappedExe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrappedExe) ProtoMessage() {}

func (x *BootstrappedExe) ProtoReflect() protoreflect.Message {
	mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrappedExe.ProtoReflect.Descriptor instead.
func (*BootstrappedExe) Descriptor() ([]byte, []int) {
	return file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescGZIP(), []int{1}
}

func (m *BootstrappedExe) GetSource() isBootstrappedExe_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *BootstrappedExe) GetCipd() *Cipd {
	if x, ok := x.GetSource().(*BootstrappedExe_Cipd); ok {
		return x.Cipd
	}
	return nil
}

func (x *BootstrappedExe) GetCas() *api.CASReference {
	if x, ok := x.GetSource().(*BootstrappedExe_Cas); ok {
		return x.Cas
	}
	return nil
}

func (x *BootstrappedExe) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

type isBootstrappedExe_Source interface {
	isBootstrappedExe_Source()
}

type BootstrappedExe_Cipd struct {
	Cipd *Cipd `protobuf:"bytes,1,opt,name=cipd,proto3,oneof"`
}

type BootstrappedExe_Cas struct {
	Cas *api.CASReference `protobuf:"bytes,2,opt,name=cas,proto3,oneof"`
}

func (*BootstrappedExe_Cipd) isBootstrappedExe_Source() {}

func (*BootstrappedExe_Cas) isBootstrappedExe_Source() {}

// Information about from where the config was loaded
//
// Next ID: 3
type ConfigSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The commit at which the config was last changed
	//
	// This will enable the bootstrapped executable to apply the
	// optimization to not perform a checkout so long as the version of
	// the config on disk is the same version as was loaded by the
	// bootstrapper.
	LastChangedCommit *proto.GitilesCommit `protobuf:"bytes,1,opt,name=last_changed_commit,json=lastChangedCommit,proto3" json:"last_changed_commit,omitempty"`
	// The path to the config
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ConfigSource) Reset() {
	*x = ConfigSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSource) ProtoMessage() {}

func (x *ConfigSource) ProtoReflect() protoreflect.Message {
	mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSource.ProtoReflect.Descriptor instead.
func (*ConfigSource) Descriptor() ([]byte, []int) {
	return file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigSource) GetLastChangedCommit() *proto.GitilesCommit {
	if x != nil {
		return x.LastChangedCommit
	}
	return nil
}

func (x *ConfigSource) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// The input properties consumed by the chromium_bootstrap recipe module
//
// These will be set by the bootstrapper binary to communicate information about
// the bootstrap operation that occurred. This enables the bootstrapped
// executable to operate in a manner consistent with the bootstrapping process.
//
// Next ID: 5
type ChromiumBootstrapModuleProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Any commits that were accessed by the bootstrapper binary
	//
	// Since the properties should be versioned along with the code, this will
	// enable the bootstrapped executable to check out the same version of the
	// code that the properties were retrieved from.
	Commits []*proto.GitilesCommit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	// Any reasons that the bootstrapped builder should skip analysis
	//
	// Some builders will use analyze to determine what targets need to be
	// re-built and what tests need to be re-run. If reasons are specified, the
	// builder should skip performing analysis and instead build all targets and
	// run all tests.
	SkipAnalysisReasons []string `protobuf:"bytes,2,rep,name=skip_analysis_reasons,json=skipAnalysisReasons,proto3" json:"skip_analysis_reasons,omitempty"`
	// The bootstrapped executable being executed.
	//
	// This will allow the builder to report the source of the executable.
	Exe *BootstrappedExe `protobuf:"bytes,3,opt,name=exe,proto3" json:"exe,omitempty"`
	// The information about where the bootstrapped config was loaded
	ConfigSource *ConfigSource `protobuf:"bytes,4,opt,name=config_source,json=configSource,proto3" json:"config_source,omitempty"`
}

func (x *ChromiumBootstrapModuleProperties) Reset() {
	*x = ChromiumBootstrapModuleProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChromiumBootstrapModuleProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChromiumBootstrapModuleProperties) ProtoMessage() {}

func (x *ChromiumBootstrapModuleProperties) ProtoReflect() protoreflect.Message {
	mi := &file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChromiumBootstrapModuleProperties.ProtoReflect.Descriptor instead.
func (*ChromiumBootstrapModuleProperties) Descriptor() ([]byte, []int) {
	return file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescGZIP(), []int{3}
}

func (x *ChromiumBootstrapModuleProperties) GetCommits() []*proto.GitilesCommit {
	if x != nil {
		return x.Commits
	}
	return nil
}

func (x *ChromiumBootstrapModuleProperties) GetSkipAnalysisReasons() []string {
	if x != nil {
		return x.SkipAnalysisReasons
	}
	return nil
}

func (x *ChromiumBootstrapModuleProperties) GetExe() *BootstrappedExe {
	if x != nil {
		return x.Exe
	}
	return nil
}

func (x *ChromiumBootstrapModuleProperties) GetConfigSource() *ConfigSource {
	if x != nil {
		return x.ConfigSource
	}
	return nil
}

var File_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto protoreflect.FileDescriptor

var file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x28, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x36, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x04, 0x43, 0x69, 0x70, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x45, 0x78, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x69,
	0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x2e, 0x43, 0x69, 0x70, 0x64, 0x48, 0x00, 0x52, 0x04, 0x63, 0x69, 0x70, 0x64,
	0x12, 0x2d, 0x0a, 0x03, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x41, 0x53, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x03, 0x63, 0x61, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x71, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xba,
	0x02, 0x0a, 0x21, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6b,
	0x69, 0x70, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x12, 0x4b, 0x0a, 0x03, 0x65, 0x78, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x5f,
	0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x45, 0x78, 0x65, 0x52, 0x03, 0x65, 0x78, 0x65, 0x12, 0x5b,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x27, 0x5a, 0x25, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2f, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescOnce sync.Once
	file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescData = file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDesc
)

func file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescGZIP() []byte {
	file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescOnce.Do(func() {
		file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescData)
	})
	return file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDescData
}

var file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_goTypes = []interface{}{
	(*Cipd)(nil),                              // 0: chromium.bootstrapper.chromium_bootstrap.Cipd
	(*BootstrappedExe)(nil),                   // 1: chromium.bootstrapper.chromium_bootstrap.BootstrappedExe
	(*ConfigSource)(nil),                      // 2: chromium.bootstrapper.chromium_bootstrap.ConfigSource
	(*ChromiumBootstrapModuleProperties)(nil), // 3: chromium.bootstrapper.chromium_bootstrap.ChromiumBootstrapModuleProperties
	(*api.CASReference)(nil),                  // 4: swarming.v1.CASReference
	(*proto.GitilesCommit)(nil),               // 5: buildbucket.v2.GitilesCommit
}
var file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_depIdxs = []int32{
	0, // 0: chromium.bootstrapper.chromium_bootstrap.BootstrappedExe.cipd:type_name -> chromium.bootstrapper.chromium_bootstrap.Cipd
	4, // 1: chromium.bootstrapper.chromium_bootstrap.BootstrappedExe.cas:type_name -> swarming.v1.CASReference
	5, // 2: chromium.bootstrapper.chromium_bootstrap.ConfigSource.last_changed_commit:type_name -> buildbucket.v2.GitilesCommit
	5, // 3: chromium.bootstrapper.chromium_bootstrap.ChromiumBootstrapModuleProperties.commits:type_name -> buildbucket.v2.GitilesCommit
	1, // 4: chromium.bootstrapper.chromium_bootstrap.ChromiumBootstrapModuleProperties.exe:type_name -> chromium.bootstrapper.chromium_bootstrap.BootstrappedExe
	2, // 5: chromium.bootstrapper.chromium_bootstrap.ChromiumBootstrapModuleProperties.config_source:type_name -> chromium.bootstrapper.chromium_bootstrap.ConfigSource
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_init() }
func file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_init() {
	if File_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cipd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrappedExe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChromiumBootstrapModuleProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BootstrappedExe_Cipd)(nil),
		(*BootstrappedExe_Cas)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_goTypes,
		DependencyIndexes: file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_depIdxs,
		MessageInfos:      file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_msgTypes,
	}.Build()
	File_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto = out.File
	file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_rawDesc = nil
	file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_goTypes = nil
	file_infra_chromium_bootstrapper_bootstrap_chromium_bootstrap_proto_depIdxs = nil
}
