// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/api_proto/features.proto

package monorail

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next available tag: 3
type ListHotlistsByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserRef `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ListHotlistsByUserRequest) Reset() {
	*x = ListHotlistsByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotlistsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotlistsByUserRequest) ProtoMessage() {}

func (x *ListHotlistsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotlistsByUserRequest.ProtoReflect.Descriptor instead.
func (*ListHotlistsByUserRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{0}
}

func (x *ListHotlistsByUserRequest) GetUser() *UserRef {
	if x != nil {
		return x.User
	}
	return nil
}

// Next available tag: 2
type ListHotlistsByUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotlists []*Hotlist `protobuf:"bytes,1,rep,name=hotlists,proto3" json:"hotlists,omitempty"`
}

func (x *ListHotlistsByUserResponse) Reset() {
	*x = ListHotlistsByUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotlistsByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotlistsByUserResponse) ProtoMessage() {}

func (x *ListHotlistsByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotlistsByUserResponse.ProtoReflect.Descriptor instead.
func (*ListHotlistsByUserResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{1}
}

func (x *ListHotlistsByUserResponse) GetHotlists() []*Hotlist {
	if x != nil {
		return x.Hotlists
	}
	return nil
}

// Next available tag: 3
type ListHotlistsByIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issue *IssueRef `protobuf:"bytes,2,opt,name=issue,proto3" json:"issue,omitempty"`
}

func (x *ListHotlistsByIssueRequest) Reset() {
	*x = ListHotlistsByIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotlistsByIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotlistsByIssueRequest) ProtoMessage() {}

func (x *ListHotlistsByIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotlistsByIssueRequest.ProtoReflect.Descriptor instead.
func (*ListHotlistsByIssueRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{2}
}

func (x *ListHotlistsByIssueRequest) GetIssue() *IssueRef {
	if x != nil {
		return x.Issue
	}
	return nil
}

// Next available tag: 2
type ListHotlistsByIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotlists []*Hotlist `protobuf:"bytes,1,rep,name=hotlists,proto3" json:"hotlists,omitempty"`
}

func (x *ListHotlistsByIssueResponse) Reset() {
	*x = ListHotlistsByIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotlistsByIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotlistsByIssueResponse) ProtoMessage() {}

func (x *ListHotlistsByIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotlistsByIssueResponse.ProtoReflect.Descriptor instead.
func (*ListHotlistsByIssueResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{3}
}

func (x *ListHotlistsByIssueResponse) GetHotlists() []*Hotlist {
	if x != nil {
		return x.Hotlists
	}
	return nil
}

// Next available tag: 2
type ListRecentlyVisitedHotlistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRecentlyVisitedHotlistsRequest) Reset() {
	*x = ListRecentlyVisitedHotlistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecentlyVisitedHotlistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecentlyVisitedHotlistsRequest) ProtoMessage() {}

func (x *ListRecentlyVisitedHotlistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecentlyVisitedHotlistsRequest.ProtoReflect.Descriptor instead.
func (*ListRecentlyVisitedHotlistsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{4}
}

// Next available tag: 2
type ListRecentlyVisitedHotlistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotlists []*Hotlist `protobuf:"bytes,1,rep,name=hotlists,proto3" json:"hotlists,omitempty"`
}

func (x *ListRecentlyVisitedHotlistsResponse) Reset() {
	*x = ListRecentlyVisitedHotlistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecentlyVisitedHotlistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecentlyVisitedHotlistsResponse) ProtoMessage() {}

func (x *ListRecentlyVisitedHotlistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecentlyVisitedHotlistsResponse.ProtoReflect.Descriptor instead.
func (*ListRecentlyVisitedHotlistsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{5}
}

func (x *ListRecentlyVisitedHotlistsResponse) GetHotlists() []*Hotlist {
	if x != nil {
		return x.Hotlists
	}
	return nil
}

// Next available tag: 2
type ListStarredHotlistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStarredHotlistsRequest) Reset() {
	*x = ListStarredHotlistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStarredHotlistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStarredHotlistsRequest) ProtoMessage() {}

func (x *ListStarredHotlistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStarredHotlistsRequest.ProtoReflect.Descriptor instead.
func (*ListStarredHotlistsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{6}
}

// Next available tag: 2
type ListStarredHotlistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotlists []*Hotlist `protobuf:"bytes,1,rep,name=hotlists,proto3" json:"hotlists,omitempty"`
}

func (x *ListStarredHotlistsResponse) Reset() {
	*x = ListStarredHotlistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStarredHotlistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStarredHotlistsResponse) ProtoMessage() {}

func (x *ListStarredHotlistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStarredHotlistsResponse.ProtoReflect.Descriptor instead.
func (*ListStarredHotlistsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{7}
}

func (x *ListStarredHotlistsResponse) GetHotlists() []*Hotlist {
	if x != nil {
		return x.Hotlists
	}
	return nil
}

// Next available tag: 3
type GetHotlistStarCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRef *HotlistRef `protobuf:"bytes,2,opt,name=hotlist_ref,json=hotlistRef,proto3" json:"hotlist_ref,omitempty"`
}

func (x *GetHotlistStarCountRequest) Reset() {
	*x = GetHotlistStarCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotlistStarCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotlistStarCountRequest) ProtoMessage() {}

func (x *GetHotlistStarCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotlistStarCountRequest.ProtoReflect.Descriptor instead.
func (*GetHotlistStarCountRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{8}
}

func (x *GetHotlistStarCountRequest) GetHotlistRef() *HotlistRef {
	if x != nil {
		return x.HotlistRef
	}
	return nil
}

// Next available tag: 2
type GetHotlistStarCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarCount uint32 `protobuf:"varint,1,opt,name=star_count,json=starCount,proto3" json:"star_count,omitempty"`
}

func (x *GetHotlistStarCountResponse) Reset() {
	*x = GetHotlistStarCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotlistStarCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotlistStarCountResponse) ProtoMessage() {}

func (x *GetHotlistStarCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotlistStarCountResponse.ProtoReflect.Descriptor instead.
func (*GetHotlistStarCountResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{9}
}

func (x *GetHotlistStarCountResponse) GetStarCount() uint32 {
	if x != nil {
		return x.StarCount
	}
	return 0
}

// Next available tag: 4
type StarHotlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRef *HotlistRef `protobuf:"bytes,2,opt,name=hotlist_ref,json=hotlistRef,proto3" json:"hotlist_ref,omitempty"`
	Starred    bool        `protobuf:"varint,3,opt,name=starred,proto3" json:"starred,omitempty"`
}

func (x *StarHotlistRequest) Reset() {
	*x = StarHotlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarHotlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarHotlistRequest) ProtoMessage() {}

func (x *StarHotlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarHotlistRequest.ProtoReflect.Descriptor instead.
func (*StarHotlistRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{10}
}

func (x *StarHotlistRequest) GetHotlistRef() *HotlistRef {
	if x != nil {
		return x.HotlistRef
	}
	return nil
}

func (x *StarHotlistRequest) GetStarred() bool {
	if x != nil {
		return x.Starred
	}
	return false
}

// Next available tag: 2
type StarHotlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarCount uint32 `protobuf:"varint,1,opt,name=star_count,json=starCount,proto3" json:"star_count,omitempty"`
}

func (x *StarHotlistResponse) Reset() {
	*x = StarHotlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarHotlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarHotlistResponse) ProtoMessage() {}

func (x *StarHotlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarHotlistResponse.ProtoReflect.Descriptor instead.
func (*StarHotlistResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{11}
}

func (x *StarHotlistResponse) GetStarCount() uint32 {
	if x != nil {
		return x.StarCount
	}
	return 0
}

// Next available tag: 2
type GetHotlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRef *HotlistRef `protobuf:"bytes,1,opt,name=hotlist_ref,json=hotlistRef,proto3" json:"hotlist_ref,omitempty"`
}

func (x *GetHotlistRequest) Reset() {
	*x = GetHotlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotlistRequest) ProtoMessage() {}

func (x *GetHotlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotlistRequest.ProtoReflect.Descriptor instead.
func (*GetHotlistRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{12}
}

func (x *GetHotlistRequest) GetHotlistRef() *HotlistRef {
	if x != nil {
		return x.HotlistRef
	}
	return nil
}

// Next available tag: 2
type GetHotlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotlist *Hotlist `protobuf:"bytes,1,opt,name=hotlist,proto3" json:"hotlist,omitempty"`
}

func (x *GetHotlistResponse) Reset() {
	*x = GetHotlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotlistResponse) ProtoMessage() {}

func (x *GetHotlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotlistResponse.ProtoReflect.Descriptor instead.
func (*GetHotlistResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{13}
}

func (x *GetHotlistResponse) GetHotlist() *Hotlist {
	if x != nil {
		return x.Hotlist
	}
	return nil
}

// Next available tag: 7
type ListHotlistItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRef  *HotlistRef `protobuf:"bytes,2,opt,name=hotlist_ref,json=hotlistRef,proto3" json:"hotlist_ref,omitempty"`
	Pagination  *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Can         uint32      `protobuf:"varint,4,opt,name=can,proto3" json:"can,omitempty"`
	SortSpec    string      `protobuf:"bytes,5,opt,name=sort_spec,json=sortSpec,proto3" json:"sort_spec,omitempty"`
	GroupBySpec string      `protobuf:"bytes,6,opt,name=group_by_spec,json=groupBySpec,proto3" json:"group_by_spec,omitempty"`
}

func (x *ListHotlistItemsRequest) Reset() {
	*x = ListHotlistItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotlistItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotlistItemsRequest) ProtoMessage() {}

func (x *ListHotlistItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotlistItemsRequest.ProtoReflect.Descriptor instead.
func (*ListHotlistItemsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{14}
}

func (x *ListHotlistItemsRequest) GetHotlistRef() *HotlistRef {
	if x != nil {
		return x.HotlistRef
	}
	return nil
}

func (x *ListHotlistItemsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListHotlistItemsRequest) GetCan() uint32 {
	if x != nil {
		return x.Can
	}
	return 0
}

func (x *ListHotlistItemsRequest) GetSortSpec() string {
	if x != nil {
		return x.SortSpec
	}
	return ""
}

func (x *ListHotlistItemsRequest) GetGroupBySpec() string {
	if x != nil {
		return x.GroupBySpec
	}
	return ""
}

// Next available tag: 2
type ListHotlistItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*HotlistItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListHotlistItemsResponse) Reset() {
	*x = ListHotlistItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotlistItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotlistItemsResponse) ProtoMessage() {}

func (x *ListHotlistItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotlistItemsResponse.ProtoReflect.Descriptor instead.
func (*ListHotlistItemsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{15}
}

func (x *ListHotlistItemsResponse) GetItems() []*HotlistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Next available tag: 7
type CreateHotlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Summary     string      `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Description string      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	EditorRefs  []*UserRef  `protobuf:"bytes,5,rep,name=editor_refs,json=editorRefs,proto3" json:"editor_refs,omitempty"`
	IssueRefs   []*IssueRef `protobuf:"bytes,6,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	IsPrivate   bool        `protobuf:"varint,7,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
}

func (x *CreateHotlistRequest) Reset() {
	*x = CreateHotlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHotlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHotlistRequest) ProtoMessage() {}

func (x *CreateHotlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHotlistRequest.ProtoReflect.Descriptor instead.
func (*CreateHotlistRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{16}
}

func (x *CreateHotlistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHotlistRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CreateHotlistRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHotlistRequest) GetEditorRefs() []*UserRef {
	if x != nil {
		return x.EditorRefs
	}
	return nil
}

func (x *CreateHotlistRequest) GetIssueRefs() []*IssueRef {
	if x != nil {
		return x.IssueRefs
	}
	return nil
}

func (x *CreateHotlistRequest) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

// Next available tag: 1
type CreateHotlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateHotlistResponse) Reset() {
	*x = CreateHotlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHotlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHotlistResponse) ProtoMessage() {}

func (x *CreateHotlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHotlistResponse.ProtoReflect.Descriptor instead.
func (*CreateHotlistResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{17}
}

// Next available tag: 3
type CheckHotlistNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CheckHotlistNameRequest) Reset() {
	*x = CheckHotlistNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHotlistNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHotlistNameRequest) ProtoMessage() {}

func (x *CheckHotlistNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHotlistNameRequest.ProtoReflect.Descriptor instead.
func (*CheckHotlistNameRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{18}
}

func (x *CheckHotlistNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Next available tag: 1
type CheckHotlistNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CheckHotlistNameResponse) Reset() {
	*x = CheckHotlistNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHotlistNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHotlistNameResponse) ProtoMessage() {}

func (x *CheckHotlistNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHotlistNameResponse.ProtoReflect.Descriptor instead.
func (*CheckHotlistNameResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{19}
}

func (x *CheckHotlistNameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Next available tag: 4
type RemoveIssuesFromHotlistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRefs []*HotlistRef `protobuf:"bytes,2,rep,name=hotlist_refs,json=hotlistRefs,proto3" json:"hotlist_refs,omitempty"`
	IssueRefs   []*IssueRef   `protobuf:"bytes,3,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
}

func (x *RemoveIssuesFromHotlistsRequest) Reset() {
	*x = RemoveIssuesFromHotlistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveIssuesFromHotlistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveIssuesFromHotlistsRequest) ProtoMessage() {}

func (x *RemoveIssuesFromHotlistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveIssuesFromHotlistsRequest.ProtoReflect.Descriptor instead.
func (*RemoveIssuesFromHotlistsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveIssuesFromHotlistsRequest) GetHotlistRefs() []*HotlistRef {
	if x != nil {
		return x.HotlistRefs
	}
	return nil
}

func (x *RemoveIssuesFromHotlistsRequest) GetIssueRefs() []*IssueRef {
	if x != nil {
		return x.IssueRefs
	}
	return nil
}

// Next available tag: 1
type RemoveIssuesFromHotlistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveIssuesFromHotlistsResponse) Reset() {
	*x = RemoveIssuesFromHotlistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveIssuesFromHotlistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveIssuesFromHotlistsResponse) ProtoMessage() {}

func (x *RemoveIssuesFromHotlistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveIssuesFromHotlistsResponse.ProtoReflect.Descriptor instead.
func (*RemoveIssuesFromHotlistsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{21}
}

// Next available tag: 5
type AddIssuesToHotlistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRefs []*HotlistRef `protobuf:"bytes,2,rep,name=hotlist_refs,json=hotlistRefs,proto3" json:"hotlist_refs,omitempty"`
	IssueRefs   []*IssueRef   `protobuf:"bytes,3,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	Note        string        `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *AddIssuesToHotlistsRequest) Reset() {
	*x = AddIssuesToHotlistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIssuesToHotlistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIssuesToHotlistsRequest) ProtoMessage() {}

func (x *AddIssuesToHotlistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIssuesToHotlistsRequest.ProtoReflect.Descriptor instead.
func (*AddIssuesToHotlistsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{22}
}

func (x *AddIssuesToHotlistsRequest) GetHotlistRefs() []*HotlistRef {
	if x != nil {
		return x.HotlistRefs
	}
	return nil
}

func (x *AddIssuesToHotlistsRequest) GetIssueRefs() []*IssueRef {
	if x != nil {
		return x.IssueRefs
	}
	return nil
}

func (x *AddIssuesToHotlistsRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// Next available tag: 1
type AddIssuesToHotlistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddIssuesToHotlistsResponse) Reset() {
	*x = AddIssuesToHotlistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIssuesToHotlistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIssuesToHotlistsResponse) ProtoMessage() {}

func (x *AddIssuesToHotlistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIssuesToHotlistsResponse.ProtoReflect.Descriptor instead.
func (*AddIssuesToHotlistsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{23}
}

// Next available tag: 5
type RerankHotlistIssuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRef *HotlistRef `protobuf:"bytes,1,opt,name=hotlist_ref,json=hotlistRef,proto3" json:"hotlist_ref,omitempty"`
	MovedRefs  []*IssueRef `protobuf:"bytes,2,rep,name=moved_refs,json=movedRefs,proto3" json:"moved_refs,omitempty"`
	TargetRef  *IssueRef   `protobuf:"bytes,3,opt,name=target_ref,json=targetRef,proto3" json:"target_ref,omitempty"`
	SplitAbove bool        `protobuf:"varint,4,opt,name=split_above,json=splitAbove,proto3" json:"split_above,omitempty"`
}

func (x *RerankHotlistIssuesRequest) Reset() {
	*x = RerankHotlistIssuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RerankHotlistIssuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RerankHotlistIssuesRequest) ProtoMessage() {}

func (x *RerankHotlistIssuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RerankHotlistIssuesRequest.ProtoReflect.Descriptor instead.
func (*RerankHotlistIssuesRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{24}
}

func (x *RerankHotlistIssuesRequest) GetHotlistRef() *HotlistRef {
	if x != nil {
		return x.HotlistRef
	}
	return nil
}

func (x *RerankHotlistIssuesRequest) GetMovedRefs() []*IssueRef {
	if x != nil {
		return x.MovedRefs
	}
	return nil
}

func (x *RerankHotlistIssuesRequest) GetTargetRef() *IssueRef {
	if x != nil {
		return x.TargetRef
	}
	return nil
}

func (x *RerankHotlistIssuesRequest) GetSplitAbove() bool {
	if x != nil {
		return x.SplitAbove
	}
	return false
}

// Next available tag: 1
type RerankHotlistIssuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RerankHotlistIssuesResponse) Reset() {
	*x = RerankHotlistIssuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RerankHotlistIssuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RerankHotlistIssuesResponse) ProtoMessage() {}

func (x *RerankHotlistIssuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RerankHotlistIssuesResponse.ProtoReflect.Descriptor instead.
func (*RerankHotlistIssuesResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{25}
}

// Next available tag: 5
type UpdateHotlistIssueNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRef *HotlistRef `protobuf:"bytes,2,opt,name=hotlist_ref,json=hotlistRef,proto3" json:"hotlist_ref,omitempty"`
	IssueRef   *IssueRef   `protobuf:"bytes,3,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	Note       string      `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *UpdateHotlistIssueNoteRequest) Reset() {
	*x = UpdateHotlistIssueNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHotlistIssueNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHotlistIssueNoteRequest) ProtoMessage() {}

func (x *UpdateHotlistIssueNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHotlistIssueNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateHotlistIssueNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateHotlistIssueNoteRequest) GetHotlistRef() *HotlistRef {
	if x != nil {
		return x.HotlistRef
	}
	return nil
}

func (x *UpdateHotlistIssueNoteRequest) GetIssueRef() *IssueRef {
	if x != nil {
		return x.IssueRef
	}
	return nil
}

func (x *UpdateHotlistIssueNoteRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// Next available tag: 1
type UpdateHotlistIssueNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHotlistIssueNoteResponse) Reset() {
	*x = UpdateHotlistIssueNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHotlistIssueNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHotlistIssueNoteResponse) ProtoMessage() {}

func (x *UpdateHotlistIssueNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHotlistIssueNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateHotlistIssueNoteResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{27}
}

// Next available tag: 2
type DeleteHotlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotlistRef *HotlistRef `protobuf:"bytes,1,opt,name=hotlist_ref,json=hotlistRef,proto3" json:"hotlist_ref,omitempty"`
}

func (x *DeleteHotlistRequest) Reset() {
	*x = DeleteHotlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHotlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHotlistRequest) ProtoMessage() {}

func (x *DeleteHotlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHotlistRequest.ProtoReflect.Descriptor instead.
func (*DeleteHotlistRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteHotlistRequest) GetHotlistRef() *HotlistRef {
	if x != nil {
		return x.HotlistRef
	}
	return nil
}

// Next available tag: 1
type DeleteHotlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteHotlistResponse) Reset() {
	*x = DeleteHotlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_features_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHotlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHotlistResponse) ProtoMessage() {}

func (x *DeleteHotlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_features_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHotlistResponse.ProtoReflect.Descriptor instead.
func (*DeleteHotlistResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_features_proto_rawDescGZIP(), []int{29}
}

var File_api_api_proto_features_proto protoreflect.FileDescriptor

var file_api_api_proto_features_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x4b,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x08, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x05, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x73, 0x42, 0x79, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x24, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c,
	0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x48, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x08, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x1c, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x1b, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x68, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x08, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x66, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x22, 0x3c,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x12,
	0x53, 0x74, 0x61, 0x72, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x68,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x72, 0x65, 0x64, 0x22, 0x34, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x66, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x68,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x07, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x52,
	0x0a, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x63, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79,
	0x53, 0x70, 0x65, 0x63, 0x22, 0x47, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xec, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0b, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x0a,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x17, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x68, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x66, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x65, 0x66, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x41,
	0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x68, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x66, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x65, 0x66, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x41, 0x64, 0x64,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x72,
	0x61, 0x6e, 0x6b, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x66, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x12, 0x31,
	0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x52, 0x65, 0x66,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x61, 0x62,
	0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x41, 0x62, 0x6f, 0x76, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x48,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x66, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x12, 0x2f, 0x0a,
	0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x66, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b,
	0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x66, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8, 0x0b, 0x0a,
	0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x23, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x6c, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x2c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64,
	0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x48, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x48,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x48, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x72, 0x65, 0x64, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x72, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x29, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x24, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x54, 0x6f, 0x48, 0x6f, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x13, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x48, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x27,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_api_proto_features_proto_rawDescOnce sync.Once
	file_api_api_proto_features_proto_rawDescData = file_api_api_proto_features_proto_rawDesc
)

func file_api_api_proto_features_proto_rawDescGZIP() []byte {
	file_api_api_proto_features_proto_rawDescOnce.Do(func() {
		file_api_api_proto_features_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_api_proto_features_proto_rawDescData)
	})
	return file_api_api_proto_features_proto_rawDescData
}

var file_api_api_proto_features_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_api_api_proto_features_proto_goTypes = []interface{}{
	(*ListHotlistsByUserRequest)(nil),           // 0: monorail.ListHotlistsByUserRequest
	(*ListHotlistsByUserResponse)(nil),          // 1: monorail.ListHotlistsByUserResponse
	(*ListHotlistsByIssueRequest)(nil),          // 2: monorail.ListHotlistsByIssueRequest
	(*ListHotlistsByIssueResponse)(nil),         // 3: monorail.ListHotlistsByIssueResponse
	(*ListRecentlyVisitedHotlistsRequest)(nil),  // 4: monorail.ListRecentlyVisitedHotlistsRequest
	(*ListRecentlyVisitedHotlistsResponse)(nil), // 5: monorail.ListRecentlyVisitedHotlistsResponse
	(*ListStarredHotlistsRequest)(nil),          // 6: monorail.ListStarredHotlistsRequest
	(*ListStarredHotlistsResponse)(nil),         // 7: monorail.ListStarredHotlistsResponse
	(*GetHotlistStarCountRequest)(nil),          // 8: monorail.GetHotlistStarCountRequest
	(*GetHotlistStarCountResponse)(nil),         // 9: monorail.GetHotlistStarCountResponse
	(*StarHotlistRequest)(nil),                  // 10: monorail.StarHotlistRequest
	(*StarHotlistResponse)(nil),                 // 11: monorail.StarHotlistResponse
	(*GetHotlistRequest)(nil),                   // 12: monorail.GetHotlistRequest
	(*GetHotlistResponse)(nil),                  // 13: monorail.GetHotlistResponse
	(*ListHotlistItemsRequest)(nil),             // 14: monorail.ListHotlistItemsRequest
	(*ListHotlistItemsResponse)(nil),            // 15: monorail.ListHotlistItemsResponse
	(*CreateHotlistRequest)(nil),                // 16: monorail.CreateHotlistRequest
	(*CreateHotlistResponse)(nil),               // 17: monorail.CreateHotlistResponse
	(*CheckHotlistNameRequest)(nil),             // 18: monorail.CheckHotlistNameRequest
	(*CheckHotlistNameResponse)(nil),            // 19: monorail.CheckHotlistNameResponse
	(*RemoveIssuesFromHotlistsRequest)(nil),     // 20: monorail.RemoveIssuesFromHotlistsRequest
	(*RemoveIssuesFromHotlistsResponse)(nil),    // 21: monorail.RemoveIssuesFromHotlistsResponse
	(*AddIssuesToHotlistsRequest)(nil),          // 22: monorail.AddIssuesToHotlistsRequest
	(*AddIssuesToHotlistsResponse)(nil),         // 23: monorail.AddIssuesToHotlistsResponse
	(*RerankHotlistIssuesRequest)(nil),          // 24: monorail.RerankHotlistIssuesRequest
	(*RerankHotlistIssuesResponse)(nil),         // 25: monorail.RerankHotlistIssuesResponse
	(*UpdateHotlistIssueNoteRequest)(nil),       // 26: monorail.UpdateHotlistIssueNoteRequest
	(*UpdateHotlistIssueNoteResponse)(nil),      // 27: monorail.UpdateHotlistIssueNoteResponse
	(*DeleteHotlistRequest)(nil),                // 28: monorail.DeleteHotlistRequest
	(*DeleteHotlistResponse)(nil),               // 29: monorail.DeleteHotlistResponse
	(*UserRef)(nil),                             // 30: monorail.UserRef
	(*Hotlist)(nil),                             // 31: monorail.Hotlist
	(*IssueRef)(nil),                            // 32: monorail.IssueRef
	(*HotlistRef)(nil),                          // 33: monorail.HotlistRef
	(*Pagination)(nil),                          // 34: monorail.Pagination
	(*HotlistItem)(nil),                         // 35: monorail.HotlistItem
}
var file_api_api_proto_features_proto_depIdxs = []int32{
	30, // 0: monorail.ListHotlistsByUserRequest.user:type_name -> monorail.UserRef
	31, // 1: monorail.ListHotlistsByUserResponse.hotlists:type_name -> monorail.Hotlist
	32, // 2: monorail.ListHotlistsByIssueRequest.issue:type_name -> monorail.IssueRef
	31, // 3: monorail.ListHotlistsByIssueResponse.hotlists:type_name -> monorail.Hotlist
	31, // 4: monorail.ListRecentlyVisitedHotlistsResponse.hotlists:type_name -> monorail.Hotlist
	31, // 5: monorail.ListStarredHotlistsResponse.hotlists:type_name -> monorail.Hotlist
	33, // 6: monorail.GetHotlistStarCountRequest.hotlist_ref:type_name -> monorail.HotlistRef
	33, // 7: monorail.StarHotlistRequest.hotlist_ref:type_name -> monorail.HotlistRef
	33, // 8: monorail.GetHotlistRequest.hotlist_ref:type_name -> monorail.HotlistRef
	31, // 9: monorail.GetHotlistResponse.hotlist:type_name -> monorail.Hotlist
	33, // 10: monorail.ListHotlistItemsRequest.hotlist_ref:type_name -> monorail.HotlistRef
	34, // 11: monorail.ListHotlistItemsRequest.pagination:type_name -> monorail.Pagination
	35, // 12: monorail.ListHotlistItemsResponse.items:type_name -> monorail.HotlistItem
	30, // 13: monorail.CreateHotlistRequest.editor_refs:type_name -> monorail.UserRef
	32, // 14: monorail.CreateHotlistRequest.issue_refs:type_name -> monorail.IssueRef
	33, // 15: monorail.RemoveIssuesFromHotlistsRequest.hotlist_refs:type_name -> monorail.HotlistRef
	32, // 16: monorail.RemoveIssuesFromHotlistsRequest.issue_refs:type_name -> monorail.IssueRef
	33, // 17: monorail.AddIssuesToHotlistsRequest.hotlist_refs:type_name -> monorail.HotlistRef
	32, // 18: monorail.AddIssuesToHotlistsRequest.issue_refs:type_name -> monorail.IssueRef
	33, // 19: monorail.RerankHotlistIssuesRequest.hotlist_ref:type_name -> monorail.HotlistRef
	32, // 20: monorail.RerankHotlistIssuesRequest.moved_refs:type_name -> monorail.IssueRef
	32, // 21: monorail.RerankHotlistIssuesRequest.target_ref:type_name -> monorail.IssueRef
	33, // 22: monorail.UpdateHotlistIssueNoteRequest.hotlist_ref:type_name -> monorail.HotlistRef
	32, // 23: monorail.UpdateHotlistIssueNoteRequest.issue_ref:type_name -> monorail.IssueRef
	33, // 24: monorail.DeleteHotlistRequest.hotlist_ref:type_name -> monorail.HotlistRef
	0,  // 25: monorail.Features.ListHotlistsByUser:input_type -> monorail.ListHotlistsByUserRequest
	2,  // 26: monorail.Features.ListHotlistsByIssue:input_type -> monorail.ListHotlistsByIssueRequest
	4,  // 27: monorail.Features.ListRecentlyVisitedHotlists:input_type -> monorail.ListRecentlyVisitedHotlistsRequest
	6,  // 28: monorail.Features.ListStarredHotlists:input_type -> monorail.ListStarredHotlistsRequest
	8,  // 29: monorail.Features.GetHotlistStarCount:input_type -> monorail.GetHotlistStarCountRequest
	10, // 30: monorail.Features.StarHotlist:input_type -> monorail.StarHotlistRequest
	12, // 31: monorail.Features.GetHotlist:input_type -> monorail.GetHotlistRequest
	14, // 32: monorail.Features.ListHotlistItems:input_type -> monorail.ListHotlistItemsRequest
	16, // 33: monorail.Features.CreateHotlist:input_type -> monorail.CreateHotlistRequest
	18, // 34: monorail.Features.CheckHotlistName:input_type -> monorail.CheckHotlistNameRequest
	20, // 35: monorail.Features.RemoveIssuesFromHotlists:input_type -> monorail.RemoveIssuesFromHotlistsRequest
	22, // 36: monorail.Features.AddIssuesToHotlists:input_type -> monorail.AddIssuesToHotlistsRequest
	24, // 37: monorail.Features.RerankHotlistIssues:input_type -> monorail.RerankHotlistIssuesRequest
	26, // 38: monorail.Features.UpdateHotlistIssueNote:input_type -> monorail.UpdateHotlistIssueNoteRequest
	28, // 39: monorail.Features.DeleteHotlist:input_type -> monorail.DeleteHotlistRequest
	1,  // 40: monorail.Features.ListHotlistsByUser:output_type -> monorail.ListHotlistsByUserResponse
	3,  // 41: monorail.Features.ListHotlistsByIssue:output_type -> monorail.ListHotlistsByIssueResponse
	5,  // 42: monorail.Features.ListRecentlyVisitedHotlists:output_type -> monorail.ListRecentlyVisitedHotlistsResponse
	7,  // 43: monorail.Features.ListStarredHotlists:output_type -> monorail.ListStarredHotlistsResponse
	9,  // 44: monorail.Features.GetHotlistStarCount:output_type -> monorail.GetHotlistStarCountResponse
	11, // 45: monorail.Features.StarHotlist:output_type -> monorail.StarHotlistResponse
	13, // 46: monorail.Features.GetHotlist:output_type -> monorail.GetHotlistResponse
	15, // 47: monorail.Features.ListHotlistItems:output_type -> monorail.ListHotlistItemsResponse
	17, // 48: monorail.Features.CreateHotlist:output_type -> monorail.CreateHotlistResponse
	19, // 49: monorail.Features.CheckHotlistName:output_type -> monorail.CheckHotlistNameResponse
	21, // 50: monorail.Features.RemoveIssuesFromHotlists:output_type -> monorail.RemoveIssuesFromHotlistsResponse
	23, // 51: monorail.Features.AddIssuesToHotlists:output_type -> monorail.AddIssuesToHotlistsResponse
	25, // 52: monorail.Features.RerankHotlistIssues:output_type -> monorail.RerankHotlistIssuesResponse
	27, // 53: monorail.Features.UpdateHotlistIssueNote:output_type -> monorail.UpdateHotlistIssueNoteResponse
	29, // 54: monorail.Features.DeleteHotlist:output_type -> monorail.DeleteHotlistResponse
	40, // [40:55] is the sub-list for method output_type
	25, // [25:40] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_api_api_proto_features_proto_init() }
func file_api_api_proto_features_proto_init() {
	if File_api_api_proto_features_proto != nil {
		return
	}
	file_api_api_proto_common_proto_init()
	file_api_api_proto_features_objects_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_api_proto_features_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotlistsByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotlistsByUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotlistsByIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotlistsByIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecentlyVisitedHotlistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecentlyVisitedHotlistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStarredHotlistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStarredHotlistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotlistStarCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotlistStarCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarHotlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarHotlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotlistItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotlistItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHotlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHotlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHotlistNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHotlistNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveIssuesFromHotlistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveIssuesFromHotlistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIssuesToHotlistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIssuesToHotlistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RerankHotlistIssuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RerankHotlistIssuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHotlistIssueNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHotlistIssueNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHotlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_features_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHotlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_api_proto_features_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_api_proto_features_proto_goTypes,
		DependencyIndexes: file_api_api_proto_features_proto_depIdxs,
		MessageInfos:      file_api_api_proto_features_proto_msgTypes,
	}.Build()
	File_api_api_proto_features_proto = out.File
	file_api_api_proto_features_proto_rawDesc = nil
	file_api_api_proto_features_proto_goTypes = nil
	file_api_api_proto_features_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FeaturesClient is the client API for Features service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeaturesClient interface {
	ListHotlistsByUser(ctx context.Context, in *ListHotlistsByUserRequest, opts ...grpc.CallOption) (*ListHotlistsByUserResponse, error)
	ListHotlistsByIssue(ctx context.Context, in *ListHotlistsByIssueRequest, opts ...grpc.CallOption) (*ListHotlistsByIssueResponse, error)
	ListRecentlyVisitedHotlists(ctx context.Context, in *ListRecentlyVisitedHotlistsRequest, opts ...grpc.CallOption) (*ListRecentlyVisitedHotlistsResponse, error)
	ListStarredHotlists(ctx context.Context, in *ListStarredHotlistsRequest, opts ...grpc.CallOption) (*ListStarredHotlistsResponse, error)
	GetHotlistStarCount(ctx context.Context, in *GetHotlistStarCountRequest, opts ...grpc.CallOption) (*GetHotlistStarCountResponse, error)
	StarHotlist(ctx context.Context, in *StarHotlistRequest, opts ...grpc.CallOption) (*StarHotlistResponse, error)
	GetHotlist(ctx context.Context, in *GetHotlistRequest, opts ...grpc.CallOption) (*GetHotlistResponse, error)
	ListHotlistItems(ctx context.Context, in *ListHotlistItemsRequest, opts ...grpc.CallOption) (*ListHotlistItemsResponse, error)
	CreateHotlist(ctx context.Context, in *CreateHotlistRequest, opts ...grpc.CallOption) (*CreateHotlistResponse, error)
	CheckHotlistName(ctx context.Context, in *CheckHotlistNameRequest, opts ...grpc.CallOption) (*CheckHotlistNameResponse, error)
	RemoveIssuesFromHotlists(ctx context.Context, in *RemoveIssuesFromHotlistsRequest, opts ...grpc.CallOption) (*RemoveIssuesFromHotlistsResponse, error)
	AddIssuesToHotlists(ctx context.Context, in *AddIssuesToHotlistsRequest, opts ...grpc.CallOption) (*AddIssuesToHotlistsResponse, error)
	RerankHotlistIssues(ctx context.Context, in *RerankHotlistIssuesRequest, opts ...grpc.CallOption) (*RerankHotlistIssuesResponse, error)
	UpdateHotlistIssueNote(ctx context.Context, in *UpdateHotlistIssueNoteRequest, opts ...grpc.CallOption) (*UpdateHotlistIssueNoteResponse, error)
	DeleteHotlist(ctx context.Context, in *DeleteHotlistRequest, opts ...grpc.CallOption) (*DeleteHotlistResponse, error)
}
type featuresPRPCClient struct {
	client *prpc.Client
}

func NewFeaturesPRPCClient(client *prpc.Client) FeaturesClient {
	return &featuresPRPCClient{client}
}

func (c *featuresPRPCClient) ListHotlistsByUser(ctx context.Context, in *ListHotlistsByUserRequest, opts ...grpc.CallOption) (*ListHotlistsByUserResponse, error) {
	out := new(ListHotlistsByUserResponse)
	err := c.client.Call(ctx, "monorail.Features", "ListHotlistsByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) ListHotlistsByIssue(ctx context.Context, in *ListHotlistsByIssueRequest, opts ...grpc.CallOption) (*ListHotlistsByIssueResponse, error) {
	out := new(ListHotlistsByIssueResponse)
	err := c.client.Call(ctx, "monorail.Features", "ListHotlistsByIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) ListRecentlyVisitedHotlists(ctx context.Context, in *ListRecentlyVisitedHotlistsRequest, opts ...grpc.CallOption) (*ListRecentlyVisitedHotlistsResponse, error) {
	out := new(ListRecentlyVisitedHotlistsResponse)
	err := c.client.Call(ctx, "monorail.Features", "ListRecentlyVisitedHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) ListStarredHotlists(ctx context.Context, in *ListStarredHotlistsRequest, opts ...grpc.CallOption) (*ListStarredHotlistsResponse, error) {
	out := new(ListStarredHotlistsResponse)
	err := c.client.Call(ctx, "monorail.Features", "ListStarredHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) GetHotlistStarCount(ctx context.Context, in *GetHotlistStarCountRequest, opts ...grpc.CallOption) (*GetHotlistStarCountResponse, error) {
	out := new(GetHotlistStarCountResponse)
	err := c.client.Call(ctx, "monorail.Features", "GetHotlistStarCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) StarHotlist(ctx context.Context, in *StarHotlistRequest, opts ...grpc.CallOption) (*StarHotlistResponse, error) {
	out := new(StarHotlistResponse)
	err := c.client.Call(ctx, "monorail.Features", "StarHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) GetHotlist(ctx context.Context, in *GetHotlistRequest, opts ...grpc.CallOption) (*GetHotlistResponse, error) {
	out := new(GetHotlistResponse)
	err := c.client.Call(ctx, "monorail.Features", "GetHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) ListHotlistItems(ctx context.Context, in *ListHotlistItemsRequest, opts ...grpc.CallOption) (*ListHotlistItemsResponse, error) {
	out := new(ListHotlistItemsResponse)
	err := c.client.Call(ctx, "monorail.Features", "ListHotlistItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) CreateHotlist(ctx context.Context, in *CreateHotlistRequest, opts ...grpc.CallOption) (*CreateHotlistResponse, error) {
	out := new(CreateHotlistResponse)
	err := c.client.Call(ctx, "monorail.Features", "CreateHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) CheckHotlistName(ctx context.Context, in *CheckHotlistNameRequest, opts ...grpc.CallOption) (*CheckHotlistNameResponse, error) {
	out := new(CheckHotlistNameResponse)
	err := c.client.Call(ctx, "monorail.Features", "CheckHotlistName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) RemoveIssuesFromHotlists(ctx context.Context, in *RemoveIssuesFromHotlistsRequest, opts ...grpc.CallOption) (*RemoveIssuesFromHotlistsResponse, error) {
	out := new(RemoveIssuesFromHotlistsResponse)
	err := c.client.Call(ctx, "monorail.Features", "RemoveIssuesFromHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) AddIssuesToHotlists(ctx context.Context, in *AddIssuesToHotlistsRequest, opts ...grpc.CallOption) (*AddIssuesToHotlistsResponse, error) {
	out := new(AddIssuesToHotlistsResponse)
	err := c.client.Call(ctx, "monorail.Features", "AddIssuesToHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) RerankHotlistIssues(ctx context.Context, in *RerankHotlistIssuesRequest, opts ...grpc.CallOption) (*RerankHotlistIssuesResponse, error) {
	out := new(RerankHotlistIssuesResponse)
	err := c.client.Call(ctx, "monorail.Features", "RerankHotlistIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) UpdateHotlistIssueNote(ctx context.Context, in *UpdateHotlistIssueNoteRequest, opts ...grpc.CallOption) (*UpdateHotlistIssueNoteResponse, error) {
	out := new(UpdateHotlistIssueNoteResponse)
	err := c.client.Call(ctx, "monorail.Features", "UpdateHotlistIssueNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresPRPCClient) DeleteHotlist(ctx context.Context, in *DeleteHotlistRequest, opts ...grpc.CallOption) (*DeleteHotlistResponse, error) {
	out := new(DeleteHotlistResponse)
	err := c.client.Call(ctx, "monorail.Features", "DeleteHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type featuresClient struct {
	cc grpc.ClientConnInterface
}

func NewFeaturesClient(cc grpc.ClientConnInterface) FeaturesClient {
	return &featuresClient{cc}
}

func (c *featuresClient) ListHotlistsByUser(ctx context.Context, in *ListHotlistsByUserRequest, opts ...grpc.CallOption) (*ListHotlistsByUserResponse, error) {
	out := new(ListHotlistsByUserResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/ListHotlistsByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) ListHotlistsByIssue(ctx context.Context, in *ListHotlistsByIssueRequest, opts ...grpc.CallOption) (*ListHotlistsByIssueResponse, error) {
	out := new(ListHotlistsByIssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/ListHotlistsByIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) ListRecentlyVisitedHotlists(ctx context.Context, in *ListRecentlyVisitedHotlistsRequest, opts ...grpc.CallOption) (*ListRecentlyVisitedHotlistsResponse, error) {
	out := new(ListRecentlyVisitedHotlistsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/ListRecentlyVisitedHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) ListStarredHotlists(ctx context.Context, in *ListStarredHotlistsRequest, opts ...grpc.CallOption) (*ListStarredHotlistsResponse, error) {
	out := new(ListStarredHotlistsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/ListStarredHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) GetHotlistStarCount(ctx context.Context, in *GetHotlistStarCountRequest, opts ...grpc.CallOption) (*GetHotlistStarCountResponse, error) {
	out := new(GetHotlistStarCountResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/GetHotlistStarCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) StarHotlist(ctx context.Context, in *StarHotlistRequest, opts ...grpc.CallOption) (*StarHotlistResponse, error) {
	out := new(StarHotlistResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/StarHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) GetHotlist(ctx context.Context, in *GetHotlistRequest, opts ...grpc.CallOption) (*GetHotlistResponse, error) {
	out := new(GetHotlistResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/GetHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) ListHotlistItems(ctx context.Context, in *ListHotlistItemsRequest, opts ...grpc.CallOption) (*ListHotlistItemsResponse, error) {
	out := new(ListHotlistItemsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/ListHotlistItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) CreateHotlist(ctx context.Context, in *CreateHotlistRequest, opts ...grpc.CallOption) (*CreateHotlistResponse, error) {
	out := new(CreateHotlistResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/CreateHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) CheckHotlistName(ctx context.Context, in *CheckHotlistNameRequest, opts ...grpc.CallOption) (*CheckHotlistNameResponse, error) {
	out := new(CheckHotlistNameResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/CheckHotlistName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) RemoveIssuesFromHotlists(ctx context.Context, in *RemoveIssuesFromHotlistsRequest, opts ...grpc.CallOption) (*RemoveIssuesFromHotlistsResponse, error) {
	out := new(RemoveIssuesFromHotlistsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/RemoveIssuesFromHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) AddIssuesToHotlists(ctx context.Context, in *AddIssuesToHotlistsRequest, opts ...grpc.CallOption) (*AddIssuesToHotlistsResponse, error) {
	out := new(AddIssuesToHotlistsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/AddIssuesToHotlists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) RerankHotlistIssues(ctx context.Context, in *RerankHotlistIssuesRequest, opts ...grpc.CallOption) (*RerankHotlistIssuesResponse, error) {
	out := new(RerankHotlistIssuesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/RerankHotlistIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) UpdateHotlistIssueNote(ctx context.Context, in *UpdateHotlistIssueNoteRequest, opts ...grpc.CallOption) (*UpdateHotlistIssueNoteResponse, error) {
	out := new(UpdateHotlistIssueNoteResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/UpdateHotlistIssueNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresClient) DeleteHotlist(ctx context.Context, in *DeleteHotlistRequest, opts ...grpc.CallOption) (*DeleteHotlistResponse, error) {
	out := new(DeleteHotlistResponse)
	err := c.cc.Invoke(ctx, "/monorail.Features/DeleteHotlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeaturesServer is the server API for Features service.
type FeaturesServer interface {
	ListHotlistsByUser(context.Context, *ListHotlistsByUserRequest) (*ListHotlistsByUserResponse, error)
	ListHotlistsByIssue(context.Context, *ListHotlistsByIssueRequest) (*ListHotlistsByIssueResponse, error)
	ListRecentlyVisitedHotlists(context.Context, *ListRecentlyVisitedHotlistsRequest) (*ListRecentlyVisitedHotlistsResponse, error)
	ListStarredHotlists(context.Context, *ListStarredHotlistsRequest) (*ListStarredHotlistsResponse, error)
	GetHotlistStarCount(context.Context, *GetHotlistStarCountRequest) (*GetHotlistStarCountResponse, error)
	StarHotlist(context.Context, *StarHotlistRequest) (*StarHotlistResponse, error)
	GetHotlist(context.Context, *GetHotlistRequest) (*GetHotlistResponse, error)
	ListHotlistItems(context.Context, *ListHotlistItemsRequest) (*ListHotlistItemsResponse, error)
	CreateHotlist(context.Context, *CreateHotlistRequest) (*CreateHotlistResponse, error)
	CheckHotlistName(context.Context, *CheckHotlistNameRequest) (*CheckHotlistNameResponse, error)
	RemoveIssuesFromHotlists(context.Context, *RemoveIssuesFromHotlistsRequest) (*RemoveIssuesFromHotlistsResponse, error)
	AddIssuesToHotlists(context.Context, *AddIssuesToHotlistsRequest) (*AddIssuesToHotlistsResponse, error)
	RerankHotlistIssues(context.Context, *RerankHotlistIssuesRequest) (*RerankHotlistIssuesResponse, error)
	UpdateHotlistIssueNote(context.Context, *UpdateHotlistIssueNoteRequest) (*UpdateHotlistIssueNoteResponse, error)
	DeleteHotlist(context.Context, *DeleteHotlistRequest) (*DeleteHotlistResponse, error)
}

// UnimplementedFeaturesServer can be embedded to have forward compatible implementations.
type UnimplementedFeaturesServer struct {
}

func (*UnimplementedFeaturesServer) ListHotlistsByUser(context.Context, *ListHotlistsByUserRequest) (*ListHotlistsByUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHotlistsByUser not implemented")
}
func (*UnimplementedFeaturesServer) ListHotlistsByIssue(context.Context, *ListHotlistsByIssueRequest) (*ListHotlistsByIssueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHotlistsByIssue not implemented")
}
func (*UnimplementedFeaturesServer) ListRecentlyVisitedHotlists(context.Context, *ListRecentlyVisitedHotlistsRequest) (*ListRecentlyVisitedHotlistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecentlyVisitedHotlists not implemented")
}
func (*UnimplementedFeaturesServer) ListStarredHotlists(context.Context, *ListStarredHotlistsRequest) (*ListStarredHotlistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStarredHotlists not implemented")
}
func (*UnimplementedFeaturesServer) GetHotlistStarCount(context.Context, *GetHotlistStarCountRequest) (*GetHotlistStarCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHotlistStarCount not implemented")
}
func (*UnimplementedFeaturesServer) StarHotlist(context.Context, *StarHotlistRequest) (*StarHotlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StarHotlist not implemented")
}
func (*UnimplementedFeaturesServer) GetHotlist(context.Context, *GetHotlistRequest) (*GetHotlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHotlist not implemented")
}
func (*UnimplementedFeaturesServer) ListHotlistItems(context.Context, *ListHotlistItemsRequest) (*ListHotlistItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHotlistItems not implemented")
}
func (*UnimplementedFeaturesServer) CreateHotlist(context.Context, *CreateHotlistRequest) (*CreateHotlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHotlist not implemented")
}
func (*UnimplementedFeaturesServer) CheckHotlistName(context.Context, *CheckHotlistNameRequest) (*CheckHotlistNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckHotlistName not implemented")
}
func (*UnimplementedFeaturesServer) RemoveIssuesFromHotlists(context.Context, *RemoveIssuesFromHotlistsRequest) (*RemoveIssuesFromHotlistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIssuesFromHotlists not implemented")
}
func (*UnimplementedFeaturesServer) AddIssuesToHotlists(context.Context, *AddIssuesToHotlistsRequest) (*AddIssuesToHotlistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIssuesToHotlists not implemented")
}
func (*UnimplementedFeaturesServer) RerankHotlistIssues(context.Context, *RerankHotlistIssuesRequest) (*RerankHotlistIssuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RerankHotlistIssues not implemented")
}
func (*UnimplementedFeaturesServer) UpdateHotlistIssueNote(context.Context, *UpdateHotlistIssueNoteRequest) (*UpdateHotlistIssueNoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHotlistIssueNote not implemented")
}
func (*UnimplementedFeaturesServer) DeleteHotlist(context.Context, *DeleteHotlistRequest) (*DeleteHotlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHotlist not implemented")
}

func RegisterFeaturesServer(s prpc.Registrar, srv FeaturesServer) {
	s.RegisterService(&_Features_serviceDesc, srv)
}

func _Features_ListHotlistsByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListHotlistsByUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).ListHotlistsByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/ListHotlistsByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).ListHotlistsByUser(ctx, req.(*ListHotlistsByUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_ListHotlistsByIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListHotlistsByIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).ListHotlistsByIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/ListHotlistsByIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).ListHotlistsByIssue(ctx, req.(*ListHotlistsByIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_ListRecentlyVisitedHotlists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRecentlyVisitedHotlistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).ListRecentlyVisitedHotlists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/ListRecentlyVisitedHotlists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).ListRecentlyVisitedHotlists(ctx, req.(*ListRecentlyVisitedHotlistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_ListStarredHotlists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStarredHotlistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).ListStarredHotlists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/ListStarredHotlists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).ListStarredHotlists(ctx, req.(*ListStarredHotlistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_GetHotlistStarCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHotlistStarCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).GetHotlistStarCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/GetHotlistStarCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).GetHotlistStarCount(ctx, req.(*GetHotlistStarCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_StarHotlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StarHotlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).StarHotlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/StarHotlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).StarHotlist(ctx, req.(*StarHotlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_GetHotlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHotlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).GetHotlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/GetHotlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).GetHotlist(ctx, req.(*GetHotlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_ListHotlistItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListHotlistItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).ListHotlistItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/ListHotlistItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).ListHotlistItems(ctx, req.(*ListHotlistItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_CreateHotlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHotlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).CreateHotlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/CreateHotlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).CreateHotlist(ctx, req.(*CreateHotlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_CheckHotlistName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckHotlistNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).CheckHotlistName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/CheckHotlistName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).CheckHotlistName(ctx, req.(*CheckHotlistNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_RemoveIssuesFromHotlists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveIssuesFromHotlistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).RemoveIssuesFromHotlists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/RemoveIssuesFromHotlists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).RemoveIssuesFromHotlists(ctx, req.(*RemoveIssuesFromHotlistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_AddIssuesToHotlists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddIssuesToHotlistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).AddIssuesToHotlists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/AddIssuesToHotlists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).AddIssuesToHotlists(ctx, req.(*AddIssuesToHotlistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_RerankHotlistIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RerankHotlistIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).RerankHotlistIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/RerankHotlistIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).RerankHotlistIssues(ctx, req.(*RerankHotlistIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_UpdateHotlistIssueNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHotlistIssueNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).UpdateHotlistIssueNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/UpdateHotlistIssueNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).UpdateHotlistIssueNote(ctx, req.(*UpdateHotlistIssueNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Features_DeleteHotlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHotlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesServer).DeleteHotlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Features/DeleteHotlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesServer).DeleteHotlist(ctx, req.(*DeleteHotlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Features_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monorail.Features",
	HandlerType: (*FeaturesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListHotlistsByUser",
			Handler:    _Features_ListHotlistsByUser_Handler,
		},
		{
			MethodName: "ListHotlistsByIssue",
			Handler:    _Features_ListHotlistsByIssue_Handler,
		},
		{
			MethodName: "ListRecentlyVisitedHotlists",
			Handler:    _Features_ListRecentlyVisitedHotlists_Handler,
		},
		{
			MethodName: "ListStarredHotlists",
			Handler:    _Features_ListStarredHotlists_Handler,
		},
		{
			MethodName: "GetHotlistStarCount",
			Handler:    _Features_GetHotlistStarCount_Handler,
		},
		{
			MethodName: "StarHotlist",
			Handler:    _Features_StarHotlist_Handler,
		},
		{
			MethodName: "GetHotlist",
			Handler:    _Features_GetHotlist_Handler,
		},
		{
			MethodName: "ListHotlistItems",
			Handler:    _Features_ListHotlistItems_Handler,
		},
		{
			MethodName: "CreateHotlist",
			Handler:    _Features_CreateHotlist_Handler,
		},
		{
			MethodName: "CheckHotlistName",
			Handler:    _Features_CheckHotlistName_Handler,
		},
		{
			MethodName: "RemoveIssuesFromHotlists",
			Handler:    _Features_RemoveIssuesFromHotlists_Handler,
		},
		{
			MethodName: "AddIssuesToHotlists",
			Handler:    _Features_AddIssuesToHotlists_Handler,
		},
		{
			MethodName: "RerankHotlistIssues",
			Handler:    _Features_RerankHotlistIssues_Handler,
		},
		{
			MethodName: "UpdateHotlistIssueNote",
			Handler:    _Features_UpdateHotlistIssueNote_Handler,
		},
		{
			MethodName: "DeleteHotlist",
			Handler:    _Features_DeleteHotlist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api_proto/features.proto",
}
