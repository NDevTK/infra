// Copyright 2018 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file defines protobufs for issues and related business
// objects, e.g., field values, comments, and attachments.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: api/api_proto/project_objects.proto

package monorail

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next available tag: 4
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Summary     string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Next available tag: 6
type StatusDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	MeansOpen  bool   `protobuf:"varint,2,opt,name=means_open,json=meansOpen,proto3" json:"means_open,omitempty"`
	Rank       uint32 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	Docstring  string `protobuf:"bytes,4,opt,name=docstring,proto3" json:"docstring,omitempty"`
	Deprecated bool   `protobuf:"varint,5,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
}

func (x *StatusDef) Reset() {
	*x = StatusDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusDef) ProtoMessage() {}

func (x *StatusDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusDef.ProtoReflect.Descriptor instead.
func (*StatusDef) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{1}
}

func (x *StatusDef) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusDef) GetMeansOpen() bool {
	if x != nil {
		return x.MeansOpen
	}
	return false
}

func (x *StatusDef) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *StatusDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *StatusDef) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

// Next available tag: 5
type LabelDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label      string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Docstring  string `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	Deprecated bool   `protobuf:"varint,4,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
}

func (x *LabelDef) Reset() {
	*x = LabelDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelDef) ProtoMessage() {}

func (x *LabelDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelDef.ProtoReflect.Descriptor instead.
func (*LabelDef) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{2}
}

func (x *LabelDef) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LabelDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *LabelDef) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

// Next available tag: 11
type ComponentDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string      `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Docstring   string      `protobuf:"bytes,2,opt,name=docstring,proto3" json:"docstring,omitempty"`
	AdminRefs   []*UserRef  `protobuf:"bytes,3,rep,name=admin_refs,json=adminRefs,proto3" json:"admin_refs,omitempty"`
	CcRefs      []*UserRef  `protobuf:"bytes,4,rep,name=cc_refs,json=ccRefs,proto3" json:"cc_refs,omitempty"`
	Deprecated  bool        `protobuf:"varint,5,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	Created     uint32      `protobuf:"fixed32,6,opt,name=created,proto3" json:"created,omitempty"`
	CreatorRef  *UserRef    `protobuf:"bytes,7,opt,name=creator_ref,json=creatorRef,proto3" json:"creator_ref,omitempty"`
	Modified    uint32      `protobuf:"fixed32,8,opt,name=modified,proto3" json:"modified,omitempty"`
	ModifierRef *UserRef    `protobuf:"bytes,9,opt,name=modifier_ref,json=modifierRef,proto3" json:"modifier_ref,omitempty"`
	LabelRefs   []*LabelRef `protobuf:"bytes,10,rep,name=label_refs,json=labelRefs,proto3" json:"label_refs,omitempty"`
}

func (x *ComponentDef) Reset() {
	*x = ComponentDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDef) ProtoMessage() {}

func (x *ComponentDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDef.ProtoReflect.Descriptor instead.
func (*ComponentDef) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{3}
}

func (x *ComponentDef) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ComponentDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *ComponentDef) GetAdminRefs() []*UserRef {
	if x != nil {
		return x.AdminRefs
	}
	return nil
}

func (x *ComponentDef) GetCcRefs() []*UserRef {
	if x != nil {
		return x.CcRefs
	}
	return nil
}

func (x *ComponentDef) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *ComponentDef) GetCreated() uint32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ComponentDef) GetCreatorRef() *UserRef {
	if x != nil {
		return x.CreatorRef
	}
	return nil
}

func (x *ComponentDef) GetModified() uint32 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *ComponentDef) GetModifierRef() *UserRef {
	if x != nil {
		return x.ModifierRef
	}
	return nil
}

func (x *ComponentDef) GetLabelRefs() []*LabelRef {
	if x != nil {
		return x.LabelRefs
	}
	return nil
}

// Next available tag: 9
type FieldDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldRef       *FieldRef `protobuf:"bytes,1,opt,name=field_ref,json=fieldRef,proto3" json:"field_ref,omitempty"`
	ApplicableType string    `protobuf:"bytes,2,opt,name=applicable_type,json=applicableType,proto3" json:"applicable_type,omitempty"`
	// TODO(jrobbins): applicable_predicate
	IsRequired    bool       `protobuf:"varint,3,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	IsNiche       bool       `protobuf:"varint,4,opt,name=is_niche,json=isNiche,proto3" json:"is_niche,omitempty"`
	IsMultivalued bool       `protobuf:"varint,5,opt,name=is_multivalued,json=isMultivalued,proto3" json:"is_multivalued,omitempty"`
	Docstring     string     `protobuf:"bytes,6,opt,name=docstring,proto3" json:"docstring,omitempty"`
	AdminRefs     []*UserRef `protobuf:"bytes,7,rep,name=admin_refs,json=adminRefs,proto3" json:"admin_refs,omitempty"`
	// TODO(jrobbins): validation, permission granting, and notification options.
	IsPhaseField bool        `protobuf:"varint,8,opt,name=is_phase_field,json=isPhaseField,proto3" json:"is_phase_field,omitempty"`
	UserChoices  []*UserRef  `protobuf:"bytes,9,rep,name=user_choices,json=userChoices,proto3" json:"user_choices,omitempty"`
	EnumChoices  []*LabelDef `protobuf:"bytes,10,rep,name=enum_choices,json=enumChoices,proto3" json:"enum_choices,omitempty"`
}

func (x *FieldDef) Reset() {
	*x = FieldDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef) ProtoMessage() {}

func (x *FieldDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef.ProtoReflect.Descriptor instead.
func (*FieldDef) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{4}
}

func (x *FieldDef) GetFieldRef() *FieldRef {
	if x != nil {
		return x.FieldRef
	}
	return nil
}

func (x *FieldDef) GetApplicableType() string {
	if x != nil {
		return x.ApplicableType
	}
	return ""
}

func (x *FieldDef) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *FieldDef) GetIsNiche() bool {
	if x != nil {
		return x.IsNiche
	}
	return false
}

func (x *FieldDef) GetIsMultivalued() bool {
	if x != nil {
		return x.IsMultivalued
	}
	return false
}

func (x *FieldDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *FieldDef) GetAdminRefs() []*UserRef {
	if x != nil {
		return x.AdminRefs
	}
	return nil
}

func (x *FieldDef) GetIsPhaseField() bool {
	if x != nil {
		return x.IsPhaseField
	}
	return false
}

func (x *FieldDef) GetUserChoices() []*UserRef {
	if x != nil {
		return x.UserChoices
	}
	return nil
}

func (x *FieldDef) GetEnumChoices() []*LabelDef {
	if x != nil {
		return x.EnumChoices
	}
	return nil
}

// Next available tag: 3
type FieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldRef *FieldRef  `protobuf:"bytes,1,opt,name=field_ref,json=fieldRef,proto3" json:"field_ref,omitempty"`
	UserRefs []*UserRef `protobuf:"bytes,2,rep,name=user_refs,json=userRefs,proto3" json:"user_refs,omitempty"`
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{5}
}

func (x *FieldOptions) GetFieldRef() *FieldRef {
	if x != nil {
		return x.FieldRef
	}
	return nil
}

func (x *FieldOptions) GetUserRefs() []*UserRef {
	if x != nil {
		return x.UserRefs
	}
	return nil
}

// Next available tag: 4
type ApprovalDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldRef     *FieldRef  `protobuf:"bytes,1,opt,name=field_ref,json=fieldRef,proto3" json:"field_ref,omitempty"`
	ApproverRefs []*UserRef `protobuf:"bytes,2,rep,name=approver_refs,json=approverRefs,proto3" json:"approver_refs,omitempty"`
	Survey       string     `protobuf:"bytes,3,opt,name=survey,proto3" json:"survey,omitempty"`
}

func (x *ApprovalDef) Reset() {
	*x = ApprovalDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalDef) ProtoMessage() {}

func (x *ApprovalDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalDef.ProtoReflect.Descriptor instead.
func (*ApprovalDef) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{6}
}

func (x *ApprovalDef) GetFieldRef() *FieldRef {
	if x != nil {
		return x.FieldRef
	}
	return nil
}

func (x *ApprovalDef) GetApproverRefs() []*UserRef {
	if x != nil {
		return x.ApproverRefs
	}
	return nil
}

func (x *ApprovalDef) GetSurvey() string {
	if x != nil {
		return x.Survey
	}
	return ""
}

// Next available tag: 11
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName            string          `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	StatusDefs             []*StatusDef    `protobuf:"bytes,2,rep,name=status_defs,json=statusDefs,proto3" json:"status_defs,omitempty"`
	StatusesOfferMerge     []*StatusRef    `protobuf:"bytes,3,rep,name=statuses_offer_merge,json=statusesOfferMerge,proto3" json:"statuses_offer_merge,omitempty"`
	LabelDefs              []*LabelDef     `protobuf:"bytes,4,rep,name=label_defs,json=labelDefs,proto3" json:"label_defs,omitempty"`
	ExclusiveLabelPrefixes []string        `protobuf:"bytes,5,rep,name=exclusive_label_prefixes,json=exclusiveLabelPrefixes,proto3" json:"exclusive_label_prefixes,omitempty"`
	ComponentDefs          []*ComponentDef `protobuf:"bytes,6,rep,name=component_defs,json=componentDefs,proto3" json:"component_defs,omitempty"`
	FieldDefs              []*FieldDef     `protobuf:"bytes,7,rep,name=field_defs,json=fieldDefs,proto3" json:"field_defs,omitempty"`
	ApprovalDefs           []*ApprovalDef  `protobuf:"bytes,8,rep,name=approval_defs,json=approvalDefs,proto3" json:"approval_defs,omitempty"`
	RestrictToKnown        bool            `protobuf:"varint,9,opt,name=restrict_to_known,json=restrictToKnown,proto3" json:"restrict_to_known,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{7}
}

func (x *Config) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *Config) GetStatusDefs() []*StatusDef {
	if x != nil {
		return x.StatusDefs
	}
	return nil
}

func (x *Config) GetStatusesOfferMerge() []*StatusRef {
	if x != nil {
		return x.StatusesOfferMerge
	}
	return nil
}

func (x *Config) GetLabelDefs() []*LabelDef {
	if x != nil {
		return x.LabelDefs
	}
	return nil
}

func (x *Config) GetExclusiveLabelPrefixes() []string {
	if x != nil {
		return x.ExclusiveLabelPrefixes
	}
	return nil
}

func (x *Config) GetComponentDefs() []*ComponentDef {
	if x != nil {
		return x.ComponentDefs
	}
	return nil
}

func (x *Config) GetFieldDefs() []*FieldDef {
	if x != nil {
		return x.FieldDefs
	}
	return nil
}

func (x *Config) GetApprovalDefs() []*ApprovalDef {
	if x != nil {
		return x.ApprovalDefs
	}
	return nil
}

func (x *Config) GetRestrictToKnown() bool {
	if x != nil {
		return x.RestrictToKnown
	}
	return false
}

// Next available tag: 11
type PresentationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectThumbnailUrl string        `protobuf:"bytes,1,opt,name=project_thumbnail_url,json=projectThumbnailUrl,proto3" json:"project_thumbnail_url,omitempty"`
	ProjectSummary      string        `protobuf:"bytes,2,opt,name=project_summary,json=projectSummary,proto3" json:"project_summary,omitempty"`
	CustomIssueEntryUrl string        `protobuf:"bytes,3,opt,name=custom_issue_entry_url,json=customIssueEntryUrl,proto3" json:"custom_issue_entry_url,omitempty"`
	DefaultQuery        string        `protobuf:"bytes,4,opt,name=default_query,json=defaultQuery,proto3" json:"default_query,omitempty"`
	SavedQueries        []*SavedQuery `protobuf:"bytes,5,rep,name=saved_queries,json=savedQueries,proto3" json:"saved_queries,omitempty"`
	RevisionUrlFormat   string        `protobuf:"bytes,6,opt,name=revision_url_format,json=revisionUrlFormat,proto3" json:"revision_url_format,omitempty"`
	DefaultColSpec      string        `protobuf:"bytes,7,opt,name=default_col_spec,json=defaultColSpec,proto3" json:"default_col_spec,omitempty"`
	DefaultSortSpec     string        `protobuf:"bytes,8,opt,name=default_sort_spec,json=defaultSortSpec,proto3" json:"default_sort_spec,omitempty"`
	DefaultXAttr        string        `protobuf:"bytes,9,opt,name=default_x_attr,json=defaultXAttr,proto3" json:"default_x_attr,omitempty"`
	DefaultYAttr        string        `protobuf:"bytes,10,opt,name=default_y_attr,json=defaultYAttr,proto3" json:"default_y_attr,omitempty"`
}

func (x *PresentationConfig) Reset() {
	*x = PresentationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresentationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresentationConfig) ProtoMessage() {}

func (x *PresentationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresentationConfig.ProtoReflect.Descriptor instead.
func (*PresentationConfig) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{8}
}

func (x *PresentationConfig) GetProjectThumbnailUrl() string {
	if x != nil {
		return x.ProjectThumbnailUrl
	}
	return ""
}

func (x *PresentationConfig) GetProjectSummary() string {
	if x != nil {
		return x.ProjectSummary
	}
	return ""
}

func (x *PresentationConfig) GetCustomIssueEntryUrl() string {
	if x != nil {
		return x.CustomIssueEntryUrl
	}
	return ""
}

func (x *PresentationConfig) GetDefaultQuery() string {
	if x != nil {
		return x.DefaultQuery
	}
	return ""
}

func (x *PresentationConfig) GetSavedQueries() []*SavedQuery {
	if x != nil {
		return x.SavedQueries
	}
	return nil
}

func (x *PresentationConfig) GetRevisionUrlFormat() string {
	if x != nil {
		return x.RevisionUrlFormat
	}
	return ""
}

func (x *PresentationConfig) GetDefaultColSpec() string {
	if x != nil {
		return x.DefaultColSpec
	}
	return ""
}

func (x *PresentationConfig) GetDefaultSortSpec() string {
	if x != nil {
		return x.DefaultSortSpec
	}
	return ""
}

func (x *PresentationConfig) GetDefaultXAttr() string {
	if x != nil {
		return x.DefaultXAttr
	}
	return ""
}

func (x *PresentationConfig) GetDefaultYAttr() string {
	if x != nil {
		return x.DefaultYAttr
	}
	return ""
}

// Next available tag: 16
type TemplateDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName          string          `protobuf:"bytes,1,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	Content               string          `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Summary               string          `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	SummaryMustBeEdited   bool            `protobuf:"varint,4,opt,name=summary_must_be_edited,json=summaryMustBeEdited,proto3" json:"summary_must_be_edited,omitempty"`
	OwnerRef              *UserRef        `protobuf:"bytes,5,opt,name=owner_ref,json=ownerRef,proto3" json:"owner_ref,omitempty"`
	StatusRef             *StatusRef      `protobuf:"bytes,6,opt,name=status_ref,json=statusRef,proto3" json:"status_ref,omitempty"`
	LabelRefs             []*LabelRef     `protobuf:"bytes,7,rep,name=label_refs,json=labelRefs,proto3" json:"label_refs,omitempty"`
	MembersOnly           bool            `protobuf:"varint,8,opt,name=members_only,json=membersOnly,proto3" json:"members_only,omitempty"`
	OwnerDefaultsToMember bool            `protobuf:"varint,9,opt,name=owner_defaults_to_member,json=ownerDefaultsToMember,proto3" json:"owner_defaults_to_member,omitempty"`
	AdminRefs             []*UserRef      `protobuf:"bytes,10,rep,name=admin_refs,json=adminRefs,proto3" json:"admin_refs,omitempty"`
	FieldValues           []*FieldValue   `protobuf:"bytes,11,rep,name=field_values,json=fieldValues,proto3" json:"field_values,omitempty"`
	ComponentRefs         []*ComponentRef `protobuf:"bytes,12,rep,name=component_refs,json=componentRefs,proto3" json:"component_refs,omitempty"`
	ComponentRequired     bool            `protobuf:"varint,13,opt,name=component_required,json=componentRequired,proto3" json:"component_required,omitempty"`
	ApprovalValues        []*Approval     `protobuf:"bytes,14,rep,name=approval_values,json=approvalValues,proto3" json:"approval_values,omitempty"`
	Phases                []*PhaseDef     `protobuf:"bytes,15,rep,name=phases,proto3" json:"phases,omitempty"`
}

func (x *TemplateDef) Reset() {
	*x = TemplateDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_project_objects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateDef) ProtoMessage() {}

func (x *TemplateDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_project_objects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateDef.ProtoReflect.Descriptor instead.
func (*TemplateDef) Descriptor() ([]byte, []int) {
	return file_api_api_proto_project_objects_proto_rawDescGZIP(), []int{9}
}

func (x *TemplateDef) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *TemplateDef) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TemplateDef) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *TemplateDef) GetSummaryMustBeEdited() bool {
	if x != nil {
		return x.SummaryMustBeEdited
	}
	return false
}

func (x *TemplateDef) GetOwnerRef() *UserRef {
	if x != nil {
		return x.OwnerRef
	}
	return nil
}

func (x *TemplateDef) GetStatusRef() *StatusRef {
	if x != nil {
		return x.StatusRef
	}
	return nil
}

func (x *TemplateDef) GetLabelRefs() []*LabelRef {
	if x != nil {
		return x.LabelRefs
	}
	return nil
}

func (x *TemplateDef) GetMembersOnly() bool {
	if x != nil {
		return x.MembersOnly
	}
	return false
}

func (x *TemplateDef) GetOwnerDefaultsToMember() bool {
	if x != nil {
		return x.OwnerDefaultsToMember
	}
	return false
}

func (x *TemplateDef) GetAdminRefs() []*UserRef {
	if x != nil {
		return x.AdminRefs
	}
	return nil
}

func (x *TemplateDef) GetFieldValues() []*FieldValue {
	if x != nil {
		return x.FieldValues
	}
	return nil
}

func (x *TemplateDef) GetComponentRefs() []*ComponentRef {
	if x != nil {
		return x.ComponentRefs
	}
	return nil
}

func (x *TemplateDef) GetComponentRequired() bool {
	if x != nil {
		return x.ComponentRequired
	}
	return false
}

func (x *TemplateDef) GetApprovalValues() []*Approval {
	if x != nil {
		return x.ApprovalValues
	}
	return nil
}

func (x *TemplateDef) GetPhases() []*PhaseDef {
	if x != nil {
		return x.Phases
	}
	return nil
}

var File_api_api_proto_project_objects_proto protoreflect.FileDescriptor

var file_api_api_proto_project_objects_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x1a,
	0x1a, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x5e, 0x0a, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x91, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x66, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x66,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x66, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x63, 0x5f, 0x72, 0x65, 0x66, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x06, 0x63, 0x63, 0x52, 0x65, 0x66,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x66, 0x73, 0x22, 0xaa, 0x03, 0x0a, 0x08, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65,
	0x66, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x66, 0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x6e, 0x69, 0x63, 0x68, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x4e, 0x69, 0x63, 0x68, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x0a,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x68, 0x61, 0x73, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x65, 0x6e,
	0x75, 0x6d, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x44, 0x65, 0x66, 0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x22, 0x6f, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x66, 0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x65, 0x66, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44,
	0x65, 0x66, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x66, 0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x65, 0x66, 0x12, 0x36, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x66, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x22, 0xef, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x73, 0x12, 0x45, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x66, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x66,
	0x73, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x16, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44,
	0x65, 0x66, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x73, 0x12, 0x3a, 0x0a,
	0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x6f,
	0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x22, 0xd8, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x15,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x78, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x59, 0x41, 0x74, 0x74, 0x72,
	0x22, 0xd0, 0x05, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x62, 0x65, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x4d, 0x75, 0x73, 0x74, 0x42, 0x65, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x32,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x66, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x66, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x66, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x54, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x66, 0x73, 0x12, 0x37, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x66, 0x52, 0x06, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x6d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_api_proto_project_objects_proto_rawDescOnce sync.Once
	file_api_api_proto_project_objects_proto_rawDescData = file_api_api_proto_project_objects_proto_rawDesc
)

func file_api_api_proto_project_objects_proto_rawDescGZIP() []byte {
	file_api_api_proto_project_objects_proto_rawDescOnce.Do(func() {
		file_api_api_proto_project_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_api_proto_project_objects_proto_rawDescData)
	})
	return file_api_api_proto_project_objects_proto_rawDescData
}

var file_api_api_proto_project_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_api_proto_project_objects_proto_goTypes = []interface{}{
	(*Project)(nil),            // 0: monorail.Project
	(*StatusDef)(nil),          // 1: monorail.StatusDef
	(*LabelDef)(nil),           // 2: monorail.LabelDef
	(*ComponentDef)(nil),       // 3: monorail.ComponentDef
	(*FieldDef)(nil),           // 4: monorail.FieldDef
	(*FieldOptions)(nil),       // 5: monorail.FieldOptions
	(*ApprovalDef)(nil),        // 6: monorail.ApprovalDef
	(*Config)(nil),             // 7: monorail.Config
	(*PresentationConfig)(nil), // 8: monorail.PresentationConfig
	(*TemplateDef)(nil),        // 9: monorail.TemplateDef
	(*UserRef)(nil),            // 10: monorail.UserRef
	(*LabelRef)(nil),           // 11: monorail.LabelRef
	(*FieldRef)(nil),           // 12: monorail.FieldRef
	(*StatusRef)(nil),          // 13: monorail.StatusRef
	(*SavedQuery)(nil),         // 14: monorail.SavedQuery
	(*FieldValue)(nil),         // 15: monorail.FieldValue
	(*ComponentRef)(nil),       // 16: monorail.ComponentRef
	(*Approval)(nil),           // 17: monorail.Approval
	(*PhaseDef)(nil),           // 18: monorail.PhaseDef
}
var file_api_api_proto_project_objects_proto_depIdxs = []int32{
	10, // 0: monorail.ComponentDef.admin_refs:type_name -> monorail.UserRef
	10, // 1: monorail.ComponentDef.cc_refs:type_name -> monorail.UserRef
	10, // 2: monorail.ComponentDef.creator_ref:type_name -> monorail.UserRef
	10, // 3: monorail.ComponentDef.modifier_ref:type_name -> monorail.UserRef
	11, // 4: monorail.ComponentDef.label_refs:type_name -> monorail.LabelRef
	12, // 5: monorail.FieldDef.field_ref:type_name -> monorail.FieldRef
	10, // 6: monorail.FieldDef.admin_refs:type_name -> monorail.UserRef
	10, // 7: monorail.FieldDef.user_choices:type_name -> monorail.UserRef
	2,  // 8: monorail.FieldDef.enum_choices:type_name -> monorail.LabelDef
	12, // 9: monorail.FieldOptions.field_ref:type_name -> monorail.FieldRef
	10, // 10: monorail.FieldOptions.user_refs:type_name -> monorail.UserRef
	12, // 11: monorail.ApprovalDef.field_ref:type_name -> monorail.FieldRef
	10, // 12: monorail.ApprovalDef.approver_refs:type_name -> monorail.UserRef
	1,  // 13: monorail.Config.status_defs:type_name -> monorail.StatusDef
	13, // 14: monorail.Config.statuses_offer_merge:type_name -> monorail.StatusRef
	2,  // 15: monorail.Config.label_defs:type_name -> monorail.LabelDef
	3,  // 16: monorail.Config.component_defs:type_name -> monorail.ComponentDef
	4,  // 17: monorail.Config.field_defs:type_name -> monorail.FieldDef
	6,  // 18: monorail.Config.approval_defs:type_name -> monorail.ApprovalDef
	14, // 19: monorail.PresentationConfig.saved_queries:type_name -> monorail.SavedQuery
	10, // 20: monorail.TemplateDef.owner_ref:type_name -> monorail.UserRef
	13, // 21: monorail.TemplateDef.status_ref:type_name -> monorail.StatusRef
	11, // 22: monorail.TemplateDef.label_refs:type_name -> monorail.LabelRef
	10, // 23: monorail.TemplateDef.admin_refs:type_name -> monorail.UserRef
	15, // 24: monorail.TemplateDef.field_values:type_name -> monorail.FieldValue
	16, // 25: monorail.TemplateDef.component_refs:type_name -> monorail.ComponentRef
	17, // 26: monorail.TemplateDef.approval_values:type_name -> monorail.Approval
	18, // 27: monorail.TemplateDef.phases:type_name -> monorail.PhaseDef
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_api_api_proto_project_objects_proto_init() }
func file_api_api_proto_project_objects_proto_init() {
	if File_api_api_proto_project_objects_proto != nil {
		return
	}
	file_api_api_proto_common_proto_init()
	file_api_api_proto_issue_objects_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_api_proto_project_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresentationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_project_objects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_api_proto_project_objects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_api_proto_project_objects_proto_goTypes,
		DependencyIndexes: file_api_api_proto_project_objects_proto_depIdxs,
		MessageInfos:      file_api_api_proto_project_objects_proto_msgTypes,
	}.Build()
	File_api_api_proto_project_objects_proto = out.File
	file_api_api_proto_project_objects_proto_rawDesc = nil
	file_api_api_proto_project_objects_proto_goTypes = nil
	file_api_api_proto_project_objects_proto_depIdxs = nil
}
