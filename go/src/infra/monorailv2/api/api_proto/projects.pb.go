// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/api_proto/projects.proto

package monorail

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next available tag: 3
type ListProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{0}
}

func (x *ListProjectsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListProjectsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Next available tag: 3
type ListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects      []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{1}
}

func (x *ListProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *ListProjectsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Next available tag: 3
type ListProjectTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *ListProjectTemplatesRequest) Reset() {
	*x = ListProjectTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectTemplatesRequest) ProtoMessage() {}

func (x *ListProjectTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListProjectTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{2}
}

func (x *ListProjectTemplatesRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 2
type ListProjectTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*TemplateDef `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
}

func (x *ListProjectTemplatesResponse) Reset() {
	*x = ListProjectTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectTemplatesResponse) ProtoMessage() {}

func (x *ListProjectTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListProjectTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{3}
}

func (x *ListProjectTemplatesResponse) GetTemplates() []*TemplateDef {
	if x != nil {
		return x.Templates
	}
	return nil
}

// Next available tag: 3
type GetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{4}
}

func (x *GetConfigRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 3
type GetPresentationConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *GetPresentationConfigRequest) Reset() {
	*x = GetPresentationConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPresentationConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresentationConfigRequest) ProtoMessage() {}

func (x *GetPresentationConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresentationConfigRequest.ProtoReflect.Descriptor instead.
func (*GetPresentationConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{5}
}

func (x *GetPresentationConfigRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 3
type GetCustomPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *GetCustomPermissionsRequest) Reset() {
	*x = GetCustomPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomPermissionsRequest) ProtoMessage() {}

func (x *GetCustomPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetCustomPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{6}
}

func (x *GetCustomPermissionsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 2
type GetCustomPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *GetCustomPermissionsResponse) Reset() {
	*x = GetCustomPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomPermissionsResponse) ProtoMessage() {}

func (x *GetCustomPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetCustomPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{7}
}

func (x *GetCustomPermissionsResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Next available tag: 3
type GetVisibleMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *GetVisibleMembersRequest) Reset() {
	*x = GetVisibleMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisibleMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisibleMembersRequest) ProtoMessage() {}

func (x *GetVisibleMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisibleMembersRequest.ProtoReflect.Descriptor instead.
func (*GetVisibleMembersRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{8}
}

func (x *GetVisibleMembersRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 3
type GetVisibleMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRefs  []*UserRef `protobuf:"bytes,1,rep,name=user_refs,json=userRefs,proto3" json:"user_refs,omitempty"`
	GroupRefs []*UserRef `protobuf:"bytes,2,rep,name=group_refs,json=groupRefs,proto3" json:"group_refs,omitempty"`
}

func (x *GetVisibleMembersResponse) Reset() {
	*x = GetVisibleMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisibleMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisibleMembersResponse) ProtoMessage() {}

func (x *GetVisibleMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisibleMembersResponse.ProtoReflect.Descriptor instead.
func (*GetVisibleMembersResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{9}
}

func (x *GetVisibleMembersResponse) GetUserRefs() []*UserRef {
	if x != nil {
		return x.UserRefs
	}
	return nil
}

func (x *GetVisibleMembersResponse) GetGroupRefs() []*UserRef {
	if x != nil {
		return x.GroupRefs
	}
	return nil
}

// Next available tag: 3
type GetLabelOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *GetLabelOptionsRequest) Reset() {
	*x = GetLabelOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelOptionsRequest) ProtoMessage() {}

func (x *GetLabelOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelOptionsRequest.ProtoReflect.Descriptor instead.
func (*GetLabelOptionsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{10}
}

func (x *GetLabelOptionsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 3
type GetLabelOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelOptions           []*LabelDef `protobuf:"bytes,1,rep,name=label_options,json=labelOptions,proto3" json:"label_options,omitempty"`
	ExclusiveLabelPrefixes []string    `protobuf:"bytes,2,rep,name=exclusive_label_prefixes,json=exclusiveLabelPrefixes,proto3" json:"exclusive_label_prefixes,omitempty"`
}

func (x *GetLabelOptionsResponse) Reset() {
	*x = GetLabelOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelOptionsResponse) ProtoMessage() {}

func (x *GetLabelOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelOptionsResponse.ProtoReflect.Descriptor instead.
func (*GetLabelOptionsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{11}
}

func (x *GetLabelOptionsResponse) GetLabelOptions() []*LabelDef {
	if x != nil {
		return x.LabelOptions
	}
	return nil
}

func (x *GetLabelOptionsResponse) GetExclusiveLabelPrefixes() []string {
	if x != nil {
		return x.ExclusiveLabelPrefixes
	}
	return nil
}

// Next available tag: 3
type ListStatusesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *ListStatusesRequest) Reset() {
	*x = ListStatusesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatusesRequest) ProtoMessage() {}

func (x *ListStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatusesRequest.ProtoReflect.Descriptor instead.
func (*ListStatusesRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{12}
}

func (x *ListStatusesRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 4
type ListStatusesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusDefs         []*StatusDef `protobuf:"bytes,1,rep,name=status_defs,json=statusDefs,proto3" json:"status_defs,omitempty"`
	StatusesOfferMerge []*StatusRef `protobuf:"bytes,2,rep,name=statuses_offer_merge,json=statusesOfferMerge,proto3" json:"statuses_offer_merge,omitempty"`
	RestrictToKnown    bool         `protobuf:"varint,3,opt,name=restrict_to_known,json=restrictToKnown,proto3" json:"restrict_to_known,omitempty"`
}

func (x *ListStatusesResponse) Reset() {
	*x = ListStatusesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStatusesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatusesResponse) ProtoMessage() {}

func (x *ListStatusesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatusesResponse.ProtoReflect.Descriptor instead.
func (*ListStatusesResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{13}
}

func (x *ListStatusesResponse) GetStatusDefs() []*StatusDef {
	if x != nil {
		return x.StatusDefs
	}
	return nil
}

func (x *ListStatusesResponse) GetStatusesOfferMerge() []*StatusRef {
	if x != nil {
		return x.StatusesOfferMerge
	}
	return nil
}

func (x *ListStatusesResponse) GetRestrictToKnown() bool {
	if x != nil {
		return x.RestrictToKnown
	}
	return false
}

// Next available tag: 4
type ListComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName      string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	IncludeAdminInfo bool   `protobuf:"varint,3,opt,name=include_admin_info,json=includeAdminInfo,proto3" json:"include_admin_info,omitempty"`
}

func (x *ListComponentsRequest) Reset() {
	*x = ListComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsRequest) ProtoMessage() {}

func (x *ListComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{14}
}

func (x *ListComponentsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ListComponentsRequest) GetIncludeAdminInfo() bool {
	if x != nil {
		return x.IncludeAdminInfo
	}
	return false
}

// Next available tag: 2
type ListComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentDefs []*ComponentDef `protobuf:"bytes,1,rep,name=component_defs,json=componentDefs,proto3" json:"component_defs,omitempty"`
}

func (x *ListComponentsResponse) Reset() {
	*x = ListComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsResponse) ProtoMessage() {}

func (x *ListComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{15}
}

func (x *ListComponentsResponse) GetComponentDefs() []*ComponentDef {
	if x != nil {
		return x.ComponentDefs
	}
	return nil
}

// Next available tag: 5
type ListFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName        string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	IncludeAdminInfo   bool   `protobuf:"varint,3,opt,name=include_admin_info,json=includeAdminInfo,proto3" json:"include_admin_info,omitempty"`
	IncludeUserChoices bool   `protobuf:"varint,4,opt,name=include_user_choices,json=includeUserChoices,proto3" json:"include_user_choices,omitempty"`
}

func (x *ListFieldsRequest) Reset() {
	*x = ListFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFieldsRequest) ProtoMessage() {}

func (x *ListFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFieldsRequest.ProtoReflect.Descriptor instead.
func (*ListFieldsRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{16}
}

func (x *ListFieldsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ListFieldsRequest) GetIncludeAdminInfo() bool {
	if x != nil {
		return x.IncludeAdminInfo
	}
	return false
}

func (x *ListFieldsRequest) GetIncludeUserChoices() bool {
	if x != nil {
		return x.IncludeUserChoices
	}
	return false
}

// Next available tag: 2
type ListFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldDefs []*FieldDef `protobuf:"bytes,1,rep,name=field_defs,json=fieldDefs,proto3" json:"field_defs,omitempty"`
}

func (x *ListFieldsResponse) Reset() {
	*x = ListFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFieldsResponse) ProtoMessage() {}

func (x *ListFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFieldsResponse.ProtoReflect.Descriptor instead.
func (*ListFieldsResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{17}
}

func (x *ListFieldsResponse) GetFieldDefs() []*FieldDef {
	if x != nil {
		return x.FieldDefs
	}
	return nil
}

// Next available tag: 3
type GetProjectStarCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *GetProjectStarCountRequest) Reset() {
	*x = GetProjectStarCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectStarCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectStarCountRequest) ProtoMessage() {}

func (x *GetProjectStarCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectStarCountRequest.ProtoReflect.Descriptor instead.
func (*GetProjectStarCountRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{18}
}

func (x *GetProjectStarCountRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 2
type GetProjectStarCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarCount uint32 `protobuf:"varint,1,opt,name=star_count,json=starCount,proto3" json:"star_count,omitempty"`
}

func (x *GetProjectStarCountResponse) Reset() {
	*x = GetProjectStarCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectStarCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectStarCountResponse) ProtoMessage() {}

func (x *GetProjectStarCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectStarCountResponse.ProtoReflect.Descriptor instead.
func (*GetProjectStarCountResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{19}
}

func (x *GetProjectStarCountResponse) GetStarCount() uint32 {
	if x != nil {
		return x.StarCount
	}
	return 0
}

// Next available tag: 3
type StarProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Starred     bool   `protobuf:"varint,3,opt,name=starred,proto3" json:"starred,omitempty"`
}

func (x *StarProjectRequest) Reset() {
	*x = StarProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarProjectRequest) ProtoMessage() {}

func (x *StarProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarProjectRequest.ProtoReflect.Descriptor instead.
func (*StarProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{20}
}

func (x *StarProjectRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *StarProjectRequest) GetStarred() bool {
	if x != nil {
		return x.Starred
	}
	return false
}

// Next available tag: 2
type StarProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarCount uint32 `protobuf:"varint,1,opt,name=star_count,json=starCount,proto3" json:"star_count,omitempty"`
}

func (x *StarProjectResponse) Reset() {
	*x = StarProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarProjectResponse) ProtoMessage() {}

func (x *StarProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarProjectResponse.ProtoReflect.Descriptor instead.
func (*StarProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{21}
}

func (x *StarProjectResponse) GetStarCount() uint32 {
	if x != nil {
		return x.StarCount
	}
	return 0
}

// Next available tag: 3
type CheckProjectNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *CheckProjectNameRequest) Reset() {
	*x = CheckProjectNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckProjectNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProjectNameRequest) ProtoMessage() {}

func (x *CheckProjectNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProjectNameRequest.ProtoReflect.Descriptor instead.
func (*CheckProjectNameRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{22}
}

func (x *CheckProjectNameRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// Next available tag: 1
type CheckProjectNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CheckProjectNameResponse) Reset() {
	*x = CheckProjectNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckProjectNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProjectNameResponse) ProtoMessage() {}

func (x *CheckProjectNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProjectNameResponse.ProtoReflect.Descriptor instead.
func (*CheckProjectNameResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{23}
}

func (x *CheckProjectNameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Next available tag: 5
type CheckComponentNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	ParentPath    string `protobuf:"bytes,3,opt,name=parent_path,json=parentPath,proto3" json:"parent_path,omitempty"`
	ComponentName string `protobuf:"bytes,4,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
}

func (x *CheckComponentNameRequest) Reset() {
	*x = CheckComponentNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckComponentNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckComponentNameRequest) ProtoMessage() {}

func (x *CheckComponentNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckComponentNameRequest.ProtoReflect.Descriptor instead.
func (*CheckComponentNameRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{24}
}

func (x *CheckComponentNameRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CheckComponentNameRequest) GetParentPath() string {
	if x != nil {
		return x.ParentPath
	}
	return ""
}

func (x *CheckComponentNameRequest) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

// Next available tag: 2
type CheckComponentNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CheckComponentNameResponse) Reset() {
	*x = CheckComponentNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckComponentNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckComponentNameResponse) ProtoMessage() {}

func (x *CheckComponentNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckComponentNameResponse.ProtoReflect.Descriptor instead.
func (*CheckComponentNameResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{25}
}

func (x *CheckComponentNameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Next available tag: 4
type CheckFieldNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	FieldName   string `protobuf:"bytes,3,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
}

func (x *CheckFieldNameRequest) Reset() {
	*x = CheckFieldNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFieldNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFieldNameRequest) ProtoMessage() {}

func (x *CheckFieldNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFieldNameRequest.ProtoReflect.Descriptor instead.
func (*CheckFieldNameRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{26}
}

func (x *CheckFieldNameRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CheckFieldNameRequest) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

// Next available tag: 2
type CheckFieldNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CheckFieldNameResponse) Reset() {
	*x = CheckFieldNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_projects_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFieldNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFieldNameResponse) ProtoMessage() {}

func (x *CheckFieldNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_projects_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFieldNameResponse.ProtoReflect.Descriptor instead.
func (*CheckFieldNameResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_projects_proto_rawDescGZIP(), []int{27}
}

func (x *CheckFieldNameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_api_api_proto_projects_proto protoreflect.FileDescriptor

var file_api_api_proto_projects_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x40, 0x0a, 0x1b, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x35, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x3d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x7d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x73, 0x12, 0x30, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x66, 0x73, 0x22, 0x3b,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44,
	0x65, 0x66, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x38, 0x0a, 0x18, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x16, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x66, 0x73, 0x12, 0x45, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x5f,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x66, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54,
	0x6f, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x22, 0x68, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x57, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x73, 0x22, 0x3f, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x22, 0x34, 0x0a,
	0x13, 0x53, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x30, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x1a,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x59, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xc3, 0x0a, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1a, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x00,
	0x12, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x29, 0x5a, 0x27, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_api_proto_projects_proto_rawDescOnce sync.Once
	file_api_api_proto_projects_proto_rawDescData = file_api_api_proto_projects_proto_rawDesc
)

func file_api_api_proto_projects_proto_rawDescGZIP() []byte {
	file_api_api_proto_projects_proto_rawDescOnce.Do(func() {
		file_api_api_proto_projects_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_api_proto_projects_proto_rawDescData)
	})
	return file_api_api_proto_projects_proto_rawDescData
}

var file_api_api_proto_projects_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_api_api_proto_projects_proto_goTypes = []interface{}{
	(*ListProjectsRequest)(nil),          // 0: monorail.ListProjectsRequest
	(*ListProjectsResponse)(nil),         // 1: monorail.ListProjectsResponse
	(*ListProjectTemplatesRequest)(nil),  // 2: monorail.ListProjectTemplatesRequest
	(*ListProjectTemplatesResponse)(nil), // 3: monorail.ListProjectTemplatesResponse
	(*GetConfigRequest)(nil),             // 4: monorail.GetConfigRequest
	(*GetPresentationConfigRequest)(nil), // 5: monorail.GetPresentationConfigRequest
	(*GetCustomPermissionsRequest)(nil),  // 6: monorail.GetCustomPermissionsRequest
	(*GetCustomPermissionsResponse)(nil), // 7: monorail.GetCustomPermissionsResponse
	(*GetVisibleMembersRequest)(nil),     // 8: monorail.GetVisibleMembersRequest
	(*GetVisibleMembersResponse)(nil),    // 9: monorail.GetVisibleMembersResponse
	(*GetLabelOptionsRequest)(nil),       // 10: monorail.GetLabelOptionsRequest
	(*GetLabelOptionsResponse)(nil),      // 11: monorail.GetLabelOptionsResponse
	(*ListStatusesRequest)(nil),          // 12: monorail.ListStatusesRequest
	(*ListStatusesResponse)(nil),         // 13: monorail.ListStatusesResponse
	(*ListComponentsRequest)(nil),        // 14: monorail.ListComponentsRequest
	(*ListComponentsResponse)(nil),       // 15: monorail.ListComponentsResponse
	(*ListFieldsRequest)(nil),            // 16: monorail.ListFieldsRequest
	(*ListFieldsResponse)(nil),           // 17: monorail.ListFieldsResponse
	(*GetProjectStarCountRequest)(nil),   // 18: monorail.GetProjectStarCountRequest
	(*GetProjectStarCountResponse)(nil),  // 19: monorail.GetProjectStarCountResponse
	(*StarProjectRequest)(nil),           // 20: monorail.StarProjectRequest
	(*StarProjectResponse)(nil),          // 21: monorail.StarProjectResponse
	(*CheckProjectNameRequest)(nil),      // 22: monorail.CheckProjectNameRequest
	(*CheckProjectNameResponse)(nil),     // 23: monorail.CheckProjectNameResponse
	(*CheckComponentNameRequest)(nil),    // 24: monorail.CheckComponentNameRequest
	(*CheckComponentNameResponse)(nil),   // 25: monorail.CheckComponentNameResponse
	(*CheckFieldNameRequest)(nil),        // 26: monorail.CheckFieldNameRequest
	(*CheckFieldNameResponse)(nil),       // 27: monorail.CheckFieldNameResponse
	(*Project)(nil),                      // 28: monorail.Project
	(*TemplateDef)(nil),                  // 29: monorail.TemplateDef
	(*UserRef)(nil),                      // 30: monorail.UserRef
	(*LabelDef)(nil),                     // 31: monorail.LabelDef
	(*StatusDef)(nil),                    // 32: monorail.StatusDef
	(*StatusRef)(nil),                    // 33: monorail.StatusRef
	(*ComponentDef)(nil),                 // 34: monorail.ComponentDef
	(*FieldDef)(nil),                     // 35: monorail.FieldDef
	(*Config)(nil),                       // 36: monorail.Config
	(*PresentationConfig)(nil),           // 37: monorail.PresentationConfig
}
var file_api_api_proto_projects_proto_depIdxs = []int32{
	28, // 0: monorail.ListProjectsResponse.projects:type_name -> monorail.Project
	29, // 1: monorail.ListProjectTemplatesResponse.templates:type_name -> monorail.TemplateDef
	30, // 2: monorail.GetVisibleMembersResponse.user_refs:type_name -> monorail.UserRef
	30, // 3: monorail.GetVisibleMembersResponse.group_refs:type_name -> monorail.UserRef
	31, // 4: monorail.GetLabelOptionsResponse.label_options:type_name -> monorail.LabelDef
	32, // 5: monorail.ListStatusesResponse.status_defs:type_name -> monorail.StatusDef
	33, // 6: monorail.ListStatusesResponse.statuses_offer_merge:type_name -> monorail.StatusRef
	34, // 7: monorail.ListComponentsResponse.component_defs:type_name -> monorail.ComponentDef
	35, // 8: monorail.ListFieldsResponse.field_defs:type_name -> monorail.FieldDef
	0,  // 9: monorail.Projects.ListProjects:input_type -> monorail.ListProjectsRequest
	2,  // 10: monorail.Projects.ListProjectTemplates:input_type -> monorail.ListProjectTemplatesRequest
	4,  // 11: monorail.Projects.GetConfig:input_type -> monorail.GetConfigRequest
	5,  // 12: monorail.Projects.GetPresentationConfig:input_type -> monorail.GetPresentationConfigRequest
	6,  // 13: monorail.Projects.GetCustomPermissions:input_type -> monorail.GetCustomPermissionsRequest
	8,  // 14: monorail.Projects.GetVisibleMembers:input_type -> monorail.GetVisibleMembersRequest
	10, // 15: monorail.Projects.GetLabelOptions:input_type -> monorail.GetLabelOptionsRequest
	12, // 16: monorail.Projects.ListStatuses:input_type -> monorail.ListStatusesRequest
	14, // 17: monorail.Projects.ListComponents:input_type -> monorail.ListComponentsRequest
	16, // 18: monorail.Projects.ListFields:input_type -> monorail.ListFieldsRequest
	18, // 19: monorail.Projects.GetProjectStarCount:input_type -> monorail.GetProjectStarCountRequest
	20, // 20: monorail.Projects.StarProject:input_type -> monorail.StarProjectRequest
	22, // 21: monorail.Projects.CheckProjectName:input_type -> monorail.CheckProjectNameRequest
	24, // 22: monorail.Projects.CheckComponentName:input_type -> monorail.CheckComponentNameRequest
	26, // 23: monorail.Projects.CheckFieldName:input_type -> monorail.CheckFieldNameRequest
	1,  // 24: monorail.Projects.ListProjects:output_type -> monorail.ListProjectsResponse
	3,  // 25: monorail.Projects.ListProjectTemplates:output_type -> monorail.ListProjectTemplatesResponse
	36, // 26: monorail.Projects.GetConfig:output_type -> monorail.Config
	37, // 27: monorail.Projects.GetPresentationConfig:output_type -> monorail.PresentationConfig
	7,  // 28: monorail.Projects.GetCustomPermissions:output_type -> monorail.GetCustomPermissionsResponse
	9,  // 29: monorail.Projects.GetVisibleMembers:output_type -> monorail.GetVisibleMembersResponse
	11, // 30: monorail.Projects.GetLabelOptions:output_type -> monorail.GetLabelOptionsResponse
	13, // 31: monorail.Projects.ListStatuses:output_type -> monorail.ListStatusesResponse
	15, // 32: monorail.Projects.ListComponents:output_type -> monorail.ListComponentsResponse
	17, // 33: monorail.Projects.ListFields:output_type -> monorail.ListFieldsResponse
	19, // 34: monorail.Projects.GetProjectStarCount:output_type -> monorail.GetProjectStarCountResponse
	21, // 35: monorail.Projects.StarProject:output_type -> monorail.StarProjectResponse
	23, // 36: monorail.Projects.CheckProjectName:output_type -> monorail.CheckProjectNameResponse
	25, // 37: monorail.Projects.CheckComponentName:output_type -> monorail.CheckComponentNameResponse
	27, // 38: monorail.Projects.CheckFieldName:output_type -> monorail.CheckFieldNameResponse
	24, // [24:39] is the sub-list for method output_type
	9,  // [9:24] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_api_proto_projects_proto_init() }
func file_api_api_proto_projects_proto_init() {
	if File_api_api_proto_projects_proto != nil {
		return
	}
	file_api_api_proto_common_proto_init()
	file_api_api_proto_project_objects_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_api_proto_projects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPresentationConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisibleMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisibleMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStatusesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStatusesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectStarCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectStarCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckProjectNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckProjectNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckComponentNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckComponentNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFieldNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_projects_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFieldNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_api_proto_projects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_api_proto_projects_proto_goTypes,
		DependencyIndexes: file_api_api_proto_projects_proto_depIdxs,
		MessageInfos:      file_api_api_proto_projects_proto_msgTypes,
	}.Build()
	File_api_api_proto_projects_proto = out.File
	file_api_api_proto_projects_proto_rawDesc = nil
	file_api_api_proto_projects_proto_goTypes = nil
	file_api_api_proto_projects_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProjectsClient is the client API for Projects service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectsClient interface {
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	ListProjectTemplates(ctx context.Context, in *ListProjectTemplatesRequest, opts ...grpc.CallOption) (*ListProjectTemplatesResponse, error)
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*Config, error)
	GetPresentationConfig(ctx context.Context, in *GetPresentationConfigRequest, opts ...grpc.CallOption) (*PresentationConfig, error)
	GetCustomPermissions(ctx context.Context, in *GetCustomPermissionsRequest, opts ...grpc.CallOption) (*GetCustomPermissionsResponse, error)
	GetVisibleMembers(ctx context.Context, in *GetVisibleMembersRequest, opts ...grpc.CallOption) (*GetVisibleMembersResponse, error)
	GetLabelOptions(ctx context.Context, in *GetLabelOptionsRequest, opts ...grpc.CallOption) (*GetLabelOptionsResponse, error)
	ListStatuses(ctx context.Context, in *ListStatusesRequest, opts ...grpc.CallOption) (*ListStatusesResponse, error)
	ListComponents(ctx context.Context, in *ListComponentsRequest, opts ...grpc.CallOption) (*ListComponentsResponse, error)
	ListFields(ctx context.Context, in *ListFieldsRequest, opts ...grpc.CallOption) (*ListFieldsResponse, error)
	GetProjectStarCount(ctx context.Context, in *GetProjectStarCountRequest, opts ...grpc.CallOption) (*GetProjectStarCountResponse, error)
	StarProject(ctx context.Context, in *StarProjectRequest, opts ...grpc.CallOption) (*StarProjectResponse, error)
	CheckProjectName(ctx context.Context, in *CheckProjectNameRequest, opts ...grpc.CallOption) (*CheckProjectNameResponse, error)
	CheckComponentName(ctx context.Context, in *CheckComponentNameRequest, opts ...grpc.CallOption) (*CheckComponentNameResponse, error)
	CheckFieldName(ctx context.Context, in *CheckFieldNameRequest, opts ...grpc.CallOption) (*CheckFieldNameResponse, error)
}
type projectsPRPCClient struct {
	client *prpc.Client
}

func NewProjectsPRPCClient(client *prpc.Client) ProjectsClient {
	return &projectsPRPCClient{client}
}

func (c *projectsPRPCClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.client.Call(ctx, "monorail.Projects", "ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) ListProjectTemplates(ctx context.Context, in *ListProjectTemplatesRequest, opts ...grpc.CallOption) (*ListProjectTemplatesResponse, error) {
	out := new(ListProjectTemplatesResponse)
	err := c.client.Call(ctx, "monorail.Projects", "ListProjectTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.client.Call(ctx, "monorail.Projects", "GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) GetPresentationConfig(ctx context.Context, in *GetPresentationConfigRequest, opts ...grpc.CallOption) (*PresentationConfig, error) {
	out := new(PresentationConfig)
	err := c.client.Call(ctx, "monorail.Projects", "GetPresentationConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) GetCustomPermissions(ctx context.Context, in *GetCustomPermissionsRequest, opts ...grpc.CallOption) (*GetCustomPermissionsResponse, error) {
	out := new(GetCustomPermissionsResponse)
	err := c.client.Call(ctx, "monorail.Projects", "GetCustomPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) GetVisibleMembers(ctx context.Context, in *GetVisibleMembersRequest, opts ...grpc.CallOption) (*GetVisibleMembersResponse, error) {
	out := new(GetVisibleMembersResponse)
	err := c.client.Call(ctx, "monorail.Projects", "GetVisibleMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) GetLabelOptions(ctx context.Context, in *GetLabelOptionsRequest, opts ...grpc.CallOption) (*GetLabelOptionsResponse, error) {
	out := new(GetLabelOptionsResponse)
	err := c.client.Call(ctx, "monorail.Projects", "GetLabelOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) ListStatuses(ctx context.Context, in *ListStatusesRequest, opts ...grpc.CallOption) (*ListStatusesResponse, error) {
	out := new(ListStatusesResponse)
	err := c.client.Call(ctx, "monorail.Projects", "ListStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) ListComponents(ctx context.Context, in *ListComponentsRequest, opts ...grpc.CallOption) (*ListComponentsResponse, error) {
	out := new(ListComponentsResponse)
	err := c.client.Call(ctx, "monorail.Projects", "ListComponents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) ListFields(ctx context.Context, in *ListFieldsRequest, opts ...grpc.CallOption) (*ListFieldsResponse, error) {
	out := new(ListFieldsResponse)
	err := c.client.Call(ctx, "monorail.Projects", "ListFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) GetProjectStarCount(ctx context.Context, in *GetProjectStarCountRequest, opts ...grpc.CallOption) (*GetProjectStarCountResponse, error) {
	out := new(GetProjectStarCountResponse)
	err := c.client.Call(ctx, "monorail.Projects", "GetProjectStarCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) StarProject(ctx context.Context, in *StarProjectRequest, opts ...grpc.CallOption) (*StarProjectResponse, error) {
	out := new(StarProjectResponse)
	err := c.client.Call(ctx, "monorail.Projects", "StarProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) CheckProjectName(ctx context.Context, in *CheckProjectNameRequest, opts ...grpc.CallOption) (*CheckProjectNameResponse, error) {
	out := new(CheckProjectNameResponse)
	err := c.client.Call(ctx, "monorail.Projects", "CheckProjectName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) CheckComponentName(ctx context.Context, in *CheckComponentNameRequest, opts ...grpc.CallOption) (*CheckComponentNameResponse, error) {
	out := new(CheckComponentNameResponse)
	err := c.client.Call(ctx, "monorail.Projects", "CheckComponentName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) CheckFieldName(ctx context.Context, in *CheckFieldNameRequest, opts ...grpc.CallOption) (*CheckFieldNameResponse, error) {
	out := new(CheckFieldNameResponse)
	err := c.client.Call(ctx, "monorail.Projects", "CheckFieldName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type projectsClient struct {
	cc grpc.ClientConnInterface
}

func NewProjectsClient(cc grpc.ClientConnInterface) ProjectsClient {
	return &projectsClient{cc}
}

func (c *projectsClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) ListProjectTemplates(ctx context.Context, in *ListProjectTemplatesRequest, opts ...grpc.CallOption) (*ListProjectTemplatesResponse, error) {
	out := new(ListProjectTemplatesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/ListProjectTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/monorail.Projects/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) GetPresentationConfig(ctx context.Context, in *GetPresentationConfigRequest, opts ...grpc.CallOption) (*PresentationConfig, error) {
	out := new(PresentationConfig)
	err := c.cc.Invoke(ctx, "/monorail.Projects/GetPresentationConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) GetCustomPermissions(ctx context.Context, in *GetCustomPermissionsRequest, opts ...grpc.CallOption) (*GetCustomPermissionsResponse, error) {
	out := new(GetCustomPermissionsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/GetCustomPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) GetVisibleMembers(ctx context.Context, in *GetVisibleMembersRequest, opts ...grpc.CallOption) (*GetVisibleMembersResponse, error) {
	out := new(GetVisibleMembersResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/GetVisibleMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) GetLabelOptions(ctx context.Context, in *GetLabelOptionsRequest, opts ...grpc.CallOption) (*GetLabelOptionsResponse, error) {
	out := new(GetLabelOptionsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/GetLabelOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) ListStatuses(ctx context.Context, in *ListStatusesRequest, opts ...grpc.CallOption) (*ListStatusesResponse, error) {
	out := new(ListStatusesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/ListStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) ListComponents(ctx context.Context, in *ListComponentsRequest, opts ...grpc.CallOption) (*ListComponentsResponse, error) {
	out := new(ListComponentsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/ListComponents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) ListFields(ctx context.Context, in *ListFieldsRequest, opts ...grpc.CallOption) (*ListFieldsResponse, error) {
	out := new(ListFieldsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/ListFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) GetProjectStarCount(ctx context.Context, in *GetProjectStarCountRequest, opts ...grpc.CallOption) (*GetProjectStarCountResponse, error) {
	out := new(GetProjectStarCountResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/GetProjectStarCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) StarProject(ctx context.Context, in *StarProjectRequest, opts ...grpc.CallOption) (*StarProjectResponse, error) {
	out := new(StarProjectResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/StarProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) CheckProjectName(ctx context.Context, in *CheckProjectNameRequest, opts ...grpc.CallOption) (*CheckProjectNameResponse, error) {
	out := new(CheckProjectNameResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/CheckProjectName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) CheckComponentName(ctx context.Context, in *CheckComponentNameRequest, opts ...grpc.CallOption) (*CheckComponentNameResponse, error) {
	out := new(CheckComponentNameResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/CheckComponentName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) CheckFieldName(ctx context.Context, in *CheckFieldNameRequest, opts ...grpc.CallOption) (*CheckFieldNameResponse, error) {
	out := new(CheckFieldNameResponse)
	err := c.cc.Invoke(ctx, "/monorail.Projects/CheckFieldName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectsServer is the server API for Projects service.
type ProjectsServer interface {
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	ListProjectTemplates(context.Context, *ListProjectTemplatesRequest) (*ListProjectTemplatesResponse, error)
	GetConfig(context.Context, *GetConfigRequest) (*Config, error)
	GetPresentationConfig(context.Context, *GetPresentationConfigRequest) (*PresentationConfig, error)
	GetCustomPermissions(context.Context, *GetCustomPermissionsRequest) (*GetCustomPermissionsResponse, error)
	GetVisibleMembers(context.Context, *GetVisibleMembersRequest) (*GetVisibleMembersResponse, error)
	GetLabelOptions(context.Context, *GetLabelOptionsRequest) (*GetLabelOptionsResponse, error)
	ListStatuses(context.Context, *ListStatusesRequest) (*ListStatusesResponse, error)
	ListComponents(context.Context, *ListComponentsRequest) (*ListComponentsResponse, error)
	ListFields(context.Context, *ListFieldsRequest) (*ListFieldsResponse, error)
	GetProjectStarCount(context.Context, *GetProjectStarCountRequest) (*GetProjectStarCountResponse, error)
	StarProject(context.Context, *StarProjectRequest) (*StarProjectResponse, error)
	CheckProjectName(context.Context, *CheckProjectNameRequest) (*CheckProjectNameResponse, error)
	CheckComponentName(context.Context, *CheckComponentNameRequest) (*CheckComponentNameResponse, error)
	CheckFieldName(context.Context, *CheckFieldNameRequest) (*CheckFieldNameResponse, error)
}

// UnimplementedProjectsServer can be embedded to have forward compatible implementations.
type UnimplementedProjectsServer struct {
}

func (*UnimplementedProjectsServer) ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (*UnimplementedProjectsServer) ListProjectTemplates(context.Context, *ListProjectTemplatesRequest) (*ListProjectTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjectTemplates not implemented")
}
func (*UnimplementedProjectsServer) GetConfig(context.Context, *GetConfigRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedProjectsServer) GetPresentationConfig(context.Context, *GetPresentationConfigRequest) (*PresentationConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPresentationConfig not implemented")
}
func (*UnimplementedProjectsServer) GetCustomPermissions(context.Context, *GetCustomPermissionsRequest) (*GetCustomPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomPermissions not implemented")
}
func (*UnimplementedProjectsServer) GetVisibleMembers(context.Context, *GetVisibleMembersRequest) (*GetVisibleMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVisibleMembers not implemented")
}
func (*UnimplementedProjectsServer) GetLabelOptions(context.Context, *GetLabelOptionsRequest) (*GetLabelOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLabelOptions not implemented")
}
func (*UnimplementedProjectsServer) ListStatuses(context.Context, *ListStatusesRequest) (*ListStatusesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStatuses not implemented")
}
func (*UnimplementedProjectsServer) ListComponents(context.Context, *ListComponentsRequest) (*ListComponentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListComponents not implemented")
}
func (*UnimplementedProjectsServer) ListFields(context.Context, *ListFieldsRequest) (*ListFieldsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFields not implemented")
}
func (*UnimplementedProjectsServer) GetProjectStarCount(context.Context, *GetProjectStarCountRequest) (*GetProjectStarCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectStarCount not implemented")
}
func (*UnimplementedProjectsServer) StarProject(context.Context, *StarProjectRequest) (*StarProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StarProject not implemented")
}
func (*UnimplementedProjectsServer) CheckProjectName(context.Context, *CheckProjectNameRequest) (*CheckProjectNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckProjectName not implemented")
}
func (*UnimplementedProjectsServer) CheckComponentName(context.Context, *CheckComponentNameRequest) (*CheckComponentNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckComponentName not implemented")
}
func (*UnimplementedProjectsServer) CheckFieldName(context.Context, *CheckFieldNameRequest) (*CheckFieldNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckFieldName not implemented")
}

func RegisterProjectsServer(s prpc.Registrar, srv ProjectsServer) {
	s.RegisterService(&_Projects_serviceDesc, srv)
}

func _Projects_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_ListProjectTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).ListProjectTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/ListProjectTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).ListProjectTemplates(ctx, req.(*ListProjectTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_GetPresentationConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPresentationConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetPresentationConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/GetPresentationConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetPresentationConfig(ctx, req.(*GetPresentationConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_GetCustomPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetCustomPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/GetCustomPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetCustomPermissions(ctx, req.(*GetCustomPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_GetVisibleMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVisibleMembersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetVisibleMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/GetVisibleMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetVisibleMembers(ctx, req.(*GetVisibleMembersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_GetLabelOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLabelOptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetLabelOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/GetLabelOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetLabelOptions(ctx, req.(*GetLabelOptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_ListStatuses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStatusesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).ListStatuses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/ListStatuses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).ListStatuses(ctx, req.(*ListStatusesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_ListComponents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListComponentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).ListComponents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/ListComponents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).ListComponents(ctx, req.(*ListComponentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_ListFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFieldsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).ListFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/ListFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).ListFields(ctx, req.(*ListFieldsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_GetProjectStarCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectStarCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetProjectStarCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/GetProjectStarCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetProjectStarCount(ctx, req.(*GetProjectStarCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_StarProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StarProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).StarProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/StarProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).StarProject(ctx, req.(*StarProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_CheckProjectName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckProjectNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).CheckProjectName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/CheckProjectName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).CheckProjectName(ctx, req.(*CheckProjectNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_CheckComponentName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckComponentNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).CheckComponentName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/CheckComponentName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).CheckComponentName(ctx, req.(*CheckComponentNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_CheckFieldName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckFieldNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).CheckFieldName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Projects/CheckFieldName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).CheckFieldName(ctx, req.(*CheckFieldNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Projects_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monorail.Projects",
	HandlerType: (*ProjectsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListProjects",
			Handler:    _Projects_ListProjects_Handler,
		},
		{
			MethodName: "ListProjectTemplates",
			Handler:    _Projects_ListProjectTemplates_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _Projects_GetConfig_Handler,
		},
		{
			MethodName: "GetPresentationConfig",
			Handler:    _Projects_GetPresentationConfig_Handler,
		},
		{
			MethodName: "GetCustomPermissions",
			Handler:    _Projects_GetCustomPermissions_Handler,
		},
		{
			MethodName: "GetVisibleMembers",
			Handler:    _Projects_GetVisibleMembers_Handler,
		},
		{
			MethodName: "GetLabelOptions",
			Handler:    _Projects_GetLabelOptions_Handler,
		},
		{
			MethodName: "ListStatuses",
			Handler:    _Projects_ListStatuses_Handler,
		},
		{
			MethodName: "ListComponents",
			Handler:    _Projects_ListComponents_Handler,
		},
		{
			MethodName: "ListFields",
			Handler:    _Projects_ListFields_Handler,
		},
		{
			MethodName: "GetProjectStarCount",
			Handler:    _Projects_GetProjectStarCount_Handler,
		},
		{
			MethodName: "StarProject",
			Handler:    _Projects_StarProject_Handler,
		},
		{
			MethodName: "CheckProjectName",
			Handler:    _Projects_CheckProjectName_Handler,
		},
		{
			MethodName: "CheckComponentName",
			Handler:    _Projects_CheckComponentName_Handler,
		},
		{
			MethodName: "CheckFieldName",
			Handler:    _Projects_CheckFieldName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api_proto/projects.proto",
}
