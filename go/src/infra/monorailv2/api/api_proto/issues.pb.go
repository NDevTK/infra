// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api_proto/issues.proto

package monorail

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Next available tag: 4
type CreateIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	ProjectName          string        `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Issue                *Issue        `protobuf:"bytes,3,opt,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateIssueRequest) Reset()         { *m = CreateIssueRequest{} }
func (m *CreateIssueRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIssueRequest) ProtoMessage()    {}
func (*CreateIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{0}
}

func (m *CreateIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIssueRequest.Unmarshal(m, b)
}
func (m *CreateIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIssueRequest.Marshal(b, m, deterministic)
}
func (m *CreateIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIssueRequest.Merge(m, src)
}
func (m *CreateIssueRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIssueRequest.Size(m)
}
func (m *CreateIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIssueRequest proto.InternalMessageInfo

func (m *CreateIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *CreateIssueRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *CreateIssueRequest) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

// Next available tag: 3
type GetIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetIssueRequest) Reset()         { *m = GetIssueRequest{} }
func (m *GetIssueRequest) String() string { return proto.CompactTextString(m) }
func (*GetIssueRequest) ProtoMessage()    {}
func (*GetIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{1}
}

func (m *GetIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIssueRequest.Unmarshal(m, b)
}
func (m *GetIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIssueRequest.Marshal(b, m, deterministic)
}
func (m *GetIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIssueRequest.Merge(m, src)
}
func (m *GetIssueRequest) XXX_Size() int {
	return xxx_messageInfo_GetIssueRequest.Size(m)
}
func (m *GetIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIssueRequest proto.InternalMessageInfo

func (m *GetIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *GetIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

// Next available tag: 2
type IssueResponse struct {
	Issue                *Issue   `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueResponse) Reset()         { *m = IssueResponse{} }
func (m *IssueResponse) String() string { return proto.CompactTextString(m) }
func (*IssueResponse) ProtoMessage()    {}
func (*IssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{2}
}

func (m *IssueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueResponse.Unmarshal(m, b)
}
func (m *IssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueResponse.Marshal(b, m, deterministic)
}
func (m *IssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueResponse.Merge(m, src)
}
func (m *IssueResponse) XXX_Size() int {
	return xxx_messageInfo_IssueResponse.Size(m)
}
func (m *IssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IssueResponse proto.InternalMessageInfo

func (m *IssueResponse) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

// Next available tag: 8
type ListIssuesRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	Query                string        `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	CannedQuery          uint32        `protobuf:"varint,3,opt,name=canned_query,json=cannedQuery,proto3" json:"canned_query,omitempty"`
	ProjectNames         []string      `protobuf:"bytes,4,rep,name=project_names,json=projectNames,proto3" json:"project_names,omitempty"`
	Pagination           *Pagination   `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
	GroupBySpec          string        `protobuf:"bytes,6,opt,name=group_by_spec,json=groupBySpec,proto3" json:"group_by_spec,omitempty"`
	SortSpec             string        `protobuf:"bytes,7,opt,name=sort_spec,json=sortSpec,proto3" json:"sort_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListIssuesRequest) Reset()         { *m = ListIssuesRequest{} }
func (m *ListIssuesRequest) String() string { return proto.CompactTextString(m) }
func (*ListIssuesRequest) ProtoMessage()    {}
func (*ListIssuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{3}
}

func (m *ListIssuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssuesRequest.Unmarshal(m, b)
}
func (m *ListIssuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssuesRequest.Marshal(b, m, deterministic)
}
func (m *ListIssuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssuesRequest.Merge(m, src)
}
func (m *ListIssuesRequest) XXX_Size() int {
	return xxx_messageInfo_ListIssuesRequest.Size(m)
}
func (m *ListIssuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssuesRequest proto.InternalMessageInfo

func (m *ListIssuesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListIssuesRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ListIssuesRequest) GetCannedQuery() uint32 {
	if m != nil {
		return m.CannedQuery
	}
	return 0
}

func (m *ListIssuesRequest) GetProjectNames() []string {
	if m != nil {
		return m.ProjectNames
	}
	return nil
}

func (m *ListIssuesRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListIssuesRequest) GetGroupBySpec() string {
	if m != nil {
		return m.GroupBySpec
	}
	return ""
}

func (m *ListIssuesRequest) GetSortSpec() string {
	if m != nil {
		return m.SortSpec
	}
	return ""
}

// Next available tag: 3
type ListIssuesResponse struct {
	Issues               []*Issue `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
	TotalResults         uint32   `protobuf:"varint,2,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIssuesResponse) Reset()         { *m = ListIssuesResponse{} }
func (m *ListIssuesResponse) String() string { return proto.CompactTextString(m) }
func (*ListIssuesResponse) ProtoMessage()    {}
func (*ListIssuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{4}
}

func (m *ListIssuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssuesResponse.Unmarshal(m, b)
}
func (m *ListIssuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssuesResponse.Marshal(b, m, deterministic)
}
func (m *ListIssuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssuesResponse.Merge(m, src)
}
func (m *ListIssuesResponse) XXX_Size() int {
	return xxx_messageInfo_ListIssuesResponse.Size(m)
}
func (m *ListIssuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssuesResponse proto.InternalMessageInfo

func (m *ListIssuesResponse) GetIssues() []*Issue {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *ListIssuesResponse) GetTotalResults() uint32 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

// Next available tag: 3
type ListReferencedIssuesRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRefs            []*IssueRef   `protobuf:"bytes,2,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListReferencedIssuesRequest) Reset()         { *m = ListReferencedIssuesRequest{} }
func (m *ListReferencedIssuesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReferencedIssuesRequest) ProtoMessage()    {}
func (*ListReferencedIssuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{5}
}

func (m *ListReferencedIssuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReferencedIssuesRequest.Unmarshal(m, b)
}
func (m *ListReferencedIssuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReferencedIssuesRequest.Marshal(b, m, deterministic)
}
func (m *ListReferencedIssuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReferencedIssuesRequest.Merge(m, src)
}
func (m *ListReferencedIssuesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReferencedIssuesRequest.Size(m)
}
func (m *ListReferencedIssuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReferencedIssuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReferencedIssuesRequest proto.InternalMessageInfo

func (m *ListReferencedIssuesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListReferencedIssuesRequest) GetIssueRefs() []*IssueRef {
	if m != nil {
		return m.IssueRefs
	}
	return nil
}

// Next available tag: 2
type ListReferencedIssuesResponse struct {
	// TODO(ehmaldonado): monorail:4033 Rename these fields to issues rather than
	// refs.
	OpenRefs             []*Issue `protobuf:"bytes,1,rep,name=open_refs,json=openRefs,proto3" json:"open_refs,omitempty"`
	ClosedRefs           []*Issue `protobuf:"bytes,2,rep,name=closed_refs,json=closedRefs,proto3" json:"closed_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReferencedIssuesResponse) Reset()         { *m = ListReferencedIssuesResponse{} }
func (m *ListReferencedIssuesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReferencedIssuesResponse) ProtoMessage()    {}
func (*ListReferencedIssuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{6}
}

func (m *ListReferencedIssuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReferencedIssuesResponse.Unmarshal(m, b)
}
func (m *ListReferencedIssuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReferencedIssuesResponse.Marshal(b, m, deterministic)
}
func (m *ListReferencedIssuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReferencedIssuesResponse.Merge(m, src)
}
func (m *ListReferencedIssuesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReferencedIssuesResponse.Size(m)
}
func (m *ListReferencedIssuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReferencedIssuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReferencedIssuesResponse proto.InternalMessageInfo

func (m *ListReferencedIssuesResponse) GetOpenRefs() []*Issue {
	if m != nil {
		return m.OpenRefs
	}
	return nil
}

func (m *ListReferencedIssuesResponse) GetClosedRefs() []*Issue {
	if m != nil {
		return m.ClosedRefs
	}
	return nil
}

// Next available tag: 3
type ListApplicableFieldDefsRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRefs            []*IssueRef   `protobuf:"bytes,2,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListApplicableFieldDefsRequest) Reset()         { *m = ListApplicableFieldDefsRequest{} }
func (m *ListApplicableFieldDefsRequest) String() string { return proto.CompactTextString(m) }
func (*ListApplicableFieldDefsRequest) ProtoMessage()    {}
func (*ListApplicableFieldDefsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{7}
}

func (m *ListApplicableFieldDefsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListApplicableFieldDefsRequest.Unmarshal(m, b)
}
func (m *ListApplicableFieldDefsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListApplicableFieldDefsRequest.Marshal(b, m, deterministic)
}
func (m *ListApplicableFieldDefsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListApplicableFieldDefsRequest.Merge(m, src)
}
func (m *ListApplicableFieldDefsRequest) XXX_Size() int {
	return xxx_messageInfo_ListApplicableFieldDefsRequest.Size(m)
}
func (m *ListApplicableFieldDefsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListApplicableFieldDefsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListApplicableFieldDefsRequest proto.InternalMessageInfo

func (m *ListApplicableFieldDefsRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListApplicableFieldDefsRequest) GetIssueRefs() []*IssueRef {
	if m != nil {
		return m.IssueRefs
	}
	return nil
}

// Next available tag: 2
type ListApplicableFieldDefsResponse struct {
	FieldDefs            []*FieldDef `protobuf:"bytes,1,rep,name=field_defs,json=fieldDefs,proto3" json:"field_defs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListApplicableFieldDefsResponse) Reset()         { *m = ListApplicableFieldDefsResponse{} }
func (m *ListApplicableFieldDefsResponse) String() string { return proto.CompactTextString(m) }
func (*ListApplicableFieldDefsResponse) ProtoMessage()    {}
func (*ListApplicableFieldDefsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{8}
}

func (m *ListApplicableFieldDefsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListApplicableFieldDefsResponse.Unmarshal(m, b)
}
func (m *ListApplicableFieldDefsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListApplicableFieldDefsResponse.Marshal(b, m, deterministic)
}
func (m *ListApplicableFieldDefsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListApplicableFieldDefsResponse.Merge(m, src)
}
func (m *ListApplicableFieldDefsResponse) XXX_Size() int {
	return xxx_messageInfo_ListApplicableFieldDefsResponse.Size(m)
}
func (m *ListApplicableFieldDefsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListApplicableFieldDefsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListApplicableFieldDefsResponse proto.InternalMessageInfo

func (m *ListApplicableFieldDefsResponse) GetFieldDefs() []*FieldDef {
	if m != nil {
		return m.FieldDefs
	}
	return nil
}

// Next available tag: 8
type UpdateIssueRequest struct {
	Trace                *RequestTrace       `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef           `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	SendEmail            bool                `protobuf:"varint,3,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	Delta                *IssueDelta         `protobuf:"bytes,4,opt,name=delta,proto3" json:"delta,omitempty"`
	CommentContent       string              `protobuf:"bytes,5,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"`
	IsDescription        bool                `protobuf:"varint,6,opt,name=is_description,json=isDescription,proto3" json:"is_description,omitempty"`
	Uploads              []*AttachmentUpload `protobuf:"bytes,7,rep,name=uploads,proto3" json:"uploads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateIssueRequest) Reset()         { *m = UpdateIssueRequest{} }
func (m *UpdateIssueRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateIssueRequest) ProtoMessage()    {}
func (*UpdateIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{9}
}

func (m *UpdateIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIssueRequest.Unmarshal(m, b)
}
func (m *UpdateIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIssueRequest.Marshal(b, m, deterministic)
}
func (m *UpdateIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIssueRequest.Merge(m, src)
}
func (m *UpdateIssueRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateIssueRequest.Size(m)
}
func (m *UpdateIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIssueRequest proto.InternalMessageInfo

func (m *UpdateIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *UpdateIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *UpdateIssueRequest) GetSendEmail() bool {
	if m != nil {
		return m.SendEmail
	}
	return false
}

func (m *UpdateIssueRequest) GetDelta() *IssueDelta {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (m *UpdateIssueRequest) GetCommentContent() string {
	if m != nil {
		return m.CommentContent
	}
	return ""
}

func (m *UpdateIssueRequest) GetIsDescription() bool {
	if m != nil {
		return m.IsDescription
	}
	return false
}

func (m *UpdateIssueRequest) GetUploads() []*AttachmentUpload {
	if m != nil {
		return m.Uploads
	}
	return nil
}

// Next available tag: 4
type StarIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	Starred              bool          `protobuf:"varint,3,opt,name=starred,proto3" json:"starred,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StarIssueRequest) Reset()         { *m = StarIssueRequest{} }
func (m *StarIssueRequest) String() string { return proto.CompactTextString(m) }
func (*StarIssueRequest) ProtoMessage()    {}
func (*StarIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{10}
}

func (m *StarIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StarIssueRequest.Unmarshal(m, b)
}
func (m *StarIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StarIssueRequest.Marshal(b, m, deterministic)
}
func (m *StarIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StarIssueRequest.Merge(m, src)
}
func (m *StarIssueRequest) XXX_Size() int {
	return xxx_messageInfo_StarIssueRequest.Size(m)
}
func (m *StarIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StarIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StarIssueRequest proto.InternalMessageInfo

func (m *StarIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *StarIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *StarIssueRequest) GetStarred() bool {
	if m != nil {
		return m.Starred
	}
	return false
}

// Next available tag: 2
type StarIssueResponse struct {
	StarCount            uint32   `protobuf:"varint,1,opt,name=star_count,json=starCount,proto3" json:"star_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StarIssueResponse) Reset()         { *m = StarIssueResponse{} }
func (m *StarIssueResponse) String() string { return proto.CompactTextString(m) }
func (*StarIssueResponse) ProtoMessage()    {}
func (*StarIssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{11}
}

func (m *StarIssueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StarIssueResponse.Unmarshal(m, b)
}
func (m *StarIssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StarIssueResponse.Marshal(b, m, deterministic)
}
func (m *StarIssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StarIssueResponse.Merge(m, src)
}
func (m *StarIssueResponse) XXX_Size() int {
	return xxx_messageInfo_StarIssueResponse.Size(m)
}
func (m *StarIssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StarIssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StarIssueResponse proto.InternalMessageInfo

func (m *StarIssueResponse) GetStarCount() uint32 {
	if m != nil {
		return m.StarCount
	}
	return 0
}

// Next available tag: 3
type IsIssueStarredRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IsIssueStarredRequest) Reset()         { *m = IsIssueStarredRequest{} }
func (m *IsIssueStarredRequest) String() string { return proto.CompactTextString(m) }
func (*IsIssueStarredRequest) ProtoMessage()    {}
func (*IsIssueStarredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{12}
}

func (m *IsIssueStarredRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsIssueStarredRequest.Unmarshal(m, b)
}
func (m *IsIssueStarredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsIssueStarredRequest.Marshal(b, m, deterministic)
}
func (m *IsIssueStarredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsIssueStarredRequest.Merge(m, src)
}
func (m *IsIssueStarredRequest) XXX_Size() int {
	return xxx_messageInfo_IsIssueStarredRequest.Size(m)
}
func (m *IsIssueStarredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsIssueStarredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsIssueStarredRequest proto.InternalMessageInfo

func (m *IsIssueStarredRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *IsIssueStarredRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

// Next available tag: 2
type IsIssueStarredResponse struct {
	IsStarred            bool     `protobuf:"varint,1,opt,name=is_starred,json=isStarred,proto3" json:"is_starred,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsIssueStarredResponse) Reset()         { *m = IsIssueStarredResponse{} }
func (m *IsIssueStarredResponse) String() string { return proto.CompactTextString(m) }
func (*IsIssueStarredResponse) ProtoMessage()    {}
func (*IsIssueStarredResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{13}
}

func (m *IsIssueStarredResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsIssueStarredResponse.Unmarshal(m, b)
}
func (m *IsIssueStarredResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsIssueStarredResponse.Marshal(b, m, deterministic)
}
func (m *IsIssueStarredResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsIssueStarredResponse.Merge(m, src)
}
func (m *IsIssueStarredResponse) XXX_Size() int {
	return xxx_messageInfo_IsIssueStarredResponse.Size(m)
}
func (m *IsIssueStarredResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsIssueStarredResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsIssueStarredResponse proto.InternalMessageInfo

func (m *IsIssueStarredResponse) GetIsStarred() bool {
	if m != nil {
		return m.IsStarred
	}
	return false
}

// Next available tag: 3
type ListCommentsRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListCommentsRequest) Reset()         { *m = ListCommentsRequest{} }
func (m *ListCommentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommentsRequest) ProtoMessage()    {}
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{14}
}

func (m *ListCommentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsRequest.Unmarshal(m, b)
}
func (m *ListCommentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsRequest.Merge(m, src)
}
func (m *ListCommentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommentsRequest.Size(m)
}
func (m *ListCommentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsRequest proto.InternalMessageInfo

func (m *ListCommentsRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListCommentsRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

// Next available tag: 2
type ListCommentsResponse struct {
	// Comments are in chronological order.  The list of comments may
	// include deleted, spam, and description comments.  Spam and
	// deleted comments will only have content supplied if the user is
	// allowed to see it.
	Comments             []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListCommentsResponse) Reset()         { *m = ListCommentsResponse{} }
func (m *ListCommentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCommentsResponse) ProtoMessage()    {}
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{15}
}

func (m *ListCommentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsResponse.Unmarshal(m, b)
}
func (m *ListCommentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsResponse.Marshal(b, m, deterministic)
}
func (m *ListCommentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsResponse.Merge(m, src)
}
func (m *ListCommentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCommentsResponse.Size(m)
}
func (m *ListCommentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsResponse proto.InternalMessageInfo

func (m *ListCommentsResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

// Next available tag: 5
type ListActivitiesRequest struct {
	// TODO(tyreej) description
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	UserRef              *UserRef      `protobuf:"bytes,2,opt,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty"`
	Before               uint32        `protobuf:"fixed32,3,opt,name=before,proto3" json:"before,omitempty"`
	After                uint32        `protobuf:"fixed32,4,opt,name=after,proto3" json:"after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListActivitiesRequest) Reset()         { *m = ListActivitiesRequest{} }
func (m *ListActivitiesRequest) String() string { return proto.CompactTextString(m) }
func (*ListActivitiesRequest) ProtoMessage()    {}
func (*ListActivitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{16}
}

func (m *ListActivitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActivitiesRequest.Unmarshal(m, b)
}
func (m *ListActivitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActivitiesRequest.Marshal(b, m, deterministic)
}
func (m *ListActivitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActivitiesRequest.Merge(m, src)
}
func (m *ListActivitiesRequest) XXX_Size() int {
	return xxx_messageInfo_ListActivitiesRequest.Size(m)
}
func (m *ListActivitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActivitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListActivitiesRequest proto.InternalMessageInfo

func (m *ListActivitiesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListActivitiesRequest) GetUserRef() *UserRef {
	if m != nil {
		return m.UserRef
	}
	return nil
}

func (m *ListActivitiesRequest) GetBefore() uint32 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *ListActivitiesRequest) GetAfter() uint32 {
	if m != nil {
		return m.After
	}
	return 0
}

// Next available tag: 3
type ListActivitiesResponse struct {
	// TODO(tyreej) description
	Comments             []*Comment      `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	IssueSummaries       []*IssueSummary `protobuf:"bytes,2,rep,name=issue_summaries,json=issueSummaries,proto3" json:"issue_summaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListActivitiesResponse) Reset()         { *m = ListActivitiesResponse{} }
func (m *ListActivitiesResponse) String() string { return proto.CompactTextString(m) }
func (*ListActivitiesResponse) ProtoMessage()    {}
func (*ListActivitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{17}
}

func (m *ListActivitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActivitiesResponse.Unmarshal(m, b)
}
func (m *ListActivitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActivitiesResponse.Marshal(b, m, deterministic)
}
func (m *ListActivitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActivitiesResponse.Merge(m, src)
}
func (m *ListActivitiesResponse) XXX_Size() int {
	return xxx_messageInfo_ListActivitiesResponse.Size(m)
}
func (m *ListActivitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActivitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListActivitiesResponse proto.InternalMessageInfo

func (m *ListActivitiesResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *ListActivitiesResponse) GetIssueSummaries() []*IssueSummary {
	if m != nil {
		return m.IssueSummaries
	}
	return nil
}

// Next available tag: 5
type DeleteCommentRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	SequenceNum          int64         `protobuf:"varint,3,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	Delete               bool          `protobuf:"varint,4,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteCommentRequest) Reset()         { *m = DeleteCommentRequest{} }
func (m *DeleteCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentRequest) ProtoMessage()    {}
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{18}
}

func (m *DeleteCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentRequest.Unmarshal(m, b)
}
func (m *DeleteCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentRequest.Merge(m, src)
}
func (m *DeleteCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentRequest.Size(m)
}
func (m *DeleteCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentRequest proto.InternalMessageInfo

func (m *DeleteCommentRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *DeleteCommentRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *DeleteCommentRequest) GetSequenceNum() int64 {
	if m != nil {
		return m.SequenceNum
	}
	return 0
}

func (m *DeleteCommentRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

// TODO: Consider eventually replacing calls to UpdateApprovalRequest
// with BulkUpdateApprovalsRequest.
// TODO: For now, block bulk attaching uploads and survey editing.
// Next available tag: 7
type BulkUpdateApprovalsRequest struct {
	Trace                *RequestTrace  `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRefs            []*IssueRef    `protobuf:"bytes,2,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	FieldRef             *FieldRef      `protobuf:"bytes,3,opt,name=field_ref,json=fieldRef,proto3" json:"field_ref,omitempty"`
	ApprovalDelta        *ApprovalDelta `protobuf:"bytes,4,opt,name=approval_delta,json=approvalDelta,proto3" json:"approval_delta,omitempty"`
	CommentContent       string         `protobuf:"bytes,5,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"`
	SendEmail            bool           `protobuf:"varint,6,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BulkUpdateApprovalsRequest) Reset()         { *m = BulkUpdateApprovalsRequest{} }
func (m *BulkUpdateApprovalsRequest) String() string { return proto.CompactTextString(m) }
func (*BulkUpdateApprovalsRequest) ProtoMessage()    {}
func (*BulkUpdateApprovalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{19}
}

func (m *BulkUpdateApprovalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkUpdateApprovalsRequest.Unmarshal(m, b)
}
func (m *BulkUpdateApprovalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkUpdateApprovalsRequest.Marshal(b, m, deterministic)
}
func (m *BulkUpdateApprovalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkUpdateApprovalsRequest.Merge(m, src)
}
func (m *BulkUpdateApprovalsRequest) XXX_Size() int {
	return xxx_messageInfo_BulkUpdateApprovalsRequest.Size(m)
}
func (m *BulkUpdateApprovalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkUpdateApprovalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BulkUpdateApprovalsRequest proto.InternalMessageInfo

func (m *BulkUpdateApprovalsRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *BulkUpdateApprovalsRequest) GetIssueRefs() []*IssueRef {
	if m != nil {
		return m.IssueRefs
	}
	return nil
}

func (m *BulkUpdateApprovalsRequest) GetFieldRef() *FieldRef {
	if m != nil {
		return m.FieldRef
	}
	return nil
}

func (m *BulkUpdateApprovalsRequest) GetApprovalDelta() *ApprovalDelta {
	if m != nil {
		return m.ApprovalDelta
	}
	return nil
}

func (m *BulkUpdateApprovalsRequest) GetCommentContent() string {
	if m != nil {
		return m.CommentContent
	}
	return ""
}

func (m *BulkUpdateApprovalsRequest) GetSendEmail() bool {
	if m != nil {
		return m.SendEmail
	}
	return false
}

// Next available tag: 2
type BulkUpdateApprovalsResponse struct {
	IssueRefs            []*IssueRef `protobuf:"bytes,1,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BulkUpdateApprovalsResponse) Reset()         { *m = BulkUpdateApprovalsResponse{} }
func (m *BulkUpdateApprovalsResponse) String() string { return proto.CompactTextString(m) }
func (*BulkUpdateApprovalsResponse) ProtoMessage()    {}
func (*BulkUpdateApprovalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{20}
}

func (m *BulkUpdateApprovalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkUpdateApprovalsResponse.Unmarshal(m, b)
}
func (m *BulkUpdateApprovalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkUpdateApprovalsResponse.Marshal(b, m, deterministic)
}
func (m *BulkUpdateApprovalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkUpdateApprovalsResponse.Merge(m, src)
}
func (m *BulkUpdateApprovalsResponse) XXX_Size() int {
	return xxx_messageInfo_BulkUpdateApprovalsResponse.Size(m)
}
func (m *BulkUpdateApprovalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkUpdateApprovalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BulkUpdateApprovalsResponse proto.InternalMessageInfo

func (m *BulkUpdateApprovalsResponse) GetIssueRefs() []*IssueRef {
	if m != nil {
		return m.IssueRefs
	}
	return nil
}

// Next available tag: 9
type UpdateApprovalRequest struct {
	Trace                *RequestTrace       `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef           `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	FieldRef             *FieldRef           `protobuf:"bytes,3,opt,name=field_ref,json=fieldRef,proto3" json:"field_ref,omitempty"`
	ApprovalDelta        *ApprovalDelta      `protobuf:"bytes,4,opt,name=approval_delta,json=approvalDelta,proto3" json:"approval_delta,omitempty"`
	CommentContent       string              `protobuf:"bytes,5,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"`
	SendEmail            bool                `protobuf:"varint,6,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	IsDescription        bool                `protobuf:"varint,7,opt,name=is_description,json=isDescription,proto3" json:"is_description,omitempty"`
	Uploads              []*AttachmentUpload `protobuf:"bytes,8,rep,name=uploads,proto3" json:"uploads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateApprovalRequest) Reset()         { *m = UpdateApprovalRequest{} }
func (m *UpdateApprovalRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateApprovalRequest) ProtoMessage()    {}
func (*UpdateApprovalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{21}
}

func (m *UpdateApprovalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateApprovalRequest.Unmarshal(m, b)
}
func (m *UpdateApprovalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateApprovalRequest.Marshal(b, m, deterministic)
}
func (m *UpdateApprovalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateApprovalRequest.Merge(m, src)
}
func (m *UpdateApprovalRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateApprovalRequest.Size(m)
}
func (m *UpdateApprovalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateApprovalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateApprovalRequest proto.InternalMessageInfo

func (m *UpdateApprovalRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *UpdateApprovalRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *UpdateApprovalRequest) GetFieldRef() *FieldRef {
	if m != nil {
		return m.FieldRef
	}
	return nil
}

func (m *UpdateApprovalRequest) GetApprovalDelta() *ApprovalDelta {
	if m != nil {
		return m.ApprovalDelta
	}
	return nil
}

func (m *UpdateApprovalRequest) GetCommentContent() string {
	if m != nil {
		return m.CommentContent
	}
	return ""
}

func (m *UpdateApprovalRequest) GetSendEmail() bool {
	if m != nil {
		return m.SendEmail
	}
	return false
}

func (m *UpdateApprovalRequest) GetIsDescription() bool {
	if m != nil {
		return m.IsDescription
	}
	return false
}

func (m *UpdateApprovalRequest) GetUploads() []*AttachmentUpload {
	if m != nil {
		return m.Uploads
	}
	return nil
}

// Next available tag: 2
type UpdateApprovalResponse struct {
	Approval             *Approval `protobuf:"bytes,1,opt,name=approval,proto3" json:"approval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateApprovalResponse) Reset()         { *m = UpdateApprovalResponse{} }
func (m *UpdateApprovalResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateApprovalResponse) ProtoMessage()    {}
func (*UpdateApprovalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{22}
}

func (m *UpdateApprovalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateApprovalResponse.Unmarshal(m, b)
}
func (m *UpdateApprovalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateApprovalResponse.Marshal(b, m, deterministic)
}
func (m *UpdateApprovalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateApprovalResponse.Merge(m, src)
}
func (m *UpdateApprovalResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateApprovalResponse.Size(m)
}
func (m *UpdateApprovalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateApprovalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateApprovalResponse proto.InternalMessageInfo

func (m *UpdateApprovalResponse) GetApproval() *Approval {
	if m != nil {
		return m.Approval
	}
	return nil
}

// Next available tag: 6
type ConvertIssueApprovalsTemplateRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	TemplateName         string        `protobuf:"bytes,3,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	CommentContent       string        `protobuf:"bytes,4,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"`
	SendEmail            bool          `protobuf:"varint,5,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ConvertIssueApprovalsTemplateRequest) Reset()         { *m = ConvertIssueApprovalsTemplateRequest{} }
func (m *ConvertIssueApprovalsTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*ConvertIssueApprovalsTemplateRequest) ProtoMessage()    {}
func (*ConvertIssueApprovalsTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{23}
}

func (m *ConvertIssueApprovalsTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvertIssueApprovalsTemplateRequest.Unmarshal(m, b)
}
func (m *ConvertIssueApprovalsTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvertIssueApprovalsTemplateRequest.Marshal(b, m, deterministic)
}
func (m *ConvertIssueApprovalsTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvertIssueApprovalsTemplateRequest.Merge(m, src)
}
func (m *ConvertIssueApprovalsTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_ConvertIssueApprovalsTemplateRequest.Size(m)
}
func (m *ConvertIssueApprovalsTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvertIssueApprovalsTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConvertIssueApprovalsTemplateRequest proto.InternalMessageInfo

func (m *ConvertIssueApprovalsTemplateRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ConvertIssueApprovalsTemplateRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *ConvertIssueApprovalsTemplateRequest) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

func (m *ConvertIssueApprovalsTemplateRequest) GetCommentContent() string {
	if m != nil {
		return m.CommentContent
	}
	return ""
}

func (m *ConvertIssueApprovalsTemplateRequest) GetSendEmail() bool {
	if m != nil {
		return m.SendEmail
	}
	return false
}

// Next available tag: 2
type ConvertIssueApprovalsTemplateResponse struct {
	Issue                *Issue   `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConvertIssueApprovalsTemplateResponse) Reset()         { *m = ConvertIssueApprovalsTemplateResponse{} }
func (m *ConvertIssueApprovalsTemplateResponse) String() string { return proto.CompactTextString(m) }
func (*ConvertIssueApprovalsTemplateResponse) ProtoMessage()    {}
func (*ConvertIssueApprovalsTemplateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{24}
}

func (m *ConvertIssueApprovalsTemplateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvertIssueApprovalsTemplateResponse.Unmarshal(m, b)
}
func (m *ConvertIssueApprovalsTemplateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvertIssueApprovalsTemplateResponse.Marshal(b, m, deterministic)
}
func (m *ConvertIssueApprovalsTemplateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvertIssueApprovalsTemplateResponse.Merge(m, src)
}
func (m *ConvertIssueApprovalsTemplateResponse) XXX_Size() int {
	return xxx_messageInfo_ConvertIssueApprovalsTemplateResponse.Size(m)
}
func (m *ConvertIssueApprovalsTemplateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvertIssueApprovalsTemplateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConvertIssueApprovalsTemplateResponse proto.InternalMessageInfo

func (m *ConvertIssueApprovalsTemplateResponse) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

// Next available tag: 8
type IssueSnapshotRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	Timestamp            int32         `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Query                string        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	CannedQuery          int32         `protobuf:"varint,4,opt,name=canned_query,json=cannedQuery,proto3" json:"canned_query,omitempty"`
	GroupBy              string        `protobuf:"bytes,5,opt,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	LabelPrefix          string        `protobuf:"bytes,6,opt,name=label_prefix,json=labelPrefix,proto3" json:"label_prefix,omitempty"`
	ProjectName          string        `protobuf:"bytes,7,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IssueSnapshotRequest) Reset()         { *m = IssueSnapshotRequest{} }
func (m *IssueSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*IssueSnapshotRequest) ProtoMessage()    {}
func (*IssueSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{25}
}

func (m *IssueSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueSnapshotRequest.Unmarshal(m, b)
}
func (m *IssueSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *IssueSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueSnapshotRequest.Merge(m, src)
}
func (m *IssueSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_IssueSnapshotRequest.Size(m)
}
func (m *IssueSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IssueSnapshotRequest proto.InternalMessageInfo

func (m *IssueSnapshotRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *IssueSnapshotRequest) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *IssueSnapshotRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *IssueSnapshotRequest) GetCannedQuery() int32 {
	if m != nil {
		return m.CannedQuery
	}
	return 0
}

func (m *IssueSnapshotRequest) GetGroupBy() string {
	if m != nil {
		return m.GroupBy
	}
	return ""
}

func (m *IssueSnapshotRequest) GetLabelPrefix() string {
	if m != nil {
		return m.LabelPrefix
	}
	return ""
}

func (m *IssueSnapshotRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

// Next available tag: 3
type IssueSnapshotCount struct {
	Dimension            string   `protobuf:"bytes,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueSnapshotCount) Reset()         { *m = IssueSnapshotCount{} }
func (m *IssueSnapshotCount) String() string { return proto.CompactTextString(m) }
func (*IssueSnapshotCount) ProtoMessage()    {}
func (*IssueSnapshotCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{26}
}

func (m *IssueSnapshotCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueSnapshotCount.Unmarshal(m, b)
}
func (m *IssueSnapshotCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueSnapshotCount.Marshal(b, m, deterministic)
}
func (m *IssueSnapshotCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueSnapshotCount.Merge(m, src)
}
func (m *IssueSnapshotCount) XXX_Size() int {
	return xxx_messageInfo_IssueSnapshotCount.Size(m)
}
func (m *IssueSnapshotCount) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueSnapshotCount.DiscardUnknown(m)
}

var xxx_messageInfo_IssueSnapshotCount proto.InternalMessageInfo

func (m *IssueSnapshotCount) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *IssueSnapshotCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// Next available tag: 3
type IssueSnapshotResponse struct {
	SnapshotCount        []*IssueSnapshotCount `protobuf:"bytes,1,rep,name=snapshot_count,json=snapshotCount,proto3" json:"snapshot_count,omitempty"`
	UnsupportedField     []string              `protobuf:"bytes,2,rep,name=unsupported_field,json=unsupportedField,proto3" json:"unsupported_field,omitempty"`
	SearchLimitReached   bool                  `protobuf:"varint,3,opt,name=search_limit_reached,json=searchLimitReached,proto3" json:"search_limit_reached,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IssueSnapshotResponse) Reset()         { *m = IssueSnapshotResponse{} }
func (m *IssueSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*IssueSnapshotResponse) ProtoMessage()    {}
func (*IssueSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{27}
}

func (m *IssueSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueSnapshotResponse.Unmarshal(m, b)
}
func (m *IssueSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *IssueSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueSnapshotResponse.Merge(m, src)
}
func (m *IssueSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_IssueSnapshotResponse.Size(m)
}
func (m *IssueSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IssueSnapshotResponse proto.InternalMessageInfo

func (m *IssueSnapshotResponse) GetSnapshotCount() []*IssueSnapshotCount {
	if m != nil {
		return m.SnapshotCount
	}
	return nil
}

func (m *IssueSnapshotResponse) GetUnsupportedField() []string {
	if m != nil {
		return m.UnsupportedField
	}
	return nil
}

func (m *IssueSnapshotResponse) GetSearchLimitReached() bool {
	if m != nil {
		return m.SearchLimitReached
	}
	return false
}

// Next available tag: 4
type PresubmitIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	IssueDelta           *IssueDelta   `protobuf:"bytes,3,opt,name=issue_delta,json=issueDelta,proto3" json:"issue_delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PresubmitIssueRequest) Reset()         { *m = PresubmitIssueRequest{} }
func (m *PresubmitIssueRequest) String() string { return proto.CompactTextString(m) }
func (*PresubmitIssueRequest) ProtoMessage()    {}
func (*PresubmitIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{28}
}

func (m *PresubmitIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresubmitIssueRequest.Unmarshal(m, b)
}
func (m *PresubmitIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresubmitIssueRequest.Marshal(b, m, deterministic)
}
func (m *PresubmitIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresubmitIssueRequest.Merge(m, src)
}
func (m *PresubmitIssueRequest) XXX_Size() int {
	return xxx_messageInfo_PresubmitIssueRequest.Size(m)
}
func (m *PresubmitIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PresubmitIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PresubmitIssueRequest proto.InternalMessageInfo

func (m *PresubmitIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *PresubmitIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *PresubmitIssueRequest) GetIssueDelta() *IssueDelta {
	if m != nil {
		return m.IssueDelta
	}
	return nil
}

// Next available tag: 8
type PresubmitIssueResponse struct {
	OwnerAvailability      string         `protobuf:"bytes,1,opt,name=owner_availability,json=ownerAvailability,proto3" json:"owner_availability,omitempty"`
	OwnerAvailabilityState string         `protobuf:"bytes,2,opt,name=owner_availability_state,json=ownerAvailabilityState,proto3" json:"owner_availability_state,omitempty"`
	DerivedLabels          []*ValueAndWhy `protobuf:"bytes,3,rep,name=derived_labels,json=derivedLabels,proto3" json:"derived_labels,omitempty"`
	DerivedOwners          []*ValueAndWhy `protobuf:"bytes,4,rep,name=derived_owners,json=derivedOwners,proto3" json:"derived_owners,omitempty"`
	DerivedCcs             []*ValueAndWhy `protobuf:"bytes,5,rep,name=derived_ccs,json=derivedCcs,proto3" json:"derived_ccs,omitempty"`
	Warnings               []*ValueAndWhy `protobuf:"bytes,6,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Errors                 []*ValueAndWhy `protobuf:"bytes,7,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}       `json:"-"`
	XXX_unrecognized       []byte         `json:"-"`
	XXX_sizecache          int32          `json:"-"`
}

func (m *PresubmitIssueResponse) Reset()         { *m = PresubmitIssueResponse{} }
func (m *PresubmitIssueResponse) String() string { return proto.CompactTextString(m) }
func (*PresubmitIssueResponse) ProtoMessage()    {}
func (*PresubmitIssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{29}
}

func (m *PresubmitIssueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresubmitIssueResponse.Unmarshal(m, b)
}
func (m *PresubmitIssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresubmitIssueResponse.Marshal(b, m, deterministic)
}
func (m *PresubmitIssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresubmitIssueResponse.Merge(m, src)
}
func (m *PresubmitIssueResponse) XXX_Size() int {
	return xxx_messageInfo_PresubmitIssueResponse.Size(m)
}
func (m *PresubmitIssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PresubmitIssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PresubmitIssueResponse proto.InternalMessageInfo

func (m *PresubmitIssueResponse) GetOwnerAvailability() string {
	if m != nil {
		return m.OwnerAvailability
	}
	return ""
}

func (m *PresubmitIssueResponse) GetOwnerAvailabilityState() string {
	if m != nil {
		return m.OwnerAvailabilityState
	}
	return ""
}

func (m *PresubmitIssueResponse) GetDerivedLabels() []*ValueAndWhy {
	if m != nil {
		return m.DerivedLabels
	}
	return nil
}

func (m *PresubmitIssueResponse) GetDerivedOwners() []*ValueAndWhy {
	if m != nil {
		return m.DerivedOwners
	}
	return nil
}

func (m *PresubmitIssueResponse) GetDerivedCcs() []*ValueAndWhy {
	if m != nil {
		return m.DerivedCcs
	}
	return nil
}

func (m *PresubmitIssueResponse) GetWarnings() []*ValueAndWhy {
	if m != nil {
		return m.Warnings
	}
	return nil
}

func (m *PresubmitIssueResponse) GetErrors() []*ValueAndWhy {
	if m != nil {
		return m.Errors
	}
	return nil
}

// Next available tag: 6
type RerankBlockedOnIssuesRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	MovedRef             *IssueRef     `protobuf:"bytes,3,opt,name=moved_ref,json=movedRef,proto3" json:"moved_ref,omitempty"`
	TargetRef            *IssueRef     `protobuf:"bytes,4,opt,name=target_ref,json=targetRef,proto3" json:"target_ref,omitempty"`
	SplitAbove           bool          `protobuf:"varint,5,opt,name=split_above,json=splitAbove,proto3" json:"split_above,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RerankBlockedOnIssuesRequest) Reset()         { *m = RerankBlockedOnIssuesRequest{} }
func (m *RerankBlockedOnIssuesRequest) String() string { return proto.CompactTextString(m) }
func (*RerankBlockedOnIssuesRequest) ProtoMessage()    {}
func (*RerankBlockedOnIssuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{30}
}

func (m *RerankBlockedOnIssuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RerankBlockedOnIssuesRequest.Unmarshal(m, b)
}
func (m *RerankBlockedOnIssuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RerankBlockedOnIssuesRequest.Marshal(b, m, deterministic)
}
func (m *RerankBlockedOnIssuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RerankBlockedOnIssuesRequest.Merge(m, src)
}
func (m *RerankBlockedOnIssuesRequest) XXX_Size() int {
	return xxx_messageInfo_RerankBlockedOnIssuesRequest.Size(m)
}
func (m *RerankBlockedOnIssuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RerankBlockedOnIssuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RerankBlockedOnIssuesRequest proto.InternalMessageInfo

func (m *RerankBlockedOnIssuesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *RerankBlockedOnIssuesRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *RerankBlockedOnIssuesRequest) GetMovedRef() *IssueRef {
	if m != nil {
		return m.MovedRef
	}
	return nil
}

func (m *RerankBlockedOnIssuesRequest) GetTargetRef() *IssueRef {
	if m != nil {
		return m.TargetRef
	}
	return nil
}

func (m *RerankBlockedOnIssuesRequest) GetSplitAbove() bool {
	if m != nil {
		return m.SplitAbove
	}
	return false
}

// Next available tag: 2
type RerankBlockedOnIssuesResponse struct {
	BlockedOnIssueRefs   []*IssueRef `protobuf:"bytes,1,rep,name=blocked_on_issue_refs,json=blockedOnIssueRefs,proto3" json:"blocked_on_issue_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RerankBlockedOnIssuesResponse) Reset()         { *m = RerankBlockedOnIssuesResponse{} }
func (m *RerankBlockedOnIssuesResponse) String() string { return proto.CompactTextString(m) }
func (*RerankBlockedOnIssuesResponse) ProtoMessage()    {}
func (*RerankBlockedOnIssuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{31}
}

func (m *RerankBlockedOnIssuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RerankBlockedOnIssuesResponse.Unmarshal(m, b)
}
func (m *RerankBlockedOnIssuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RerankBlockedOnIssuesResponse.Marshal(b, m, deterministic)
}
func (m *RerankBlockedOnIssuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RerankBlockedOnIssuesResponse.Merge(m, src)
}
func (m *RerankBlockedOnIssuesResponse) XXX_Size() int {
	return xxx_messageInfo_RerankBlockedOnIssuesResponse.Size(m)
}
func (m *RerankBlockedOnIssuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RerankBlockedOnIssuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RerankBlockedOnIssuesResponse proto.InternalMessageInfo

func (m *RerankBlockedOnIssuesResponse) GetBlockedOnIssueRefs() []*IssueRef {
	if m != nil {
		return m.BlockedOnIssueRefs
	}
	return nil
}

// Next available tag: 4
type DeleteIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	Delete               bool          `protobuf:"varint,3,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteIssueRequest) Reset()         { *m = DeleteIssueRequest{} }
func (m *DeleteIssueRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIssueRequest) ProtoMessage()    {}
func (*DeleteIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{32}
}

func (m *DeleteIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIssueRequest.Unmarshal(m, b)
}
func (m *DeleteIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIssueRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIssueRequest.Merge(m, src)
}
func (m *DeleteIssueRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIssueRequest.Size(m)
}
func (m *DeleteIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIssueRequest proto.InternalMessageInfo

func (m *DeleteIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *DeleteIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *DeleteIssueRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

// Next available tag: 1
type DeleteIssueResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIssueResponse) Reset()         { *m = DeleteIssueResponse{} }
func (m *DeleteIssueResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIssueResponse) ProtoMessage()    {}
func (*DeleteIssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{33}
}

func (m *DeleteIssueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIssueResponse.Unmarshal(m, b)
}
func (m *DeleteIssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIssueResponse.Marshal(b, m, deterministic)
}
func (m *DeleteIssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIssueResponse.Merge(m, src)
}
func (m *DeleteIssueResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIssueResponse.Size(m)
}
func (m *DeleteIssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIssueResponse proto.InternalMessageInfo

// Next available tag: 5
type DeleteIssueCommentRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	SequenceNum          uint32        `protobuf:"varint,3,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	Delete               bool          `protobuf:"varint,4,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteIssueCommentRequest) Reset()         { *m = DeleteIssueCommentRequest{} }
func (m *DeleteIssueCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIssueCommentRequest) ProtoMessage()    {}
func (*DeleteIssueCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{34}
}

func (m *DeleteIssueCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIssueCommentRequest.Unmarshal(m, b)
}
func (m *DeleteIssueCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIssueCommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIssueCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIssueCommentRequest.Merge(m, src)
}
func (m *DeleteIssueCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIssueCommentRequest.Size(m)
}
func (m *DeleteIssueCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIssueCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIssueCommentRequest proto.InternalMessageInfo

func (m *DeleteIssueCommentRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *DeleteIssueCommentRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *DeleteIssueCommentRequest) GetSequenceNum() uint32 {
	if m != nil {
		return m.SequenceNum
	}
	return 0
}

func (m *DeleteIssueCommentRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

// Next available tag: 1
type DeleteIssueCommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIssueCommentResponse) Reset()         { *m = DeleteIssueCommentResponse{} }
func (m *DeleteIssueCommentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIssueCommentResponse) ProtoMessage()    {}
func (*DeleteIssueCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{35}
}

func (m *DeleteIssueCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIssueCommentResponse.Unmarshal(m, b)
}
func (m *DeleteIssueCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIssueCommentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteIssueCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIssueCommentResponse.Merge(m, src)
}
func (m *DeleteIssueCommentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIssueCommentResponse.Size(m)
}
func (m *DeleteIssueCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIssueCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIssueCommentResponse proto.InternalMessageInfo

// Next available tag: 6
type DeleteAttachmentRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	SequenceNum          uint32        `protobuf:"varint,3,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	AttachmentId         uint32        `protobuf:"varint,4,opt,name=attachment_id,json=attachmentId,proto3" json:"attachment_id,omitempty"`
	Delete               bool          `protobuf:"varint,5,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteAttachmentRequest) Reset()         { *m = DeleteAttachmentRequest{} }
func (m *DeleteAttachmentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAttachmentRequest) ProtoMessage()    {}
func (*DeleteAttachmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{36}
}

func (m *DeleteAttachmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAttachmentRequest.Unmarshal(m, b)
}
func (m *DeleteAttachmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAttachmentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAttachmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAttachmentRequest.Merge(m, src)
}
func (m *DeleteAttachmentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAttachmentRequest.Size(m)
}
func (m *DeleteAttachmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAttachmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAttachmentRequest proto.InternalMessageInfo

func (m *DeleteAttachmentRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *DeleteAttachmentRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *DeleteAttachmentRequest) GetSequenceNum() uint32 {
	if m != nil {
		return m.SequenceNum
	}
	return 0
}

func (m *DeleteAttachmentRequest) GetAttachmentId() uint32 {
	if m != nil {
		return m.AttachmentId
	}
	return 0
}

func (m *DeleteAttachmentRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

// Next available tag: 1
type DeleteAttachmentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAttachmentResponse) Reset()         { *m = DeleteAttachmentResponse{} }
func (m *DeleteAttachmentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAttachmentResponse) ProtoMessage()    {}
func (*DeleteAttachmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{37}
}

func (m *DeleteAttachmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAttachmentResponse.Unmarshal(m, b)
}
func (m *DeleteAttachmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAttachmentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAttachmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAttachmentResponse.Merge(m, src)
}
func (m *DeleteAttachmentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAttachmentResponse.Size(m)
}
func (m *DeleteAttachmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAttachmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAttachmentResponse proto.InternalMessageInfo

// Next available tag: 4
type FlagIssuesRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRefs            []*IssueRef   `protobuf:"bytes,2,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	Flag                 bool          `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FlagIssuesRequest) Reset()         { *m = FlagIssuesRequest{} }
func (m *FlagIssuesRequest) String() string { return proto.CompactTextString(m) }
func (*FlagIssuesRequest) ProtoMessage()    {}
func (*FlagIssuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{38}
}

func (m *FlagIssuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlagIssuesRequest.Unmarshal(m, b)
}
func (m *FlagIssuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlagIssuesRequest.Marshal(b, m, deterministic)
}
func (m *FlagIssuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlagIssuesRequest.Merge(m, src)
}
func (m *FlagIssuesRequest) XXX_Size() int {
	return xxx_messageInfo_FlagIssuesRequest.Size(m)
}
func (m *FlagIssuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlagIssuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlagIssuesRequest proto.InternalMessageInfo

func (m *FlagIssuesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *FlagIssuesRequest) GetIssueRefs() []*IssueRef {
	if m != nil {
		return m.IssueRefs
	}
	return nil
}

func (m *FlagIssuesRequest) GetFlag() bool {
	if m != nil {
		return m.Flag
	}
	return false
}

// Next available tag: 1
type FlagIssuesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlagIssuesResponse) Reset()         { *m = FlagIssuesResponse{} }
func (m *FlagIssuesResponse) String() string { return proto.CompactTextString(m) }
func (*FlagIssuesResponse) ProtoMessage()    {}
func (*FlagIssuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{39}
}

func (m *FlagIssuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlagIssuesResponse.Unmarshal(m, b)
}
func (m *FlagIssuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlagIssuesResponse.Marshal(b, m, deterministic)
}
func (m *FlagIssuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlagIssuesResponse.Merge(m, src)
}
func (m *FlagIssuesResponse) XXX_Size() int {
	return xxx_messageInfo_FlagIssuesResponse.Size(m)
}
func (m *FlagIssuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlagIssuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlagIssuesResponse proto.InternalMessageInfo

// Next available tag: 5
type FlagCommentRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	SequenceNum          uint32        `protobuf:"varint,3,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	Flag                 bool          `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FlagCommentRequest) Reset()         { *m = FlagCommentRequest{} }
func (m *FlagCommentRequest) String() string { return proto.CompactTextString(m) }
func (*FlagCommentRequest) ProtoMessage()    {}
func (*FlagCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{40}
}

func (m *FlagCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlagCommentRequest.Unmarshal(m, b)
}
func (m *FlagCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlagCommentRequest.Marshal(b, m, deterministic)
}
func (m *FlagCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlagCommentRequest.Merge(m, src)
}
func (m *FlagCommentRequest) XXX_Size() int {
	return xxx_messageInfo_FlagCommentRequest.Size(m)
}
func (m *FlagCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlagCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlagCommentRequest proto.InternalMessageInfo

func (m *FlagCommentRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *FlagCommentRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *FlagCommentRequest) GetSequenceNum() uint32 {
	if m != nil {
		return m.SequenceNum
	}
	return 0
}

func (m *FlagCommentRequest) GetFlag() bool {
	if m != nil {
		return m.Flag
	}
	return false
}

// Next available tag: 1
type FlagCommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlagCommentResponse) Reset()         { *m = FlagCommentResponse{} }
func (m *FlagCommentResponse) String() string { return proto.CompactTextString(m) }
func (*FlagCommentResponse) ProtoMessage()    {}
func (*FlagCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{41}
}

func (m *FlagCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlagCommentResponse.Unmarshal(m, b)
}
func (m *FlagCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlagCommentResponse.Marshal(b, m, deterministic)
}
func (m *FlagCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlagCommentResponse.Merge(m, src)
}
func (m *FlagCommentResponse) XXX_Size() int {
	return xxx_messageInfo_FlagCommentResponse.Size(m)
}
func (m *FlagCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlagCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlagCommentResponse proto.InternalMessageInfo

// Next available tag: 3
type ListIssuePermissionsRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListIssuePermissionsRequest) Reset()         { *m = ListIssuePermissionsRequest{} }
func (m *ListIssuePermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListIssuePermissionsRequest) ProtoMessage()    {}
func (*ListIssuePermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{42}
}

func (m *ListIssuePermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssuePermissionsRequest.Unmarshal(m, b)
}
func (m *ListIssuePermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssuePermissionsRequest.Marshal(b, m, deterministic)
}
func (m *ListIssuePermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssuePermissionsRequest.Merge(m, src)
}
func (m *ListIssuePermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListIssuePermissionsRequest.Size(m)
}
func (m *ListIssuePermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssuePermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssuePermissionsRequest proto.InternalMessageInfo

func (m *ListIssuePermissionsRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListIssuePermissionsRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

// Next available tag: 2
type ListIssuePermissionsResponse struct {
	Permissions          []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIssuePermissionsResponse) Reset()         { *m = ListIssuePermissionsResponse{} }
func (m *ListIssuePermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIssuePermissionsResponse) ProtoMessage()    {}
func (*ListIssuePermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{43}
}

func (m *ListIssuePermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssuePermissionsResponse.Unmarshal(m, b)
}
func (m *ListIssuePermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssuePermissionsResponse.Marshal(b, m, deterministic)
}
func (m *ListIssuePermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssuePermissionsResponse.Merge(m, src)
}
func (m *ListIssuePermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListIssuePermissionsResponse.Size(m)
}
func (m *ListIssuePermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssuePermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssuePermissionsResponse proto.InternalMessageInfo

func (m *ListIssuePermissionsResponse) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateIssueRequest)(nil), "monorail.CreateIssueRequest")
	proto.RegisterType((*GetIssueRequest)(nil), "monorail.GetIssueRequest")
	proto.RegisterType((*IssueResponse)(nil), "monorail.IssueResponse")
	proto.RegisterType((*ListIssuesRequest)(nil), "monorail.ListIssuesRequest")
	proto.RegisterType((*ListIssuesResponse)(nil), "monorail.ListIssuesResponse")
	proto.RegisterType((*ListReferencedIssuesRequest)(nil), "monorail.ListReferencedIssuesRequest")
	proto.RegisterType((*ListReferencedIssuesResponse)(nil), "monorail.ListReferencedIssuesResponse")
	proto.RegisterType((*ListApplicableFieldDefsRequest)(nil), "monorail.ListApplicableFieldDefsRequest")
	proto.RegisterType((*ListApplicableFieldDefsResponse)(nil), "monorail.ListApplicableFieldDefsResponse")
	proto.RegisterType((*UpdateIssueRequest)(nil), "monorail.UpdateIssueRequest")
	proto.RegisterType((*StarIssueRequest)(nil), "monorail.StarIssueRequest")
	proto.RegisterType((*StarIssueResponse)(nil), "monorail.StarIssueResponse")
	proto.RegisterType((*IsIssueStarredRequest)(nil), "monorail.IsIssueStarredRequest")
	proto.RegisterType((*IsIssueStarredResponse)(nil), "monorail.IsIssueStarredResponse")
	proto.RegisterType((*ListCommentsRequest)(nil), "monorail.ListCommentsRequest")
	proto.RegisterType((*ListCommentsResponse)(nil), "monorail.ListCommentsResponse")
	proto.RegisterType((*ListActivitiesRequest)(nil), "monorail.ListActivitiesRequest")
	proto.RegisterType((*ListActivitiesResponse)(nil), "monorail.ListActivitiesResponse")
	proto.RegisterType((*DeleteCommentRequest)(nil), "monorail.DeleteCommentRequest")
	proto.RegisterType((*BulkUpdateApprovalsRequest)(nil), "monorail.BulkUpdateApprovalsRequest")
	proto.RegisterType((*BulkUpdateApprovalsResponse)(nil), "monorail.BulkUpdateApprovalsResponse")
	proto.RegisterType((*UpdateApprovalRequest)(nil), "monorail.UpdateApprovalRequest")
	proto.RegisterType((*UpdateApprovalResponse)(nil), "monorail.UpdateApprovalResponse")
	proto.RegisterType((*ConvertIssueApprovalsTemplateRequest)(nil), "monorail.ConvertIssueApprovalsTemplateRequest")
	proto.RegisterType((*ConvertIssueApprovalsTemplateResponse)(nil), "monorail.ConvertIssueApprovalsTemplateResponse")
	proto.RegisterType((*IssueSnapshotRequest)(nil), "monorail.IssueSnapshotRequest")
	proto.RegisterType((*IssueSnapshotCount)(nil), "monorail.IssueSnapshotCount")
	proto.RegisterType((*IssueSnapshotResponse)(nil), "monorail.IssueSnapshotResponse")
	proto.RegisterType((*PresubmitIssueRequest)(nil), "monorail.PresubmitIssueRequest")
	proto.RegisterType((*PresubmitIssueResponse)(nil), "monorail.PresubmitIssueResponse")
	proto.RegisterType((*RerankBlockedOnIssuesRequest)(nil), "monorail.RerankBlockedOnIssuesRequest")
	proto.RegisterType((*RerankBlockedOnIssuesResponse)(nil), "monorail.RerankBlockedOnIssuesResponse")
	proto.RegisterType((*DeleteIssueRequest)(nil), "monorail.DeleteIssueRequest")
	proto.RegisterType((*DeleteIssueResponse)(nil), "monorail.DeleteIssueResponse")
	proto.RegisterType((*DeleteIssueCommentRequest)(nil), "monorail.DeleteIssueCommentRequest")
	proto.RegisterType((*DeleteIssueCommentResponse)(nil), "monorail.DeleteIssueCommentResponse")
	proto.RegisterType((*DeleteAttachmentRequest)(nil), "monorail.DeleteAttachmentRequest")
	proto.RegisterType((*DeleteAttachmentResponse)(nil), "monorail.DeleteAttachmentResponse")
	proto.RegisterType((*FlagIssuesRequest)(nil), "monorail.FlagIssuesRequest")
	proto.RegisterType((*FlagIssuesResponse)(nil), "monorail.FlagIssuesResponse")
	proto.RegisterType((*FlagCommentRequest)(nil), "monorail.FlagCommentRequest")
	proto.RegisterType((*FlagCommentResponse)(nil), "monorail.FlagCommentResponse")
	proto.RegisterType((*ListIssuePermissionsRequest)(nil), "monorail.ListIssuePermissionsRequest")
	proto.RegisterType((*ListIssuePermissionsResponse)(nil), "monorail.ListIssuePermissionsResponse")
}

func init() { proto.RegisterFile("api/api_proto/issues.proto", fileDescriptor_e34c0f78b7e5f845) }

var fileDescriptor_e34c0f78b7e5f845 = []byte{
	// 2106 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x19, 0x4d, 0x6f, 0x1c, 0x49,
	0xd5, 0xed, 0xb1, 0x3d, 0x33, 0x6f, 0x3c, 0x76, 0x5c, 0xb1, 0x9d, 0x49, 0xdb, 0xde, 0x38, 0x9d,
	0x78, 0x13, 0x20, 0x6b, 0x6f, 0xc2, 0xb2, 0x70, 0x40, 0xb0, 0x8e, 0x13, 0xb3, 0x91, 0xa2, 0xc4,
	0xb4, 0x13, 0x38, 0x70, 0x68, 0xd5, 0x74, 0xd7, 0xd8, 0xbd, 0xe9, 0xaf, 0xed, 0xaa, 0xf1, 0x62,
	0x09, 0x21, 0xb1, 0xa7, 0x95, 0x76, 0xcf, 0x70, 0xe6, 0x8a, 0x84, 0xc4, 0x05, 0x2e, 0x5c, 0xf9,
	0x11, 0xfc, 0x0e, 0xae, 0x70, 0x40, 0xf5, 0xd1, 0xdd, 0xd5, 0x3d, 0x3d, 0x63, 0xaf, 0x23, 0x0d,
	0xe1, 0xd6, 0xf5, 0xbe, 0xdf, 0xab, 0xaa, 0xf7, 0x5e, 0xbd, 0x06, 0x13, 0x27, 0xfe, 0x1e, 0x4e,
	0x7c, 0x27, 0x49, 0x63, 0x16, 0xef, 0xf9, 0x94, 0x0e, 0x09, 0xdd, 0x15, 0x0b, 0xd4, 0x0a, 0xe3,
	0x28, 0x4e, 0xb1, 0x1f, 0x98, 0x1b, 0x27, 0x71, 0x7c, 0x12, 0x90, 0x3d, 0x01, 0xef, 0x0f, 0x07,
	0x7b, 0x24, 0x4c, 0xd8, 0xb9, 0x24, 0x33, 0x2b, 0x22, 0xdc, 0x38, 0x0c, 0xe3, 0x48, 0xe1, 0x6e,
	0xd7, 0x88, 0x77, 0xe2, 0xfe, 0x67, 0xc4, 0x65, 0x4a, 0x8b, 0x79, 0xa7, 0x4c, 0x92, 0xa4, 0x31,
	0xc7, 0x96, 0x89, 0xac, 0x6f, 0x0c, 0x40, 0x07, 0x29, 0xc1, 0x8c, 0x3c, 0xe3, 0x22, 0x6c, 0xf2,
	0xf9, 0x90, 0x50, 0x86, 0x1e, 0xc0, 0x3c, 0x4b, 0xb1, 0x4b, 0x7a, 0xc6, 0xb6, 0x71, 0xbf, 0xf3,
	0x68, 0x7d, 0x37, 0xb3, 0x78, 0x57, 0x51, 0xbc, 0xe2, 0x58, 0x5b, 0x12, 0xa1, 0xdb, 0xb0, 0x98,
	0x49, 0x8f, 0x70, 0x48, 0x7a, 0xb3, 0xdb, 0xc6, 0xfd, 0xb6, 0xdd, 0x51, 0xb0, 0x17, 0x38, 0x24,
	0x68, 0x07, 0xe6, 0x85, 0x8d, 0xbd, 0x86, 0x10, 0xb8, 0x5c, 0x08, 0x94, 0x7a, 0x25, 0xd6, 0x4a,
	0x60, 0xf9, 0x67, 0x84, 0xbd, 0x85, 0x29, 0x7b, 0xd0, 0x96, 0xb1, 0x48, 0xc9, 0x40, 0xd8, 0xd1,
	0x79, 0x84, 0xaa, 0xba, 0xc8, 0xc0, 0x6e, 0xf9, 0xea, 0xcb, 0xfa, 0x18, 0xba, 0x0a, 0x4a, 0x93,
	0x38, 0xa2, 0x9a, 0xa5, 0xc6, 0x44, 0x4b, 0x7f, 0x3f, 0x0b, 0x2b, 0xcf, 0x7d, 0x2a, 0x6d, 0xa5,
	0x57, 0x33, 0x76, 0x15, 0xe6, 0x3f, 0x1f, 0x92, 0xf4, 0x5c, 0x05, 0x4c, 0x2e, 0x78, 0x34, 0x5d,
	0x1c, 0x45, 0xc4, 0x73, 0x24, 0x92, 0x47, 0xac, 0x6b, 0x77, 0x24, 0xec, 0xe7, 0x82, 0xe4, 0x0e,
	0x74, 0xf5, 0x80, 0xd3, 0xde, 0xdc, 0x76, 0xe3, 0x7e, 0xdb, 0x5e, 0xd4, 0x22, 0x4e, 0xd1, 0x47,
	0x00, 0x09, 0x3e, 0xf1, 0x23, 0xcc, 0xfc, 0x38, 0xea, 0xcd, 0x0b, 0x83, 0x56, 0x0b, 0x83, 0x8e,
	0x72, 0x9c, 0xad, 0xd1, 0x21, 0x0b, 0xba, 0x27, 0x69, 0x3c, 0x4c, 0x9c, 0xfe, 0xb9, 0x43, 0x13,
	0xe2, 0xf6, 0x16, 0xe4, 0x66, 0x0a, 0xe0, 0xe3, 0xf3, 0xe3, 0x84, 0xb8, 0x68, 0x03, 0xda, 0x34,
	0x4e, 0x99, 0xc4, 0x37, 0x05, 0xbe, 0xc5, 0x01, 0x1c, 0x69, 0xf5, 0x01, 0xe9, 0x71, 0x51, 0x51,
	0xbd, 0x07, 0x0b, 0xf2, 0x0a, 0xf4, 0x8c, 0xed, 0x46, 0x5d, 0x58, 0x15, 0x9a, 0xbb, 0xc6, 0x62,
	0x86, 0x03, 0x27, 0x25, 0x74, 0x18, 0x30, 0x2a, 0x62, 0xd3, 0xb5, 0x17, 0x05, 0xd0, 0x96, 0x30,
	0xeb, 0xb7, 0xb0, 0xc1, 0x75, 0xd8, 0x64, 0x40, 0x52, 0x12, 0xb9, 0xc4, 0x7b, 0x9b, 0x5d, 0x78,
	0x08, 0x90, 0x1f, 0x19, 0xae, 0xae, 0x31, 0xe6, 0xcc, 0xb4, 0xb3, 0x33, 0xc3, 0xf5, 0x6f, 0xd6,
	0xeb, 0x57, 0xde, 0x3e, 0x80, 0x76, 0x9c, 0x90, 0x48, 0x4a, 0x1c, 0xe3, 0x70, 0x8b, 0x53, 0x70,
	0x69, 0xe8, 0x43, 0xe8, 0xb8, 0x41, 0x4c, 0x89, 0xa7, 0x5b, 0x30, 0x42, 0x0f, 0x92, 0x46, 0xe8,
	0xff, 0x9d, 0x01, 0xef, 0x71, 0x03, 0xf6, 0x93, 0x24, 0xf0, 0x5d, 0xdc, 0x0f, 0xc8, 0xa1, 0x4f,
	0x02, 0xef, 0x09, 0x19, 0x4c, 0x2f, 0x06, 0xaf, 0xe0, 0xd6, 0x58, 0x13, 0x54, 0x18, 0x1e, 0x02,
	0x0c, 0x38, 0xd0, 0xf1, 0x8a, 0x38, 0x68, 0x52, 0x33, 0x06, 0xbb, 0x3d, 0xc8, 0x58, 0xad, 0x7f,
	0xcc, 0x02, 0x7a, 0x9d, 0x78, 0x6f, 0x97, 0x8f, 0xbe, 0x6d, 0x12, 0x40, 0x5b, 0x00, 0x94, 0x44,
	0x9e, 0x43, 0x42, 0xec, 0x07, 0xe2, 0xc2, 0xb5, 0xec, 0x36, 0x87, 0x3c, 0xe5, 0x00, 0xf4, 0x5d,
	0x98, 0xf7, 0x48, 0xc0, 0x70, 0x6f, 0xae, 0x7a, 0x89, 0x84, 0xac, 0x27, 0x1c, 0x67, 0x4b, 0x12,
	0x74, 0x0f, 0x96, 0x79, 0xa2, 0x26, 0x11, 0x73, 0xdc, 0x38, 0x62, 0x24, 0x62, 0xe2, 0xea, 0xb5,
	0xed, 0x25, 0x05, 0x3e, 0x90, 0x50, 0xb4, 0x03, 0x4b, 0x3e, 0x75, 0x3c, 0x42, 0xdd, 0xd4, 0x4f,
	0xc4, 0x15, 0x5d, 0x10, 0x7a, 0xbb, 0x3e, 0x7d, 0x52, 0x00, 0xd1, 0x47, 0xd0, 0x1c, 0x26, 0x41,
	0x8c, 0x3d, 0xda, 0x6b, 0x8a, 0x00, 0x9a, 0x85, 0xf6, 0x7d, 0xc6, 0xb0, 0x7b, 0xca, 0x85, 0xbe,
	0x16, 0x24, 0x76, 0x46, 0x6a, 0x7d, 0x6d, 0xc0, 0xb5, 0x63, 0x86, 0xd3, 0x69, 0x06, 0xb1, 0x07,
	0x4d, 0xca, 0x70, 0x9a, 0x12, 0x4f, 0x45, 0x30, 0x5b, 0x5a, 0x8f, 0x60, 0x45, 0x33, 0x46, 0x1d,
	0x0e, 0x1e, 0x73, 0x86, 0x53, 0xc7, 0x8d, 0x87, 0x11, 0x13, 0x26, 0x75, 0xed, 0x36, 0x87, 0x1c,
	0x70, 0x80, 0x75, 0x06, 0x6b, 0xcf, 0xa8, 0xe0, 0x38, 0x96, 0x52, 0xa6, 0x54, 0x0f, 0x7e, 0x08,
	0xeb, 0x55, 0xbd, 0x85, 0xc1, 0x3e, 0x75, 0x32, 0x17, 0x0d, 0x79, 0x48, 0x7c, 0xaa, 0xc8, 0x2c,
	0x06, 0xd7, 0xf9, 0x7d, 0x38, 0x90, 0xbb, 0x4c, 0xa7, 0x64, 0xee, 0x53, 0x58, 0x2d, 0x6b, 0x55,
	0xc6, 0x7e, 0x00, 0x2d, 0x75, 0xde, 0xb2, 0x8b, 0xb7, 0x52, 0xc8, 0x51, 0xd4, 0x76, 0x4e, 0x62,
	0xfd, 0xd1, 0x80, 0x35, 0x71, 0x9b, 0x5d, 0xe6, 0x9f, 0xf9, 0xcc, 0xbf, 0x6a, 0x2e, 0x7d, 0x00,
	0xad, 0x21, 0x25, 0xa9, 0x66, 0xbe, 0xa6, 0xf6, 0x35, 0x25, 0x29, 0xb7, 0xbe, 0x39, 0x94, 0x1f,
	0x68, 0x1d, 0x16, 0xfa, 0x64, 0x10, 0xa7, 0xb2, 0x2b, 0x68, 0xda, 0x6a, 0xc5, 0xeb, 0x22, 0x1e,
	0x30, 0x92, 0x8a, 0xfb, 0xd6, 0xb4, 0xe5, 0xc2, 0xfa, 0xca, 0x80, 0xf5, 0xaa, 0x8d, 0x57, 0xf2,
	0x16, 0xfd, 0x14, 0x96, 0x65, 0x94, 0xe9, 0x30, 0x0c, 0x71, 0xea, 0x93, 0x2c, 0xe5, 0xad, 0x57,
	0x62, 0x7d, 0x2c, 0xf0, 0xe7, 0xf6, 0x92, 0x5f, 0xac, 0x7c, 0x42, 0xad, 0xbf, 0x18, 0xb0, 0xfa,
	0x84, 0x04, 0x84, 0x91, 0x4c, 0xf8, 0x74, 0xae, 0xd8, 0x6d, 0x58, 0xa4, 0x5c, 0x4e, 0xe4, 0x12,
	0x27, 0x1a, 0x86, 0x22, 0x6c, 0x0d, 0xbb, 0x93, 0xc1, 0x5e, 0x0c, 0x43, 0x1e, 0x53, 0x4f, 0x58,
	0x26, 0x82, 0xd7, 0xb2, 0xd5, 0xca, 0xfa, 0xdb, 0x2c, 0x98, 0x8f, 0x87, 0xc1, 0x1b, 0x99, 0x5c,
	0xf7, 0x93, 0x24, 0x8d, 0xcf, 0x70, 0x30, 0xb5, 0x72, 0xc1, 0x7d, 0x95, 0xb5, 0x80, 0xfb, 0xda,
	0xa8, 0xfa, 0x2a, 0x4a, 0x81, 0xf0, 0x75, 0xa0, 0xbe, 0xd0, 0x4f, 0x60, 0x09, 0x2b, 0x2b, 0x1d,
	0x3d, 0xfb, 0xde, 0xd0, 0xf2, 0x9f, 0xc2, 0xcb, 0x04, 0xdc, 0xc5, 0xfa, 0xf2, 0xf2, 0x89, 0xb8,
	0x9c, 0xfc, 0x17, 0x2a, 0xc9, 0xdf, 0x3a, 0x82, 0x8d, 0xda, 0xb8, 0x15, 0x35, 0x4e, 0x0b, 0x85,
	0x71, 0x99, 0xca, 0xf9, 0x4d, 0x03, 0xd6, 0xca, 0xe2, 0xa6, 0x74, 0x7c, 0xfe, 0x5f, 0xf7, 0xa0,
	0xa6, 0x56, 0x36, 0x2f, 0xa8, 0x95, 0xad, 0xcb, 0xd7, 0xca, 0x4f, 0x61, 0xbd, 0xba, 0x1b, 0x6a,
	0x6f, 0x77, 0xa1, 0x95, 0xf9, 0xa3, 0x76, 0x04, 0x8d, 0x3a, 0x6e, 0xe7, 0x34, 0xd6, 0xbf, 0x0c,
	0xb8, 0x7b, 0x10, 0x47, 0x67, 0x24, 0x95, 0xed, 0x6f, 0x7e, 0x5a, 0x5e, 0x91, 0x30, 0x09, 0x30,
	0x9b, 0x56, 0x25, 0xe6, 0x3d, 0xb4, 0xd2, 0x28, 0x1f, 0x64, 0x0d, 0x11, 0xf4, 0xc5, 0x0c, 0x28,
	0x5e, 0x64, 0x35, 0x7b, 0x33, 0x77, 0x89, 0xbd, 0x99, 0xaf, 0xde, 0x8f, 0x17, 0xb0, 0x73, 0x81,
	0xcf, 0xdf, 0xee, 0x61, 0xf5, 0x1f, 0x03, 0x56, 0x65, 0xf2, 0x8d, 0x70, 0x42, 0x4f, 0xe3, 0x2b,
	0xe6, 0xd6, 0x4d, 0x68, 0x33, 0x3f, 0x24, 0x94, 0xe1, 0x30, 0x11, 0x41, 0x9b, 0xb7, 0x0b, 0x40,
	0xf1, 0xf2, 0x6a, 0x4c, 0x7a, 0x79, 0xcd, 0x09, 0xb6, 0xd2, 0xcb, 0xeb, 0x26, 0xb4, 0xb2, 0xe7,
	0x91, 0x3a, 0xca, 0x4d, 0xf5, 0x32, 0xe2, 0xdc, 0x01, 0xee, 0x93, 0xc0, 0x49, 0x52, 0x32, 0xf0,
	0x7f, 0x9d, 0x3d, 0x9c, 0x04, 0xec, 0x48, 0x80, 0x46, 0x1e, 0xca, 0xcd, 0x91, 0x87, 0xb2, 0xf5,
	0x29, 0xa0, 0x92, 0xf7, 0xa2, 0x1b, 0xe2, 0xde, 0x78, 0x7e, 0x48, 0x22, 0xca, 0xcf, 0xbe, 0x21,
	0xb8, 0x0a, 0x00, 0xf7, 0x46, 0x76, 0x51, 0xd2, 0x4f, 0xb9, 0xb0, 0xfe, 0x6e, 0xf0, 0x16, 0xaa,
	0x14, 0x48, 0xb5, 0x13, 0x07, 0xb0, 0x44, 0x15, 0x2c, 0x6f, 0xbf, 0xf8, 0x75, 0xd9, 0xac, 0x96,
	0x3f, 0xdd, 0x06, 0xbb, 0x4b, 0x4b, 0x26, 0x7d, 0x0f, 0x56, 0x86, 0x11, 0x1d, 0x26, 0x49, 0x9c,
	0x32, 0xe2, 0x39, 0x22, 0x67, 0x88, 0x52, 0xd0, 0xb6, 0xaf, 0x69, 0x08, 0x91, 0x55, 0xd0, 0x87,
	0xb0, 0x4a, 0x09, 0x4e, 0xdd, 0x53, 0x27, 0xf0, 0x43, 0x9f, 0x39, 0x29, 0xc1, 0xee, 0x69, 0xde,
	0x28, 0x22, 0x89, 0x7b, 0xce, 0x51, 0xb6, 0xc4, 0x58, 0x7f, 0x36, 0x60, 0xed, 0x88, 0xbf, 0x01,
	0xfb, 0xa1, 0x3f, 0xcd, 0x81, 0x00, 0xfa, 0x01, 0x74, 0x24, 0x83, 0x4c, 0x78, 0x8d, 0x09, 0x2d,
	0xbf, 0xcc, 0xfc, 0xe2, 0xdb, 0xfa, 0x43, 0x03, 0xd6, 0xab, 0xf6, 0xe6, 0xdd, 0x09, 0x8a, 0xbf,
	0x88, 0x48, 0xea, 0xe0, 0x33, 0xec, 0x07, 0xb8, 0xef, 0x07, 0x3e, 0x3b, 0x57, 0xbb, 0xb8, 0x22,
	0x30, 0xfb, 0x1a, 0x02, 0xfd, 0x08, 0x7a, 0xa3, 0xe4, 0xbc, 0xef, 0x64, 0xd9, 0x64, 0x65, 0x7d,
	0x84, 0xe9, 0x98, 0x63, 0xd1, 0x8f, 0x61, 0xc9, 0x23, 0xa9, 0x7f, 0x46, 0x3c, 0x47, 0x9c, 0x3a,
	0xda, 0x6b, 0x88, 0x7d, 0x5d, 0x2b, 0xac, 0xff, 0x05, 0x0e, 0x86, 0x64, 0x3f, 0xf2, 0x7e, 0x79,
	0x7a, 0x6e, 0x77, 0x15, 0xf1, 0x73, 0x41, 0xab, 0x73, 0x0b, 0xf9, 0x72, 0xaa, 0x70, 0x21, 0xf7,
	0x4b, 0x41, 0x8b, 0x3e, 0x86, 0x4e, 0xc6, 0xed, 0xba, 0xb4, 0x37, 0x3f, 0x89, 0x15, 0x14, 0xe5,
	0x81, 0x4b, 0xd1, 0x43, 0x68, 0x7d, 0x81, 0xd3, 0xc8, 0x8f, 0x4e, 0x68, 0x6f, 0x61, 0x12, 0x53,
	0x4e, 0x86, 0x3e, 0x80, 0x05, 0x92, 0xa6, 0x71, 0x9a, 0xbd, 0x88, 0xc6, 0x30, 0x28, 0x22, 0xeb,
	0xcb, 0x59, 0xd8, 0xb4, 0x49, 0x8a, 0xa3, 0x37, 0x8f, 0x83, 0xd8, 0x7d, 0x43, 0xbc, 0x97, 0xd1,
	0xdb, 0x8c, 0x0b, 0xae, 0x52, 0x75, 0xc3, 0xf8, 0x8c, 0x8c, 0xa9, 0xba, 0x05, 0x83, 0x20, 0xe2,
	0x0c, 0x0f, 0x01, 0x18, 0x4e, 0x4f, 0x08, 0x13, 0x1c, 0x73, 0x63, 0x39, 0xda, 0x92, 0x8a, 0xb3,
	0xdc, 0x82, 0x0e, 0x4d, 0x02, 0x9f, 0x39, 0xb8, 0x1f, 0x9f, 0x11, 0x95, 0xa4, 0x41, 0x80, 0xf6,
	0x39, 0xc4, 0x1a, 0xc0, 0xd6, 0x98, 0x18, 0xa8, 0x43, 0xfa, 0x14, 0xd6, 0xfa, 0x12, 0xe5, 0xc4,
	0x91, 0x73, 0xa9, 0x96, 0x06, 0xf5, 0x4b, 0xb2, 0x44, 0x6f, 0xf3, 0xb5, 0x01, 0x48, 0x76, 0xc6,
	0xd3, 0xbc, 0xb3, 0x45, 0xd3, 0xdb, 0x28, 0x35, 0xbd, 0x6b, 0x70, 0xbd, 0x64, 0x8c, 0xf4, 0xd5,
	0xfa, 0xab, 0x01, 0x37, 0x35, 0xf8, 0xff, 0xbe, 0x87, 0xef, 0x5e, 0xae, 0x87, 0xdf, 0x04, 0xb3,
	0xce, 0x6c, 0xe5, 0xd5, 0x3f, 0x0d, 0xb8, 0x21, 0xd1, 0x45, 0xaf, 0xf3, 0xee, 0xf8, 0x74, 0x07,
	0xba, 0x38, 0x37, 0xcb, 0xf1, 0x3d, 0xe1, 0x5a, 0xd7, 0x5e, 0x2c, 0x80, 0xcf, 0x3c, 0xcd, 0xf1,
	0xf9, 0x92, 0xe3, 0x26, 0xf4, 0x46, 0x3d, 0x53, 0x6e, 0x7f, 0x65, 0xc0, 0xca, 0x61, 0x80, 0x4f,
	0xa6, 0x3b, 0x02, 0x44, 0x08, 0xe6, 0x06, 0x01, 0x3e, 0x51, 0x07, 0x4e, 0x7c, 0x5b, 0xab, 0x80,
	0x74, 0x4b, 0x94, 0x81, 0x7f, 0x32, 0x24, 0xf8, 0x9d, 0x3b, 0x66, 0x99, 0x0b, 0x73, 0x9a, 0x0b,
	0x6b, 0x70, 0xbd, 0x64, 0xab, 0xf2, 0xe1, 0x37, 0x72, 0xe0, 0x2a, 0xf4, 0x1c, 0x91, 0x34, 0xf4,
	0x29, 0x6f, 0x3c, 0xa6, 0x35, 0xe4, 0xf8, 0x44, 0x8e, 0x5b, 0x47, 0xb5, 0xab, 0xdc, 0xb5, 0x0d,
	0x9d, 0xa4, 0x00, 0x8b, 0x8c, 0xc5, 0xbb, 0xaa, 0x02, 0xf4, 0xe8, 0xdf, 0xcb, 0xb0, 0x20, 0xb7,
	0x05, 0x1d, 0x42, 0x47, 0xfb, 0xe1, 0x81, 0xb4, 0x9e, 0x67, 0xf4, 0x3f, 0x88, 0x79, 0x63, 0xc4,
	0x2e, 0x15, 0x90, 0x19, 0xf4, 0x09, 0xb4, 0xb2, 0x5f, 0x15, 0xe8, 0x66, 0x41, 0x56, 0xf9, 0x7d,
	0x31, 0x49, 0xc2, 0x33, 0x80, 0x62, 0x52, 0x8e, 0x36, 0x0a, 0xc2, 0x91, 0xff, 0x0a, 0xe6, 0x66,
	0x3d, 0x32, 0x17, 0x75, 0x22, 0xc7, 0x40, 0xd5, 0x81, 0x34, 0xda, 0x29, 0xf3, 0x8d, 0x19, 0x98,
	0x9b, 0xef, 0x5f, 0x44, 0x96, 0x2b, 0x4a, 0xe0, 0xc6, 0x98, 0xa9, 0x2f, 0xba, 0x5f, 0x16, 0x32,
	0x7e, 0x36, 0x6d, 0x7e, 0xe7, 0x12, 0x94, 0xb9, 0xc6, 0x43, 0xe8, 0x68, 0x03, 0x61, 0x7d, 0xbf,
	0x46, 0xe7, 0xc4, 0x93, 0xa2, 0x7d, 0x08, 0xed, 0x7c, 0x08, 0x89, 0xb4, 0x87, 0x61, 0x75, 0x4c,
	0x6a, 0x6e, 0xd4, 0xe2, 0x72, 0x39, 0xaf, 0x61, 0xa9, 0x3c, 0x20, 0x44, 0xb7, 0x74, 0xa5, 0x35,
	0x23, 0x4b, 0x73, 0x7b, 0x3c, 0x41, 0x2e, 0xf6, 0x25, 0x2c, 0xea, 0x83, 0x3c, 0xb4, 0x55, 0x8e,
	0x51, 0x65, 0xac, 0x68, 0xbe, 0x37, 0x0e, 0xad, 0xdb, 0x59, 0x9e, 0x96, 0xe9, 0x76, 0xd6, 0xce,
	0xfa, 0x74, 0x3b, 0xeb, 0x07, 0x6d, 0xe2, 0xd0, 0x76, 0x4b, 0x93, 0x2f, 0xa4, 0x59, 0x52, 0x37,
	0x12, 0x33, 0xd7, 0x77, 0xe5, 0x3f, 0xce, 0xdd, 0xec, 0x1f, 0xe7, 0xee, 0xd3, 0x30, 0x61, 0xe7,
	0xd6, 0x0c, 0xf2, 0xe0, 0x7a, 0xcd, 0x64, 0x05, 0xdd, 0x2d, 0x04, 0x8e, 0x1f, 0x58, 0x99, 0x3b,
	0x17, 0x50, 0xe9, 0x71, 0x28, 0x23, 0xf5, 0x38, 0xd4, 0x8e, 0x61, 0xf4, 0x38, 0xd4, 0x4f, 0x06,
	0xac, 0x19, 0xf4, 0xa5, 0x01, 0x5b, 0x13, 0xdf, 0xbd, 0x68, 0x57, 0x1f, 0x41, 0x5e, 0x3c, 0x14,
	0x30, 0xf7, 0x2e, 0x4d, 0x9f, 0x1b, 0x61, 0xab, 0x9f, 0x97, 0xd9, 0x43, 0x4d, 0xdf, 0x8c, 0xba,
	0x37, 0xb4, 0x79, 0x6b, 0x2c, 0x5e, 0x8f, 0x57, 0xf9, 0x1d, 0xa3, 0xc7, 0xab, 0xf6, 0x45, 0xa6,
	0xc7, 0xab, 0xfe, 0x09, 0x64, 0xcd, 0xa0, 0xcf, 0x60, 0xad, 0xb6, 0x01, 0x45, 0xef, 0xeb, 0xc5,
	0x62, 0x7c, 0x97, 0x6e, 0xde, 0xbb, 0x90, 0x2e, 0xd7, 0xf5, 0x1c, 0x3a, 0x5a, 0x9f, 0xa4, 0xa7,
	0x8c, 0xd1, 0xd6, 0xd4, 0xdc, 0x1a, 0x83, 0xcd, 0xa5, 0xe1, 0x52, 0x47, 0x9b, 0x1d, 0xfb, 0x3b,
	0xb5, 0x6c, 0x95, 0xb3, 0x7f, 0x77, 0x32, 0x51, 0xae, 0xe2, 0x57, 0x70, 0xad, 0xda, 0xdf, 0xa0,
	0xdb, 0x55, 0xde, 0x91, 0xae, 0xce, 0xb4, 0x26, 0x91, 0xe8, 0x65, 0xa6, 0xe8, 0x4a, 0xf4, 0x32,
	0x33, 0xd2, 0x35, 0xe9, 0x65, 0xa6, 0xa6, 0x91, 0x11, 0x81, 0xd5, 0xba, 0x03, 0x54, 0x21, 0xaf,
	0x38, 0xbf, 0x35, 0x06, 0x5b, 0x2d, 0x5a, 0xd5, 0xb2, 0x5e, 0x2d, 0x5a, 0x63, 0x9a, 0x8e, 0x6a,
	0xd1, 0x1a, 0xd7, 0x1d, 0x58, 0x33, 0xfd, 0x05, 0x91, 0x7a, 0xbe, 0xff, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x02, 0xd4, 0x96, 0xb4, 0x94, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IssuesClient is the client API for Issues service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IssuesClient interface {
	CreateIssue(ctx context.Context, in *CreateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error)
	GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error)
	ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*ListIssuesResponse, error)
	ListReferencedIssues(ctx context.Context, in *ListReferencedIssuesRequest, opts ...grpc.CallOption) (*ListReferencedIssuesResponse, error)
	ListApplicableFieldDefs(ctx context.Context, in *ListApplicableFieldDefsRequest, opts ...grpc.CallOption) (*ListApplicableFieldDefsResponse, error)
	UpdateIssue(ctx context.Context, in *UpdateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error)
	StarIssue(ctx context.Context, in *StarIssueRequest, opts ...grpc.CallOption) (*StarIssueResponse, error)
	IsIssueStarred(ctx context.Context, in *IsIssueStarredRequest, opts ...grpc.CallOption) (*IsIssueStarredResponse, error)
	// There is no CreateComment method because comments are created by updates,
	// which may have just comment content and no delta.
	// There is no GetComment method, clients should use ListComments.
	ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error)
	ListActivities(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error)
	DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	BulkUpdateApprovals(ctx context.Context, in *BulkUpdateApprovalsRequest, opts ...grpc.CallOption) (*BulkUpdateApprovalsResponse, error)
	UpdateApproval(ctx context.Context, in *UpdateApprovalRequest, opts ...grpc.CallOption) (*UpdateApprovalResponse, error)
	ConvertIssueApprovalsTemplate(ctx context.Context, in *ConvertIssueApprovalsTemplateRequest, opts ...grpc.CallOption) (*ConvertIssueApprovalsTemplateResponse, error)
	IssueSnapshot(ctx context.Context, in *IssueSnapshotRequest, opts ...grpc.CallOption) (*IssueSnapshotResponse, error)
	PresubmitIssue(ctx context.Context, in *PresubmitIssueRequest, opts ...grpc.CallOption) (*PresubmitIssueResponse, error)
	RerankBlockedOnIssues(ctx context.Context, in *RerankBlockedOnIssuesRequest, opts ...grpc.CallOption) (*RerankBlockedOnIssuesResponse, error)
	DeleteIssue(ctx context.Context, in *DeleteIssueRequest, opts ...grpc.CallOption) (*DeleteIssueResponse, error)
	DeleteIssueComment(ctx context.Context, in *DeleteIssueCommentRequest, opts ...grpc.CallOption) (*DeleteIssueCommentResponse, error)
	DeleteAttachment(ctx context.Context, in *DeleteAttachmentRequest, opts ...grpc.CallOption) (*DeleteAttachmentResponse, error)
	FlagIssues(ctx context.Context, in *FlagIssuesRequest, opts ...grpc.CallOption) (*FlagIssuesResponse, error)
	FlagComment(ctx context.Context, in *FlagCommentRequest, opts ...grpc.CallOption) (*FlagCommentResponse, error)
	ListIssuePermissions(ctx context.Context, in *ListIssuePermissionsRequest, opts ...grpc.CallOption) (*ListIssuePermissionsResponse, error)
}
type issuesPRPCClient struct {
	client *prpc.Client
}

func NewIssuesPRPCClient(client *prpc.Client) IssuesClient {
	return &issuesPRPCClient{client}
}

func (c *issuesPRPCClient) CreateIssue(ctx context.Context, in *CreateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "CreateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "GetIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*ListIssuesResponse, error) {
	out := new(ListIssuesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListReferencedIssues(ctx context.Context, in *ListReferencedIssuesRequest, opts ...grpc.CallOption) (*ListReferencedIssuesResponse, error) {
	out := new(ListReferencedIssuesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListReferencedIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListApplicableFieldDefs(ctx context.Context, in *ListApplicableFieldDefsRequest, opts ...grpc.CallOption) (*ListApplicableFieldDefsResponse, error) {
	out := new(ListApplicableFieldDefsResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListApplicableFieldDefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) UpdateIssue(ctx context.Context, in *UpdateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "UpdateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) StarIssue(ctx context.Context, in *StarIssueRequest, opts ...grpc.CallOption) (*StarIssueResponse, error) {
	out := new(StarIssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "StarIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) IsIssueStarred(ctx context.Context, in *IsIssueStarredRequest, opts ...grpc.CallOption) (*IsIssueStarredResponse, error) {
	out := new(IsIssueStarredResponse)
	err := c.client.Call(ctx, "monorail.Issues", "IsIssueStarred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error) {
	out := new(ListCommentsResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListActivities(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error) {
	out := new(ListActivitiesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListActivities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.client.Call(ctx, "monorail.Issues", "DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) BulkUpdateApprovals(ctx context.Context, in *BulkUpdateApprovalsRequest, opts ...grpc.CallOption) (*BulkUpdateApprovalsResponse, error) {
	out := new(BulkUpdateApprovalsResponse)
	err := c.client.Call(ctx, "monorail.Issues", "BulkUpdateApprovals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) UpdateApproval(ctx context.Context, in *UpdateApprovalRequest, opts ...grpc.CallOption) (*UpdateApprovalResponse, error) {
	out := new(UpdateApprovalResponse)
	err := c.client.Call(ctx, "monorail.Issues", "UpdateApproval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ConvertIssueApprovalsTemplate(ctx context.Context, in *ConvertIssueApprovalsTemplateRequest, opts ...grpc.CallOption) (*ConvertIssueApprovalsTemplateResponse, error) {
	out := new(ConvertIssueApprovalsTemplateResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ConvertIssueApprovalsTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) IssueSnapshot(ctx context.Context, in *IssueSnapshotRequest, opts ...grpc.CallOption) (*IssueSnapshotResponse, error) {
	out := new(IssueSnapshotResponse)
	err := c.client.Call(ctx, "monorail.Issues", "IssueSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) PresubmitIssue(ctx context.Context, in *PresubmitIssueRequest, opts ...grpc.CallOption) (*PresubmitIssueResponse, error) {
	out := new(PresubmitIssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "PresubmitIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) RerankBlockedOnIssues(ctx context.Context, in *RerankBlockedOnIssuesRequest, opts ...grpc.CallOption) (*RerankBlockedOnIssuesResponse, error) {
	out := new(RerankBlockedOnIssuesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "RerankBlockedOnIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) DeleteIssue(ctx context.Context, in *DeleteIssueRequest, opts ...grpc.CallOption) (*DeleteIssueResponse, error) {
	out := new(DeleteIssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "DeleteIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) DeleteIssueComment(ctx context.Context, in *DeleteIssueCommentRequest, opts ...grpc.CallOption) (*DeleteIssueCommentResponse, error) {
	out := new(DeleteIssueCommentResponse)
	err := c.client.Call(ctx, "monorail.Issues", "DeleteIssueComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) DeleteAttachment(ctx context.Context, in *DeleteAttachmentRequest, opts ...grpc.CallOption) (*DeleteAttachmentResponse, error) {
	out := new(DeleteAttachmentResponse)
	err := c.client.Call(ctx, "monorail.Issues", "DeleteAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) FlagIssues(ctx context.Context, in *FlagIssuesRequest, opts ...grpc.CallOption) (*FlagIssuesResponse, error) {
	out := new(FlagIssuesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "FlagIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) FlagComment(ctx context.Context, in *FlagCommentRequest, opts ...grpc.CallOption) (*FlagCommentResponse, error) {
	out := new(FlagCommentResponse)
	err := c.client.Call(ctx, "monorail.Issues", "FlagComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListIssuePermissions(ctx context.Context, in *ListIssuePermissionsRequest, opts ...grpc.CallOption) (*ListIssuePermissionsResponse, error) {
	out := new(ListIssuePermissionsResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListIssuePermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type issuesClient struct {
	cc *grpc.ClientConn
}

func NewIssuesClient(cc *grpc.ClientConn) IssuesClient {
	return &issuesClient{cc}
}

func (c *issuesClient) CreateIssue(ctx context.Context, in *CreateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/CreateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/GetIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*ListIssuesResponse, error) {
	out := new(ListIssuesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListReferencedIssues(ctx context.Context, in *ListReferencedIssuesRequest, opts ...grpc.CallOption) (*ListReferencedIssuesResponse, error) {
	out := new(ListReferencedIssuesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListReferencedIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListApplicableFieldDefs(ctx context.Context, in *ListApplicableFieldDefsRequest, opts ...grpc.CallOption) (*ListApplicableFieldDefsResponse, error) {
	out := new(ListApplicableFieldDefsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListApplicableFieldDefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) UpdateIssue(ctx context.Context, in *UpdateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/UpdateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) StarIssue(ctx context.Context, in *StarIssueRequest, opts ...grpc.CallOption) (*StarIssueResponse, error) {
	out := new(StarIssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/StarIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) IsIssueStarred(ctx context.Context, in *IsIssueStarredRequest, opts ...grpc.CallOption) (*IsIssueStarredResponse, error) {
	out := new(IsIssueStarredResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/IsIssueStarred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error) {
	out := new(ListCommentsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListActivities(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error) {
	out := new(ListActivitiesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListActivities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/monorail.Issues/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) BulkUpdateApprovals(ctx context.Context, in *BulkUpdateApprovalsRequest, opts ...grpc.CallOption) (*BulkUpdateApprovalsResponse, error) {
	out := new(BulkUpdateApprovalsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/BulkUpdateApprovals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) UpdateApproval(ctx context.Context, in *UpdateApprovalRequest, opts ...grpc.CallOption) (*UpdateApprovalResponse, error) {
	out := new(UpdateApprovalResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/UpdateApproval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ConvertIssueApprovalsTemplate(ctx context.Context, in *ConvertIssueApprovalsTemplateRequest, opts ...grpc.CallOption) (*ConvertIssueApprovalsTemplateResponse, error) {
	out := new(ConvertIssueApprovalsTemplateResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ConvertIssueApprovalsTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) IssueSnapshot(ctx context.Context, in *IssueSnapshotRequest, opts ...grpc.CallOption) (*IssueSnapshotResponse, error) {
	out := new(IssueSnapshotResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/IssueSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) PresubmitIssue(ctx context.Context, in *PresubmitIssueRequest, opts ...grpc.CallOption) (*PresubmitIssueResponse, error) {
	out := new(PresubmitIssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/PresubmitIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) RerankBlockedOnIssues(ctx context.Context, in *RerankBlockedOnIssuesRequest, opts ...grpc.CallOption) (*RerankBlockedOnIssuesResponse, error) {
	out := new(RerankBlockedOnIssuesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/RerankBlockedOnIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) DeleteIssue(ctx context.Context, in *DeleteIssueRequest, opts ...grpc.CallOption) (*DeleteIssueResponse, error) {
	out := new(DeleteIssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/DeleteIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) DeleteIssueComment(ctx context.Context, in *DeleteIssueCommentRequest, opts ...grpc.CallOption) (*DeleteIssueCommentResponse, error) {
	out := new(DeleteIssueCommentResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/DeleteIssueComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) DeleteAttachment(ctx context.Context, in *DeleteAttachmentRequest, opts ...grpc.CallOption) (*DeleteAttachmentResponse, error) {
	out := new(DeleteAttachmentResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/DeleteAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) FlagIssues(ctx context.Context, in *FlagIssuesRequest, opts ...grpc.CallOption) (*FlagIssuesResponse, error) {
	out := new(FlagIssuesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/FlagIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) FlagComment(ctx context.Context, in *FlagCommentRequest, opts ...grpc.CallOption) (*FlagCommentResponse, error) {
	out := new(FlagCommentResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/FlagComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListIssuePermissions(ctx context.Context, in *ListIssuePermissionsRequest, opts ...grpc.CallOption) (*ListIssuePermissionsResponse, error) {
	out := new(ListIssuePermissionsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListIssuePermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IssuesServer is the server API for Issues service.
type IssuesServer interface {
	CreateIssue(context.Context, *CreateIssueRequest) (*IssueResponse, error)
	GetIssue(context.Context, *GetIssueRequest) (*IssueResponse, error)
	ListIssues(context.Context, *ListIssuesRequest) (*ListIssuesResponse, error)
	ListReferencedIssues(context.Context, *ListReferencedIssuesRequest) (*ListReferencedIssuesResponse, error)
	ListApplicableFieldDefs(context.Context, *ListApplicableFieldDefsRequest) (*ListApplicableFieldDefsResponse, error)
	UpdateIssue(context.Context, *UpdateIssueRequest) (*IssueResponse, error)
	StarIssue(context.Context, *StarIssueRequest) (*StarIssueResponse, error)
	IsIssueStarred(context.Context, *IsIssueStarredRequest) (*IsIssueStarredResponse, error)
	// There is no CreateComment method because comments are created by updates,
	// which may have just comment content and no delta.
	// There is no GetComment method, clients should use ListComments.
	ListComments(context.Context, *ListCommentsRequest) (*ListCommentsResponse, error)
	ListActivities(context.Context, *ListActivitiesRequest) (*ListActivitiesResponse, error)
	DeleteComment(context.Context, *DeleteCommentRequest) (*empty.Empty, error)
	BulkUpdateApprovals(context.Context, *BulkUpdateApprovalsRequest) (*BulkUpdateApprovalsResponse, error)
	UpdateApproval(context.Context, *UpdateApprovalRequest) (*UpdateApprovalResponse, error)
	ConvertIssueApprovalsTemplate(context.Context, *ConvertIssueApprovalsTemplateRequest) (*ConvertIssueApprovalsTemplateResponse, error)
	IssueSnapshot(context.Context, *IssueSnapshotRequest) (*IssueSnapshotResponse, error)
	PresubmitIssue(context.Context, *PresubmitIssueRequest) (*PresubmitIssueResponse, error)
	RerankBlockedOnIssues(context.Context, *RerankBlockedOnIssuesRequest) (*RerankBlockedOnIssuesResponse, error)
	DeleteIssue(context.Context, *DeleteIssueRequest) (*DeleteIssueResponse, error)
	DeleteIssueComment(context.Context, *DeleteIssueCommentRequest) (*DeleteIssueCommentResponse, error)
	DeleteAttachment(context.Context, *DeleteAttachmentRequest) (*DeleteAttachmentResponse, error)
	FlagIssues(context.Context, *FlagIssuesRequest) (*FlagIssuesResponse, error)
	FlagComment(context.Context, *FlagCommentRequest) (*FlagCommentResponse, error)
	ListIssuePermissions(context.Context, *ListIssuePermissionsRequest) (*ListIssuePermissionsResponse, error)
}

func RegisterIssuesServer(s prpc.Registrar, srv IssuesServer) {
	s.RegisterService(&_Issues_serviceDesc, srv)
}

func _Issues_CreateIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).CreateIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/CreateIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).CreateIssue(ctx, req.(*CreateIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_GetIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).GetIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/GetIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).GetIssue(ctx, req.(*GetIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListIssues(ctx, req.(*ListIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListReferencedIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReferencedIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListReferencedIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListReferencedIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListReferencedIssues(ctx, req.(*ListReferencedIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListApplicableFieldDefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApplicableFieldDefsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListApplicableFieldDefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListApplicableFieldDefs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListApplicableFieldDefs(ctx, req.(*ListApplicableFieldDefsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_UpdateIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).UpdateIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/UpdateIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).UpdateIssue(ctx, req.(*UpdateIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_StarIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StarIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).StarIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/StarIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).StarIssue(ctx, req.(*StarIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_IsIssueStarred_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsIssueStarredRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).IsIssueStarred(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/IsIssueStarred",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).IsIssueStarred(ctx, req.(*IsIssueStarredRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListComments(ctx, req.(*ListCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListActivitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListActivities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListActivities(ctx, req.(*ListActivitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).DeleteComment(ctx, req.(*DeleteCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_BulkUpdateApprovals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkUpdateApprovalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).BulkUpdateApprovals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/BulkUpdateApprovals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).BulkUpdateApprovals(ctx, req.(*BulkUpdateApprovalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_UpdateApproval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateApprovalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).UpdateApproval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/UpdateApproval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).UpdateApproval(ctx, req.(*UpdateApprovalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ConvertIssueApprovalsTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConvertIssueApprovalsTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ConvertIssueApprovalsTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ConvertIssueApprovalsTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ConvertIssueApprovalsTemplate(ctx, req.(*ConvertIssueApprovalsTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_IssueSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssueSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).IssueSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/IssueSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).IssueSnapshot(ctx, req.(*IssueSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_PresubmitIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresubmitIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).PresubmitIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/PresubmitIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).PresubmitIssue(ctx, req.(*PresubmitIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_RerankBlockedOnIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RerankBlockedOnIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).RerankBlockedOnIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/RerankBlockedOnIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).RerankBlockedOnIssues(ctx, req.(*RerankBlockedOnIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_DeleteIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).DeleteIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/DeleteIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).DeleteIssue(ctx, req.(*DeleteIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_DeleteIssueComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIssueCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).DeleteIssueComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/DeleteIssueComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).DeleteIssueComment(ctx, req.(*DeleteIssueCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_DeleteAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAttachmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).DeleteAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/DeleteAttachment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).DeleteAttachment(ctx, req.(*DeleteAttachmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_FlagIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlagIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).FlagIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/FlagIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).FlagIssues(ctx, req.(*FlagIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_FlagComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlagCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).FlagComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/FlagComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).FlagComment(ctx, req.(*FlagCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListIssuePermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIssuePermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListIssuePermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListIssuePermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListIssuePermissions(ctx, req.(*ListIssuePermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Issues_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monorail.Issues",
	HandlerType: (*IssuesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIssue",
			Handler:    _Issues_CreateIssue_Handler,
		},
		{
			MethodName: "GetIssue",
			Handler:    _Issues_GetIssue_Handler,
		},
		{
			MethodName: "ListIssues",
			Handler:    _Issues_ListIssues_Handler,
		},
		{
			MethodName: "ListReferencedIssues",
			Handler:    _Issues_ListReferencedIssues_Handler,
		},
		{
			MethodName: "ListApplicableFieldDefs",
			Handler:    _Issues_ListApplicableFieldDefs_Handler,
		},
		{
			MethodName: "UpdateIssue",
			Handler:    _Issues_UpdateIssue_Handler,
		},
		{
			MethodName: "StarIssue",
			Handler:    _Issues_StarIssue_Handler,
		},
		{
			MethodName: "IsIssueStarred",
			Handler:    _Issues_IsIssueStarred_Handler,
		},
		{
			MethodName: "ListComments",
			Handler:    _Issues_ListComments_Handler,
		},
		{
			MethodName: "ListActivities",
			Handler:    _Issues_ListActivities_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _Issues_DeleteComment_Handler,
		},
		{
			MethodName: "BulkUpdateApprovals",
			Handler:    _Issues_BulkUpdateApprovals_Handler,
		},
		{
			MethodName: "UpdateApproval",
			Handler:    _Issues_UpdateApproval_Handler,
		},
		{
			MethodName: "ConvertIssueApprovalsTemplate",
			Handler:    _Issues_ConvertIssueApprovalsTemplate_Handler,
		},
		{
			MethodName: "IssueSnapshot",
			Handler:    _Issues_IssueSnapshot_Handler,
		},
		{
			MethodName: "PresubmitIssue",
			Handler:    _Issues_PresubmitIssue_Handler,
		},
		{
			MethodName: "RerankBlockedOnIssues",
			Handler:    _Issues_RerankBlockedOnIssues_Handler,
		},
		{
			MethodName: "DeleteIssue",
			Handler:    _Issues_DeleteIssue_Handler,
		},
		{
			MethodName: "DeleteIssueComment",
			Handler:    _Issues_DeleteIssueComment_Handler,
		},
		{
			MethodName: "DeleteAttachment",
			Handler:    _Issues_DeleteAttachment_Handler,
		},
		{
			MethodName: "FlagIssues",
			Handler:    _Issues_FlagIssues_Handler,
		},
		{
			MethodName: "FlagComment",
			Handler:    _Issues_FlagComment_Handler,
		},
		{
			MethodName: "ListIssuePermissions",
			Handler:    _Issues_ListIssuePermissions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api_proto/issues.proto",
}
