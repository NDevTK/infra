// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api_proto/issues.proto

package monorail

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Next available tag: 3
type AttachmentUpload struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachmentUpload) Reset()         { *m = AttachmentUpload{} }
func (m *AttachmentUpload) String() string { return proto.CompactTextString(m) }
func (*AttachmentUpload) ProtoMessage()    {}
func (*AttachmentUpload) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{0}
}
func (m *AttachmentUpload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachmentUpload.Unmarshal(m, b)
}
func (m *AttachmentUpload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachmentUpload.Marshal(b, m, deterministic)
}
func (m *AttachmentUpload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachmentUpload.Merge(m, src)
}
func (m *AttachmentUpload) XXX_Size() int {
	return xxx_messageInfo_AttachmentUpload.Size(m)
}
func (m *AttachmentUpload) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachmentUpload.DiscardUnknown(m)
}

var xxx_messageInfo_AttachmentUpload proto.InternalMessageInfo

func (m *AttachmentUpload) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *AttachmentUpload) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// Next available tag: 4
type CreateIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	ProjectName          string        `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Issue                *Issue        `protobuf:"bytes,3,opt,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateIssueRequest) Reset()         { *m = CreateIssueRequest{} }
func (m *CreateIssueRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIssueRequest) ProtoMessage()    {}
func (*CreateIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{1}
}
func (m *CreateIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIssueRequest.Unmarshal(m, b)
}
func (m *CreateIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIssueRequest.Marshal(b, m, deterministic)
}
func (m *CreateIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIssueRequest.Merge(m, src)
}
func (m *CreateIssueRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIssueRequest.Size(m)
}
func (m *CreateIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIssueRequest proto.InternalMessageInfo

func (m *CreateIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *CreateIssueRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *CreateIssueRequest) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

// Next available tag: 3
type GetIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetIssueRequest) Reset()         { *m = GetIssueRequest{} }
func (m *GetIssueRequest) String() string { return proto.CompactTextString(m) }
func (*GetIssueRequest) ProtoMessage()    {}
func (*GetIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{2}
}
func (m *GetIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIssueRequest.Unmarshal(m, b)
}
func (m *GetIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIssueRequest.Marshal(b, m, deterministic)
}
func (m *GetIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIssueRequest.Merge(m, src)
}
func (m *GetIssueRequest) XXX_Size() int {
	return xxx_messageInfo_GetIssueRequest.Size(m)
}
func (m *GetIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIssueRequest proto.InternalMessageInfo

func (m *GetIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *GetIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

// Next available tag: 2
type IssueResponse struct {
	Issue                *Issue   `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueResponse) Reset()         { *m = IssueResponse{} }
func (m *IssueResponse) String() string { return proto.CompactTextString(m) }
func (*IssueResponse) ProtoMessage()    {}
func (*IssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{3}
}
func (m *IssueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueResponse.Unmarshal(m, b)
}
func (m *IssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueResponse.Marshal(b, m, deterministic)
}
func (m *IssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueResponse.Merge(m, src)
}
func (m *IssueResponse) XXX_Size() int {
	return xxx_messageInfo_IssueResponse.Size(m)
}
func (m *IssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IssueResponse proto.InternalMessageInfo

func (m *IssueResponse) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

// Next available tag: 8
type ListIssuesRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	Query                string        `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	CannedQuery          uint32        `protobuf:"varint,3,opt,name=canned_query,json=cannedQuery,proto3" json:"canned_query,omitempty"`
	ProjectNames         []string      `protobuf:"bytes,4,rep,name=project_names,json=projectNames,proto3" json:"project_names,omitempty"`
	Pagination           *Pagination   `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
	GroupBySpec          string        `protobuf:"bytes,6,opt,name=group_by_spec,json=groupBySpec,proto3" json:"group_by_spec,omitempty"`
	SortSpec             string        `protobuf:"bytes,7,opt,name=sort_spec,json=sortSpec,proto3" json:"sort_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListIssuesRequest) Reset()         { *m = ListIssuesRequest{} }
func (m *ListIssuesRequest) String() string { return proto.CompactTextString(m) }
func (*ListIssuesRequest) ProtoMessage()    {}
func (*ListIssuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{4}
}
func (m *ListIssuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssuesRequest.Unmarshal(m, b)
}
func (m *ListIssuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssuesRequest.Marshal(b, m, deterministic)
}
func (m *ListIssuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssuesRequest.Merge(m, src)
}
func (m *ListIssuesRequest) XXX_Size() int {
	return xxx_messageInfo_ListIssuesRequest.Size(m)
}
func (m *ListIssuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssuesRequest proto.InternalMessageInfo

func (m *ListIssuesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListIssuesRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ListIssuesRequest) GetCannedQuery() uint32 {
	if m != nil {
		return m.CannedQuery
	}
	return 0
}

func (m *ListIssuesRequest) GetProjectNames() []string {
	if m != nil {
		return m.ProjectNames
	}
	return nil
}

func (m *ListIssuesRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListIssuesRequest) GetGroupBySpec() string {
	if m != nil {
		return m.GroupBySpec
	}
	return ""
}

func (m *ListIssuesRequest) GetSortSpec() string {
	if m != nil {
		return m.SortSpec
	}
	return ""
}

// Next available tag: 3
type ListIssuesResponse struct {
	Issues               []*Issue `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
	TotalResults         uint32   `protobuf:"varint,2,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIssuesResponse) Reset()         { *m = ListIssuesResponse{} }
func (m *ListIssuesResponse) String() string { return proto.CompactTextString(m) }
func (*ListIssuesResponse) ProtoMessage()    {}
func (*ListIssuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{5}
}
func (m *ListIssuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssuesResponse.Unmarshal(m, b)
}
func (m *ListIssuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssuesResponse.Marshal(b, m, deterministic)
}
func (m *ListIssuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssuesResponse.Merge(m, src)
}
func (m *ListIssuesResponse) XXX_Size() int {
	return xxx_messageInfo_ListIssuesResponse.Size(m)
}
func (m *ListIssuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssuesResponse proto.InternalMessageInfo

func (m *ListIssuesResponse) GetIssues() []*Issue {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *ListIssuesResponse) GetTotalResults() uint32 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

// Next available tag: 3
type ListReferencedIssuesRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRefs            []*IssueRef   `protobuf:"bytes,2,rep,name=issue_refs,json=issueRefs,proto3" json:"issue_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListReferencedIssuesRequest) Reset()         { *m = ListReferencedIssuesRequest{} }
func (m *ListReferencedIssuesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReferencedIssuesRequest) ProtoMessage()    {}
func (*ListReferencedIssuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{6}
}
func (m *ListReferencedIssuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReferencedIssuesRequest.Unmarshal(m, b)
}
func (m *ListReferencedIssuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReferencedIssuesRequest.Marshal(b, m, deterministic)
}
func (m *ListReferencedIssuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReferencedIssuesRequest.Merge(m, src)
}
func (m *ListReferencedIssuesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReferencedIssuesRequest.Size(m)
}
func (m *ListReferencedIssuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReferencedIssuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReferencedIssuesRequest proto.InternalMessageInfo

func (m *ListReferencedIssuesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListReferencedIssuesRequest) GetIssueRefs() []*IssueRef {
	if m != nil {
		return m.IssueRefs
	}
	return nil
}

// Next available tag: 2
type ListReferencedIssuesResponse struct {
	OpenRefs             []*IssueRef `protobuf:"bytes,1,rep,name=open_refs,json=openRefs,proto3" json:"open_refs,omitempty"`
	ClosedRefs           []*IssueRef `protobuf:"bytes,2,rep,name=closed_refs,json=closedRefs,proto3" json:"closed_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListReferencedIssuesResponse) Reset()         { *m = ListReferencedIssuesResponse{} }
func (m *ListReferencedIssuesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReferencedIssuesResponse) ProtoMessage()    {}
func (*ListReferencedIssuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{7}
}
func (m *ListReferencedIssuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReferencedIssuesResponse.Unmarshal(m, b)
}
func (m *ListReferencedIssuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReferencedIssuesResponse.Marshal(b, m, deterministic)
}
func (m *ListReferencedIssuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReferencedIssuesResponse.Merge(m, src)
}
func (m *ListReferencedIssuesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReferencedIssuesResponse.Size(m)
}
func (m *ListReferencedIssuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReferencedIssuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReferencedIssuesResponse proto.InternalMessageInfo

func (m *ListReferencedIssuesResponse) GetOpenRefs() []*IssueRef {
	if m != nil {
		return m.OpenRefs
	}
	return nil
}

func (m *ListReferencedIssuesResponse) GetClosedRefs() []*IssueRef {
	if m != nil {
		return m.ClosedRefs
	}
	return nil
}

// Next available tag: 8
type UpdateIssueRequest struct {
	Trace                *RequestTrace       `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef           `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	SendEmail            bool                `protobuf:"varint,3,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	Delta                *IssueDelta         `protobuf:"bytes,4,opt,name=delta,proto3" json:"delta,omitempty"`
	CommentContent       string              `protobuf:"bytes,5,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"`
	IsDescription        bool                `protobuf:"varint,6,opt,name=is_description,json=isDescription,proto3" json:"is_description,omitempty"`
	Uploads              []*AttachmentUpload `protobuf:"bytes,7,rep,name=uploads,proto3" json:"uploads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateIssueRequest) Reset()         { *m = UpdateIssueRequest{} }
func (m *UpdateIssueRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateIssueRequest) ProtoMessage()    {}
func (*UpdateIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{8}
}
func (m *UpdateIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIssueRequest.Unmarshal(m, b)
}
func (m *UpdateIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIssueRequest.Marshal(b, m, deterministic)
}
func (m *UpdateIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIssueRequest.Merge(m, src)
}
func (m *UpdateIssueRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateIssueRequest.Size(m)
}
func (m *UpdateIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIssueRequest proto.InternalMessageInfo

func (m *UpdateIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *UpdateIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *UpdateIssueRequest) GetSendEmail() bool {
	if m != nil {
		return m.SendEmail
	}
	return false
}

func (m *UpdateIssueRequest) GetDelta() *IssueDelta {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (m *UpdateIssueRequest) GetCommentContent() string {
	if m != nil {
		return m.CommentContent
	}
	return ""
}

func (m *UpdateIssueRequest) GetIsDescription() bool {
	if m != nil {
		return m.IsDescription
	}
	return false
}

func (m *UpdateIssueRequest) GetUploads() []*AttachmentUpload {
	if m != nil {
		return m.Uploads
	}
	return nil
}

// Next available tag: 4
type StarIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	Starred              bool          `protobuf:"varint,3,opt,name=starred,proto3" json:"starred,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StarIssueRequest) Reset()         { *m = StarIssueRequest{} }
func (m *StarIssueRequest) String() string { return proto.CompactTextString(m) }
func (*StarIssueRequest) ProtoMessage()    {}
func (*StarIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{9}
}
func (m *StarIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StarIssueRequest.Unmarshal(m, b)
}
func (m *StarIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StarIssueRequest.Marshal(b, m, deterministic)
}
func (m *StarIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StarIssueRequest.Merge(m, src)
}
func (m *StarIssueRequest) XXX_Size() int {
	return xxx_messageInfo_StarIssueRequest.Size(m)
}
func (m *StarIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StarIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StarIssueRequest proto.InternalMessageInfo

func (m *StarIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *StarIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *StarIssueRequest) GetStarred() bool {
	if m != nil {
		return m.Starred
	}
	return false
}

// Next available tag: 2
type StarIssueResponse struct {
	StarCount            uint32   `protobuf:"varint,1,opt,name=star_count,json=starCount,proto3" json:"star_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StarIssueResponse) Reset()         { *m = StarIssueResponse{} }
func (m *StarIssueResponse) String() string { return proto.CompactTextString(m) }
func (*StarIssueResponse) ProtoMessage()    {}
func (*StarIssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{10}
}
func (m *StarIssueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StarIssueResponse.Unmarshal(m, b)
}
func (m *StarIssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StarIssueResponse.Marshal(b, m, deterministic)
}
func (m *StarIssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StarIssueResponse.Merge(m, src)
}
func (m *StarIssueResponse) XXX_Size() int {
	return xxx_messageInfo_StarIssueResponse.Size(m)
}
func (m *StarIssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StarIssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StarIssueResponse proto.InternalMessageInfo

func (m *StarIssueResponse) GetStarCount() uint32 {
	if m != nil {
		return m.StarCount
	}
	return 0
}

// Next available tag: 3
type IsIssueStarredRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IsIssueStarredRequest) Reset()         { *m = IsIssueStarredRequest{} }
func (m *IsIssueStarredRequest) String() string { return proto.CompactTextString(m) }
func (*IsIssueStarredRequest) ProtoMessage()    {}
func (*IsIssueStarredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{11}
}
func (m *IsIssueStarredRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsIssueStarredRequest.Unmarshal(m, b)
}
func (m *IsIssueStarredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsIssueStarredRequest.Marshal(b, m, deterministic)
}
func (m *IsIssueStarredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsIssueStarredRequest.Merge(m, src)
}
func (m *IsIssueStarredRequest) XXX_Size() int {
	return xxx_messageInfo_IsIssueStarredRequest.Size(m)
}
func (m *IsIssueStarredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsIssueStarredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsIssueStarredRequest proto.InternalMessageInfo

func (m *IsIssueStarredRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *IsIssueStarredRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

// Next available tag: 2
type IsIssueStarredResponse struct {
	IsStarred            bool     `protobuf:"varint,1,opt,name=is_starred,json=isStarred,proto3" json:"is_starred,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsIssueStarredResponse) Reset()         { *m = IsIssueStarredResponse{} }
func (m *IsIssueStarredResponse) String() string { return proto.CompactTextString(m) }
func (*IsIssueStarredResponse) ProtoMessage()    {}
func (*IsIssueStarredResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{12}
}
func (m *IsIssueStarredResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsIssueStarredResponse.Unmarshal(m, b)
}
func (m *IsIssueStarredResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsIssueStarredResponse.Marshal(b, m, deterministic)
}
func (m *IsIssueStarredResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsIssueStarredResponse.Merge(m, src)
}
func (m *IsIssueStarredResponse) XXX_Size() int {
	return xxx_messageInfo_IsIssueStarredResponse.Size(m)
}
func (m *IsIssueStarredResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsIssueStarredResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsIssueStarredResponse proto.InternalMessageInfo

func (m *IsIssueStarredResponse) GetIsStarred() bool {
	if m != nil {
		return m.IsStarred
	}
	return false
}

// Next available tag: 3
type ListCommentsRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListCommentsRequest) Reset()         { *m = ListCommentsRequest{} }
func (m *ListCommentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommentsRequest) ProtoMessage()    {}
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{13}
}
func (m *ListCommentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsRequest.Unmarshal(m, b)
}
func (m *ListCommentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsRequest.Merge(m, src)
}
func (m *ListCommentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommentsRequest.Size(m)
}
func (m *ListCommentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsRequest proto.InternalMessageInfo

func (m *ListCommentsRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListCommentsRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

// Next available tag: 2
type ListCommentsResponse struct {
	// Comments are in chronological order.  The list of comments may
	// include deleted, spam, and description comments.  Spam and
	// deleted comments will only have content supplied if the user is
	// allowed to see it.
	Comments             []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListCommentsResponse) Reset()         { *m = ListCommentsResponse{} }
func (m *ListCommentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCommentsResponse) ProtoMessage()    {}
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{14}
}
func (m *ListCommentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsResponse.Unmarshal(m, b)
}
func (m *ListCommentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsResponse.Marshal(b, m, deterministic)
}
func (m *ListCommentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsResponse.Merge(m, src)
}
func (m *ListCommentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCommentsResponse.Size(m)
}
func (m *ListCommentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsResponse proto.InternalMessageInfo

func (m *ListCommentsResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

// Next available tag: 5
type ListActivitiesRequest struct {
	// TODO(tyreej) description
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	UserRef              *UserRef      `protobuf:"bytes,2,opt,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty"`
	Before               uint32        `protobuf:"fixed32,3,opt,name=before,proto3" json:"before,omitempty"`
	After                uint32        `protobuf:"fixed32,4,opt,name=after,proto3" json:"after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListActivitiesRequest) Reset()         { *m = ListActivitiesRequest{} }
func (m *ListActivitiesRequest) String() string { return proto.CompactTextString(m) }
func (*ListActivitiesRequest) ProtoMessage()    {}
func (*ListActivitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{15}
}
func (m *ListActivitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActivitiesRequest.Unmarshal(m, b)
}
func (m *ListActivitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActivitiesRequest.Marshal(b, m, deterministic)
}
func (m *ListActivitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActivitiesRequest.Merge(m, src)
}
func (m *ListActivitiesRequest) XXX_Size() int {
	return xxx_messageInfo_ListActivitiesRequest.Size(m)
}
func (m *ListActivitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActivitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListActivitiesRequest proto.InternalMessageInfo

func (m *ListActivitiesRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *ListActivitiesRequest) GetUserRef() *UserRef {
	if m != nil {
		return m.UserRef
	}
	return nil
}

func (m *ListActivitiesRequest) GetBefore() uint32 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *ListActivitiesRequest) GetAfter() uint32 {
	if m != nil {
		return m.After
	}
	return 0
}

// Next available tag: 3
type ListActivitiesResponse struct {
	// TODO(tyreej) description
	Comments             []*Comment      `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	IssueSummaries       []*IssueSummary `protobuf:"bytes,2,rep,name=issue_summaries,json=issueSummaries,proto3" json:"issue_summaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListActivitiesResponse) Reset()         { *m = ListActivitiesResponse{} }
func (m *ListActivitiesResponse) String() string { return proto.CompactTextString(m) }
func (*ListActivitiesResponse) ProtoMessage()    {}
func (*ListActivitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{16}
}
func (m *ListActivitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActivitiesResponse.Unmarshal(m, b)
}
func (m *ListActivitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActivitiesResponse.Marshal(b, m, deterministic)
}
func (m *ListActivitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActivitiesResponse.Merge(m, src)
}
func (m *ListActivitiesResponse) XXX_Size() int {
	return xxx_messageInfo_ListActivitiesResponse.Size(m)
}
func (m *ListActivitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActivitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListActivitiesResponse proto.InternalMessageInfo

func (m *ListActivitiesResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *ListActivitiesResponse) GetIssueSummaries() []*IssueSummary {
	if m != nil {
		return m.IssueSummaries
	}
	return nil
}

// Next available tag: 5
type DeleteCommentRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	SequenceNum          int64         `protobuf:"varint,3,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	Delete               bool          `protobuf:"varint,4,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteCommentRequest) Reset()         { *m = DeleteCommentRequest{} }
func (m *DeleteCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentRequest) ProtoMessage()    {}
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{17}
}
func (m *DeleteCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentRequest.Unmarshal(m, b)
}
func (m *DeleteCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentRequest.Merge(m, src)
}
func (m *DeleteCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentRequest.Size(m)
}
func (m *DeleteCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentRequest proto.InternalMessageInfo

func (m *DeleteCommentRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *DeleteCommentRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *DeleteCommentRequest) GetSequenceNum() int64 {
	if m != nil {
		return m.SequenceNum
	}
	return 0
}

func (m *DeleteCommentRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

// Next available tag: 18
type IssueDelta struct {
	// Note: We use StringValue instead of string so that we can
	// check if delta.HasField('status').  Proto3 only allows that
	// for nested messages and provides "boxed" values for this purpose.
	// In JSON, a StringValue is represented as a simple string.
	Status               *wrappers.StringValue `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	OwnerRef             *UserRef              `protobuf:"bytes,2,opt,name=owner_ref,json=ownerRef,proto3" json:"owner_ref,omitempty"`
	CcRefsAdd            []*UserRef            `protobuf:"bytes,3,rep,name=cc_refs_add,json=ccRefsAdd,proto3" json:"cc_refs_add,omitempty"`
	CcRefsRemove         []*UserRef            `protobuf:"bytes,4,rep,name=cc_refs_remove,json=ccRefsRemove,proto3" json:"cc_refs_remove,omitempty"`
	CompRefsAdd          []*ComponentRef       `protobuf:"bytes,5,rep,name=comp_refs_add,json=compRefsAdd,proto3" json:"comp_refs_add,omitempty"`
	CompRefsRemove       []*ComponentRef       `protobuf:"bytes,6,rep,name=comp_refs_remove,json=compRefsRemove,proto3" json:"comp_refs_remove,omitempty"`
	LabelRefsAdd         []*LabelRef           `protobuf:"bytes,7,rep,name=label_refs_add,json=labelRefsAdd,proto3" json:"label_refs_add,omitempty"`
	LabelRefsRemove      []*LabelRef           `protobuf:"bytes,8,rep,name=label_refs_remove,json=labelRefsRemove,proto3" json:"label_refs_remove,omitempty"`
	FieldValsAdd         []*FieldValue         `protobuf:"bytes,9,rep,name=field_vals_add,json=fieldValsAdd,proto3" json:"field_vals_add,omitempty"`
	FieldValsRemove      []*FieldValue         `protobuf:"bytes,10,rep,name=field_vals_remove,json=fieldValsRemove,proto3" json:"field_vals_remove,omitempty"`
	FieldsClear          []*FieldRef           `protobuf:"bytes,11,rep,name=fields_clear,json=fieldsClear,proto3" json:"fields_clear,omitempty"`
	BlockedOnRefsAdd     []*IssueRef           `protobuf:"bytes,12,rep,name=blocked_on_refs_add,json=blockedOnRefsAdd,proto3" json:"blocked_on_refs_add,omitempty"`
	BlockedOnRefsRemove  []*IssueRef           `protobuf:"bytes,13,rep,name=blocked_on_refs_remove,json=blockedOnRefsRemove,proto3" json:"blocked_on_refs_remove,omitempty"`
	BlockingRefsAdd      []*IssueRef           `protobuf:"bytes,14,rep,name=blocking_refs_add,json=blockingRefsAdd,proto3" json:"blocking_refs_add,omitempty"`
	BlockingRefsRemove   []*IssueRef           `protobuf:"bytes,15,rep,name=blocking_refs_remove,json=blockingRefsRemove,proto3" json:"blocking_refs_remove,omitempty"`
	MergedIntoRef        *IssueRef             `protobuf:"bytes,16,opt,name=merged_into_ref,json=mergedIntoRef,proto3" json:"merged_into_ref,omitempty"`
	Summary              *wrappers.StringValue `protobuf:"bytes,17,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IssueDelta) Reset()         { *m = IssueDelta{} }
func (m *IssueDelta) String() string { return proto.CompactTextString(m) }
func (*IssueDelta) ProtoMessage()    {}
func (*IssueDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{18}
}
func (m *IssueDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueDelta.Unmarshal(m, b)
}
func (m *IssueDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueDelta.Marshal(b, m, deterministic)
}
func (m *IssueDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueDelta.Merge(m, src)
}
func (m *IssueDelta) XXX_Size() int {
	return xxx_messageInfo_IssueDelta.Size(m)
}
func (m *IssueDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueDelta.DiscardUnknown(m)
}

var xxx_messageInfo_IssueDelta proto.InternalMessageInfo

func (m *IssueDelta) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *IssueDelta) GetOwnerRef() *UserRef {
	if m != nil {
		return m.OwnerRef
	}
	return nil
}

func (m *IssueDelta) GetCcRefsAdd() []*UserRef {
	if m != nil {
		return m.CcRefsAdd
	}
	return nil
}

func (m *IssueDelta) GetCcRefsRemove() []*UserRef {
	if m != nil {
		return m.CcRefsRemove
	}
	return nil
}

func (m *IssueDelta) GetCompRefsAdd() []*ComponentRef {
	if m != nil {
		return m.CompRefsAdd
	}
	return nil
}

func (m *IssueDelta) GetCompRefsRemove() []*ComponentRef {
	if m != nil {
		return m.CompRefsRemove
	}
	return nil
}

func (m *IssueDelta) GetLabelRefsAdd() []*LabelRef {
	if m != nil {
		return m.LabelRefsAdd
	}
	return nil
}

func (m *IssueDelta) GetLabelRefsRemove() []*LabelRef {
	if m != nil {
		return m.LabelRefsRemove
	}
	return nil
}

func (m *IssueDelta) GetFieldValsAdd() []*FieldValue {
	if m != nil {
		return m.FieldValsAdd
	}
	return nil
}

func (m *IssueDelta) GetFieldValsRemove() []*FieldValue {
	if m != nil {
		return m.FieldValsRemove
	}
	return nil
}

func (m *IssueDelta) GetFieldsClear() []*FieldRef {
	if m != nil {
		return m.FieldsClear
	}
	return nil
}

func (m *IssueDelta) GetBlockedOnRefsAdd() []*IssueRef {
	if m != nil {
		return m.BlockedOnRefsAdd
	}
	return nil
}

func (m *IssueDelta) GetBlockedOnRefsRemove() []*IssueRef {
	if m != nil {
		return m.BlockedOnRefsRemove
	}
	return nil
}

func (m *IssueDelta) GetBlockingRefsAdd() []*IssueRef {
	if m != nil {
		return m.BlockingRefsAdd
	}
	return nil
}

func (m *IssueDelta) GetBlockingRefsRemove() []*IssueRef {
	if m != nil {
		return m.BlockingRefsRemove
	}
	return nil
}

func (m *IssueDelta) GetMergedIntoRef() *IssueRef {
	if m != nil {
		return m.MergedIntoRef
	}
	return nil
}

func (m *IssueDelta) GetSummary() *wrappers.StringValue {
	if m != nil {
		return m.Summary
	}
	return nil
}

// Next available tag: 9
type UpdateApprovalRequest struct {
	Trace                *RequestTrace       `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef           `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	FieldRef             *FieldRef           `protobuf:"bytes,3,opt,name=field_ref,json=fieldRef,proto3" json:"field_ref,omitempty"`
	ApprovalDelta        *ApprovalDelta      `protobuf:"bytes,4,opt,name=approval_delta,json=approvalDelta,proto3" json:"approval_delta,omitempty"`
	CommentContent       string              `protobuf:"bytes,5,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"`
	SendEmail            bool                `protobuf:"varint,6,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	IsDescription        bool                `protobuf:"varint,7,opt,name=is_description,json=isDescription,proto3" json:"is_description,omitempty"`
	Uploads              []*AttachmentUpload `protobuf:"bytes,8,rep,name=uploads,proto3" json:"uploads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateApprovalRequest) Reset()         { *m = UpdateApprovalRequest{} }
func (m *UpdateApprovalRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateApprovalRequest) ProtoMessage()    {}
func (*UpdateApprovalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{19}
}
func (m *UpdateApprovalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateApprovalRequest.Unmarshal(m, b)
}
func (m *UpdateApprovalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateApprovalRequest.Marshal(b, m, deterministic)
}
func (m *UpdateApprovalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateApprovalRequest.Merge(m, src)
}
func (m *UpdateApprovalRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateApprovalRequest.Size(m)
}
func (m *UpdateApprovalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateApprovalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateApprovalRequest proto.InternalMessageInfo

func (m *UpdateApprovalRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *UpdateApprovalRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *UpdateApprovalRequest) GetFieldRef() *FieldRef {
	if m != nil {
		return m.FieldRef
	}
	return nil
}

func (m *UpdateApprovalRequest) GetApprovalDelta() *ApprovalDelta {
	if m != nil {
		return m.ApprovalDelta
	}
	return nil
}

func (m *UpdateApprovalRequest) GetCommentContent() string {
	if m != nil {
		return m.CommentContent
	}
	return ""
}

func (m *UpdateApprovalRequest) GetSendEmail() bool {
	if m != nil {
		return m.SendEmail
	}
	return false
}

func (m *UpdateApprovalRequest) GetIsDescription() bool {
	if m != nil {
		return m.IsDescription
	}
	return false
}

func (m *UpdateApprovalRequest) GetUploads() []*AttachmentUpload {
	if m != nil {
		return m.Uploads
	}
	return nil
}

// Next available tag: 7
type ApprovalDelta struct {
	Status               ApprovalStatus `protobuf:"varint,1,opt,name=status,proto3,enum=monorail.ApprovalStatus" json:"status,omitempty"`
	ApproverRefsAdd      []*UserRef     `protobuf:"bytes,2,rep,name=approver_refs_add,json=approverRefsAdd,proto3" json:"approver_refs_add,omitempty"`
	ApproverRefsRemove   []*UserRef     `protobuf:"bytes,3,rep,name=approver_refs_remove,json=approverRefsRemove,proto3" json:"approver_refs_remove,omitempty"`
	FieldValsAdd         []*FieldValue  `protobuf:"bytes,4,rep,name=field_vals_add,json=fieldValsAdd,proto3" json:"field_vals_add,omitempty"`
	FieldValsRemove      []*FieldValue  `protobuf:"bytes,5,rep,name=field_vals_remove,json=fieldValsRemove,proto3" json:"field_vals_remove,omitempty"`
	FieldsClear          []*FieldRef    `protobuf:"bytes,6,rep,name=fields_clear,json=fieldsClear,proto3" json:"fields_clear,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ApprovalDelta) Reset()         { *m = ApprovalDelta{} }
func (m *ApprovalDelta) String() string { return proto.CompactTextString(m) }
func (*ApprovalDelta) ProtoMessage()    {}
func (*ApprovalDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{20}
}
func (m *ApprovalDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApprovalDelta.Unmarshal(m, b)
}
func (m *ApprovalDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApprovalDelta.Marshal(b, m, deterministic)
}
func (m *ApprovalDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApprovalDelta.Merge(m, src)
}
func (m *ApprovalDelta) XXX_Size() int {
	return xxx_messageInfo_ApprovalDelta.Size(m)
}
func (m *ApprovalDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_ApprovalDelta.DiscardUnknown(m)
}

var xxx_messageInfo_ApprovalDelta proto.InternalMessageInfo

func (m *ApprovalDelta) GetStatus() ApprovalStatus {
	if m != nil {
		return m.Status
	}
	return ApprovalStatus_NOT_SET
}

func (m *ApprovalDelta) GetApproverRefsAdd() []*UserRef {
	if m != nil {
		return m.ApproverRefsAdd
	}
	return nil
}

func (m *ApprovalDelta) GetApproverRefsRemove() []*UserRef {
	if m != nil {
		return m.ApproverRefsRemove
	}
	return nil
}

func (m *ApprovalDelta) GetFieldValsAdd() []*FieldValue {
	if m != nil {
		return m.FieldValsAdd
	}
	return nil
}

func (m *ApprovalDelta) GetFieldValsRemove() []*FieldValue {
	if m != nil {
		return m.FieldValsRemove
	}
	return nil
}

func (m *ApprovalDelta) GetFieldsClear() []*FieldRef {
	if m != nil {
		return m.FieldsClear
	}
	return nil
}

// Next available tag: 2
type UpdateApprovalResponse struct {
	Approval             *Approval `protobuf:"bytes,1,opt,name=approval,proto3" json:"approval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateApprovalResponse) Reset()         { *m = UpdateApprovalResponse{} }
func (m *UpdateApprovalResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateApprovalResponse) ProtoMessage()    {}
func (*UpdateApprovalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{21}
}
func (m *UpdateApprovalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateApprovalResponse.Unmarshal(m, b)
}
func (m *UpdateApprovalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateApprovalResponse.Marshal(b, m, deterministic)
}
func (m *UpdateApprovalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateApprovalResponse.Merge(m, src)
}
func (m *UpdateApprovalResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateApprovalResponse.Size(m)
}
func (m *UpdateApprovalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateApprovalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateApprovalResponse proto.InternalMessageInfo

func (m *UpdateApprovalResponse) GetApproval() *Approval {
	if m != nil {
		return m.Approval
	}
	return nil
}

// Next available tag: 8
type IssueSnapshotRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	Timestamp            int32         `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Query                string        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	CannedQuery          int32         `protobuf:"varint,4,opt,name=canned_query,json=cannedQuery,proto3" json:"canned_query,omitempty"`
	GroupBy              string        `protobuf:"bytes,5,opt,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	LabelPrefix          string        `protobuf:"bytes,6,opt,name=label_prefix,json=labelPrefix,proto3" json:"label_prefix,omitempty"`
	ProjectName          string        `protobuf:"bytes,7,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IssueSnapshotRequest) Reset()         { *m = IssueSnapshotRequest{} }
func (m *IssueSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*IssueSnapshotRequest) ProtoMessage()    {}
func (*IssueSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{22}
}
func (m *IssueSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueSnapshotRequest.Unmarshal(m, b)
}
func (m *IssueSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *IssueSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueSnapshotRequest.Merge(m, src)
}
func (m *IssueSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_IssueSnapshotRequest.Size(m)
}
func (m *IssueSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IssueSnapshotRequest proto.InternalMessageInfo

func (m *IssueSnapshotRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *IssueSnapshotRequest) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *IssueSnapshotRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *IssueSnapshotRequest) GetCannedQuery() int32 {
	if m != nil {
		return m.CannedQuery
	}
	return 0
}

func (m *IssueSnapshotRequest) GetGroupBy() string {
	if m != nil {
		return m.GroupBy
	}
	return ""
}

func (m *IssueSnapshotRequest) GetLabelPrefix() string {
	if m != nil {
		return m.LabelPrefix
	}
	return ""
}

func (m *IssueSnapshotRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

// Next available tag: 3
type IssueSnapshotCount struct {
	Dimension            string   `protobuf:"bytes,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueSnapshotCount) Reset()         { *m = IssueSnapshotCount{} }
func (m *IssueSnapshotCount) String() string { return proto.CompactTextString(m) }
func (*IssueSnapshotCount) ProtoMessage()    {}
func (*IssueSnapshotCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{23}
}
func (m *IssueSnapshotCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueSnapshotCount.Unmarshal(m, b)
}
func (m *IssueSnapshotCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueSnapshotCount.Marshal(b, m, deterministic)
}
func (m *IssueSnapshotCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueSnapshotCount.Merge(m, src)
}
func (m *IssueSnapshotCount) XXX_Size() int {
	return xxx_messageInfo_IssueSnapshotCount.Size(m)
}
func (m *IssueSnapshotCount) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueSnapshotCount.DiscardUnknown(m)
}

var xxx_messageInfo_IssueSnapshotCount proto.InternalMessageInfo

func (m *IssueSnapshotCount) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *IssueSnapshotCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// Next available tag: 3
type IssueSnapshotResponse struct {
	SnapshotCount        []*IssueSnapshotCount `protobuf:"bytes,1,rep,name=snapshot_count,json=snapshotCount,proto3" json:"snapshot_count,omitempty"`
	UnsupportedField     []string              `protobuf:"bytes,2,rep,name=unsupported_field,json=unsupportedField,proto3" json:"unsupported_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IssueSnapshotResponse) Reset()         { *m = IssueSnapshotResponse{} }
func (m *IssueSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*IssueSnapshotResponse) ProtoMessage()    {}
func (*IssueSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{24}
}
func (m *IssueSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueSnapshotResponse.Unmarshal(m, b)
}
func (m *IssueSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *IssueSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueSnapshotResponse.Merge(m, src)
}
func (m *IssueSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_IssueSnapshotResponse.Size(m)
}
func (m *IssueSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IssueSnapshotResponse proto.InternalMessageInfo

func (m *IssueSnapshotResponse) GetSnapshotCount() []*IssueSnapshotCount {
	if m != nil {
		return m.SnapshotCount
	}
	return nil
}

func (m *IssueSnapshotResponse) GetUnsupportedField() []string {
	if m != nil {
		return m.UnsupportedField
	}
	return nil
}

// Next available tag: 4
type PresubmitIssueRequest struct {
	Trace                *RequestTrace `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	IssueRef             *IssueRef     `protobuf:"bytes,2,opt,name=issue_ref,json=issueRef,proto3" json:"issue_ref,omitempty"`
	IssueDelta           *IssueDelta   `protobuf:"bytes,3,opt,name=issue_delta,json=issueDelta,proto3" json:"issue_delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PresubmitIssueRequest) Reset()         { *m = PresubmitIssueRequest{} }
func (m *PresubmitIssueRequest) String() string { return proto.CompactTextString(m) }
func (*PresubmitIssueRequest) ProtoMessage()    {}
func (*PresubmitIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{25}
}
func (m *PresubmitIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresubmitIssueRequest.Unmarshal(m, b)
}
func (m *PresubmitIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresubmitIssueRequest.Marshal(b, m, deterministic)
}
func (m *PresubmitIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresubmitIssueRequest.Merge(m, src)
}
func (m *PresubmitIssueRequest) XXX_Size() int {
	return xxx_messageInfo_PresubmitIssueRequest.Size(m)
}
func (m *PresubmitIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PresubmitIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PresubmitIssueRequest proto.InternalMessageInfo

func (m *PresubmitIssueRequest) GetTrace() *RequestTrace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *PresubmitIssueRequest) GetIssueRef() *IssueRef {
	if m != nil {
		return m.IssueRef
	}
	return nil
}

func (m *PresubmitIssueRequest) GetIssueDelta() *IssueDelta {
	if m != nil {
		return m.IssueDelta
	}
	return nil
}

// Next available tag: 8
type PresubmitIssueResponse struct {
	OwnerAvailability      string         `protobuf:"bytes,1,opt,name=owner_availability,json=ownerAvailability,proto3" json:"owner_availability,omitempty"`
	OwnerAvailabilityState string         `protobuf:"bytes,2,opt,name=owner_availability_state,json=ownerAvailabilityState,proto3" json:"owner_availability_state,omitempty"`
	DerivedLabels          []*ValueAndWhy `protobuf:"bytes,3,rep,name=derived_labels,json=derivedLabels,proto3" json:"derived_labels,omitempty"`
	DerivedOwners          []*ValueAndWhy `protobuf:"bytes,4,rep,name=derived_owners,json=derivedOwners,proto3" json:"derived_owners,omitempty"`
	DerivedCcs             []*ValueAndWhy `protobuf:"bytes,5,rep,name=derived_ccs,json=derivedCcs,proto3" json:"derived_ccs,omitempty"`
	Warnings               []*ValueAndWhy `protobuf:"bytes,6,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Errors                 []*ValueAndWhy `protobuf:"bytes,7,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}       `json:"-"`
	XXX_unrecognized       []byte         `json:"-"`
	XXX_sizecache          int32          `json:"-"`
}

func (m *PresubmitIssueResponse) Reset()         { *m = PresubmitIssueResponse{} }
func (m *PresubmitIssueResponse) String() string { return proto.CompactTextString(m) }
func (*PresubmitIssueResponse) ProtoMessage()    {}
func (*PresubmitIssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e34c0f78b7e5f845, []int{26}
}
func (m *PresubmitIssueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresubmitIssueResponse.Unmarshal(m, b)
}
func (m *PresubmitIssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresubmitIssueResponse.Marshal(b, m, deterministic)
}
func (m *PresubmitIssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresubmitIssueResponse.Merge(m, src)
}
func (m *PresubmitIssueResponse) XXX_Size() int {
	return xxx_messageInfo_PresubmitIssueResponse.Size(m)
}
func (m *PresubmitIssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PresubmitIssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PresubmitIssueResponse proto.InternalMessageInfo

func (m *PresubmitIssueResponse) GetOwnerAvailability() string {
	if m != nil {
		return m.OwnerAvailability
	}
	return ""
}

func (m *PresubmitIssueResponse) GetOwnerAvailabilityState() string {
	if m != nil {
		return m.OwnerAvailabilityState
	}
	return ""
}

func (m *PresubmitIssueResponse) GetDerivedLabels() []*ValueAndWhy {
	if m != nil {
		return m.DerivedLabels
	}
	return nil
}

func (m *PresubmitIssueResponse) GetDerivedOwners() []*ValueAndWhy {
	if m != nil {
		return m.DerivedOwners
	}
	return nil
}

func (m *PresubmitIssueResponse) GetDerivedCcs() []*ValueAndWhy {
	if m != nil {
		return m.DerivedCcs
	}
	return nil
}

func (m *PresubmitIssueResponse) GetWarnings() []*ValueAndWhy {
	if m != nil {
		return m.Warnings
	}
	return nil
}

func (m *PresubmitIssueResponse) GetErrors() []*ValueAndWhy {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterType((*AttachmentUpload)(nil), "monorail.AttachmentUpload")
	proto.RegisterType((*CreateIssueRequest)(nil), "monorail.CreateIssueRequest")
	proto.RegisterType((*GetIssueRequest)(nil), "monorail.GetIssueRequest")
	proto.RegisterType((*IssueResponse)(nil), "monorail.IssueResponse")
	proto.RegisterType((*ListIssuesRequest)(nil), "monorail.ListIssuesRequest")
	proto.RegisterType((*ListIssuesResponse)(nil), "monorail.ListIssuesResponse")
	proto.RegisterType((*ListReferencedIssuesRequest)(nil), "monorail.ListReferencedIssuesRequest")
	proto.RegisterType((*ListReferencedIssuesResponse)(nil), "monorail.ListReferencedIssuesResponse")
	proto.RegisterType((*UpdateIssueRequest)(nil), "monorail.UpdateIssueRequest")
	proto.RegisterType((*StarIssueRequest)(nil), "monorail.StarIssueRequest")
	proto.RegisterType((*StarIssueResponse)(nil), "monorail.StarIssueResponse")
	proto.RegisterType((*IsIssueStarredRequest)(nil), "monorail.IsIssueStarredRequest")
	proto.RegisterType((*IsIssueStarredResponse)(nil), "monorail.IsIssueStarredResponse")
	proto.RegisterType((*ListCommentsRequest)(nil), "monorail.ListCommentsRequest")
	proto.RegisterType((*ListCommentsResponse)(nil), "monorail.ListCommentsResponse")
	proto.RegisterType((*ListActivitiesRequest)(nil), "monorail.ListActivitiesRequest")
	proto.RegisterType((*ListActivitiesResponse)(nil), "monorail.ListActivitiesResponse")
	proto.RegisterType((*DeleteCommentRequest)(nil), "monorail.DeleteCommentRequest")
	proto.RegisterType((*IssueDelta)(nil), "monorail.IssueDelta")
	proto.RegisterType((*UpdateApprovalRequest)(nil), "monorail.UpdateApprovalRequest")
	proto.RegisterType((*ApprovalDelta)(nil), "monorail.ApprovalDelta")
	proto.RegisterType((*UpdateApprovalResponse)(nil), "monorail.UpdateApprovalResponse")
	proto.RegisterType((*IssueSnapshotRequest)(nil), "monorail.IssueSnapshotRequest")
	proto.RegisterType((*IssueSnapshotCount)(nil), "monorail.IssueSnapshotCount")
	proto.RegisterType((*IssueSnapshotResponse)(nil), "monorail.IssueSnapshotResponse")
	proto.RegisterType((*PresubmitIssueRequest)(nil), "monorail.PresubmitIssueRequest")
	proto.RegisterType((*PresubmitIssueResponse)(nil), "monorail.PresubmitIssueResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IssuesClient is the client API for Issues service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IssuesClient interface {
	CreateIssue(ctx context.Context, in *CreateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error)
	GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error)
	ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*ListIssuesResponse, error)
	ListReferencedIssues(ctx context.Context, in *ListReferencedIssuesRequest, opts ...grpc.CallOption) (*ListReferencedIssuesResponse, error)
	UpdateIssue(ctx context.Context, in *UpdateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error)
	StarIssue(ctx context.Context, in *StarIssueRequest, opts ...grpc.CallOption) (*StarIssueResponse, error)
	IsIssueStarred(ctx context.Context, in *IsIssueStarredRequest, opts ...grpc.CallOption) (*IsIssueStarredResponse, error)
	// There is no CreateComment method because comments are created by updates,
	// which may have just comment content and no delta.
	// There is no GetComment method, clients should use ListComments.
	ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error)
	ListActivities(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error)
	DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateApproval(ctx context.Context, in *UpdateApprovalRequest, opts ...grpc.CallOption) (*UpdateApprovalResponse, error)
	IssueSnapshot(ctx context.Context, in *IssueSnapshotRequest, opts ...grpc.CallOption) (*IssueSnapshotResponse, error)
	PresubmitIssue(ctx context.Context, in *PresubmitIssueRequest, opts ...grpc.CallOption) (*PresubmitIssueResponse, error)
}
type issuesPRPCClient struct {
	client *prpc.Client
}

func NewIssuesPRPCClient(client *prpc.Client) IssuesClient {
	return &issuesPRPCClient{client}
}

func (c *issuesPRPCClient) CreateIssue(ctx context.Context, in *CreateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "CreateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "GetIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*ListIssuesResponse, error) {
	out := new(ListIssuesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListReferencedIssues(ctx context.Context, in *ListReferencedIssuesRequest, opts ...grpc.CallOption) (*ListReferencedIssuesResponse, error) {
	out := new(ListReferencedIssuesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListReferencedIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) UpdateIssue(ctx context.Context, in *UpdateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "UpdateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) StarIssue(ctx context.Context, in *StarIssueRequest, opts ...grpc.CallOption) (*StarIssueResponse, error) {
	out := new(StarIssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "StarIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) IsIssueStarred(ctx context.Context, in *IsIssueStarredRequest, opts ...grpc.CallOption) (*IsIssueStarredResponse, error) {
	out := new(IsIssueStarredResponse)
	err := c.client.Call(ctx, "monorail.Issues", "IsIssueStarred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error) {
	out := new(ListCommentsResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) ListActivities(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error) {
	out := new(ListActivitiesResponse)
	err := c.client.Call(ctx, "monorail.Issues", "ListActivities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.client.Call(ctx, "monorail.Issues", "DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) UpdateApproval(ctx context.Context, in *UpdateApprovalRequest, opts ...grpc.CallOption) (*UpdateApprovalResponse, error) {
	out := new(UpdateApprovalResponse)
	err := c.client.Call(ctx, "monorail.Issues", "UpdateApproval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) IssueSnapshot(ctx context.Context, in *IssueSnapshotRequest, opts ...grpc.CallOption) (*IssueSnapshotResponse, error) {
	out := new(IssueSnapshotResponse)
	err := c.client.Call(ctx, "monorail.Issues", "IssueSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesPRPCClient) PresubmitIssue(ctx context.Context, in *PresubmitIssueRequest, opts ...grpc.CallOption) (*PresubmitIssueResponse, error) {
	out := new(PresubmitIssueResponse)
	err := c.client.Call(ctx, "monorail.Issues", "PresubmitIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type issuesClient struct {
	cc *grpc.ClientConn
}

func NewIssuesClient(cc *grpc.ClientConn) IssuesClient {
	return &issuesClient{cc}
}

func (c *issuesClient) CreateIssue(ctx context.Context, in *CreateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/CreateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/GetIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*ListIssuesResponse, error) {
	out := new(ListIssuesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListReferencedIssues(ctx context.Context, in *ListReferencedIssuesRequest, opts ...grpc.CallOption) (*ListReferencedIssuesResponse, error) {
	out := new(ListReferencedIssuesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListReferencedIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) UpdateIssue(ctx context.Context, in *UpdateIssueRequest, opts ...grpc.CallOption) (*IssueResponse, error) {
	out := new(IssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/UpdateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) StarIssue(ctx context.Context, in *StarIssueRequest, opts ...grpc.CallOption) (*StarIssueResponse, error) {
	out := new(StarIssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/StarIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) IsIssueStarred(ctx context.Context, in *IsIssueStarredRequest, opts ...grpc.CallOption) (*IsIssueStarredResponse, error) {
	out := new(IsIssueStarredResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/IsIssueStarred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error) {
	out := new(ListCommentsResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) ListActivities(ctx context.Context, in *ListActivitiesRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error) {
	out := new(ListActivitiesResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/ListActivities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/monorail.Issues/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) UpdateApproval(ctx context.Context, in *UpdateApprovalRequest, opts ...grpc.CallOption) (*UpdateApprovalResponse, error) {
	out := new(UpdateApprovalResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/UpdateApproval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) IssueSnapshot(ctx context.Context, in *IssueSnapshotRequest, opts ...grpc.CallOption) (*IssueSnapshotResponse, error) {
	out := new(IssueSnapshotResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/IssueSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuesClient) PresubmitIssue(ctx context.Context, in *PresubmitIssueRequest, opts ...grpc.CallOption) (*PresubmitIssueResponse, error) {
	out := new(PresubmitIssueResponse)
	err := c.cc.Invoke(ctx, "/monorail.Issues/PresubmitIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IssuesServer is the server API for Issues service.
type IssuesServer interface {
	CreateIssue(context.Context, *CreateIssueRequest) (*IssueResponse, error)
	GetIssue(context.Context, *GetIssueRequest) (*IssueResponse, error)
	ListIssues(context.Context, *ListIssuesRequest) (*ListIssuesResponse, error)
	ListReferencedIssues(context.Context, *ListReferencedIssuesRequest) (*ListReferencedIssuesResponse, error)
	UpdateIssue(context.Context, *UpdateIssueRequest) (*IssueResponse, error)
	StarIssue(context.Context, *StarIssueRequest) (*StarIssueResponse, error)
	IsIssueStarred(context.Context, *IsIssueStarredRequest) (*IsIssueStarredResponse, error)
	// There is no CreateComment method because comments are created by updates,
	// which may have just comment content and no delta.
	// There is no GetComment method, clients should use ListComments.
	ListComments(context.Context, *ListCommentsRequest) (*ListCommentsResponse, error)
	ListActivities(context.Context, *ListActivitiesRequest) (*ListActivitiesResponse, error)
	DeleteComment(context.Context, *DeleteCommentRequest) (*empty.Empty, error)
	UpdateApproval(context.Context, *UpdateApprovalRequest) (*UpdateApprovalResponse, error)
	IssueSnapshot(context.Context, *IssueSnapshotRequest) (*IssueSnapshotResponse, error)
	PresubmitIssue(context.Context, *PresubmitIssueRequest) (*PresubmitIssueResponse, error)
}

func RegisterIssuesServer(s prpc.Registrar, srv IssuesServer) {
	s.RegisterService(&_Issues_serviceDesc, srv)
}

func _Issues_CreateIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).CreateIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/CreateIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).CreateIssue(ctx, req.(*CreateIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_GetIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).GetIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/GetIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).GetIssue(ctx, req.(*GetIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListIssues(ctx, req.(*ListIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListReferencedIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReferencedIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListReferencedIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListReferencedIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListReferencedIssues(ctx, req.(*ListReferencedIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_UpdateIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).UpdateIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/UpdateIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).UpdateIssue(ctx, req.(*UpdateIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_StarIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StarIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).StarIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/StarIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).StarIssue(ctx, req.(*StarIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_IsIssueStarred_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsIssueStarredRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).IsIssueStarred(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/IsIssueStarred",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).IsIssueStarred(ctx, req.(*IsIssueStarredRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListComments(ctx, req.(*ListCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_ListActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListActivitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).ListActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/ListActivities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).ListActivities(ctx, req.(*ListActivitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).DeleteComment(ctx, req.(*DeleteCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_UpdateApproval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateApprovalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).UpdateApproval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/UpdateApproval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).UpdateApproval(ctx, req.(*UpdateApprovalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_IssueSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssueSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).IssueSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/IssueSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).IssueSnapshot(ctx, req.(*IssueSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issues_PresubmitIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresubmitIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuesServer).PresubmitIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Issues/PresubmitIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuesServer).PresubmitIssue(ctx, req.(*PresubmitIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Issues_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monorail.Issues",
	HandlerType: (*IssuesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIssue",
			Handler:    _Issues_CreateIssue_Handler,
		},
		{
			MethodName: "GetIssue",
			Handler:    _Issues_GetIssue_Handler,
		},
		{
			MethodName: "ListIssues",
			Handler:    _Issues_ListIssues_Handler,
		},
		{
			MethodName: "ListReferencedIssues",
			Handler:    _Issues_ListReferencedIssues_Handler,
		},
		{
			MethodName: "UpdateIssue",
			Handler:    _Issues_UpdateIssue_Handler,
		},
		{
			MethodName: "StarIssue",
			Handler:    _Issues_StarIssue_Handler,
		},
		{
			MethodName: "IsIssueStarred",
			Handler:    _Issues_IsIssueStarred_Handler,
		},
		{
			MethodName: "ListComments",
			Handler:    _Issues_ListComments_Handler,
		},
		{
			MethodName: "ListActivities",
			Handler:    _Issues_ListActivities_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _Issues_DeleteComment_Handler,
		},
		{
			MethodName: "UpdateApproval",
			Handler:    _Issues_UpdateApproval_Handler,
		},
		{
			MethodName: "IssueSnapshot",
			Handler:    _Issues_IssueSnapshot_Handler,
		},
		{
			MethodName: "PresubmitIssue",
			Handler:    _Issues_PresubmitIssue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api_proto/issues.proto",
}

func init() { proto.RegisterFile("api/api_proto/issues.proto", fileDescriptor_e34c0f78b7e5f845) }

var fileDescriptor_e34c0f78b7e5f845 = []byte{
	// 1924 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x93, 0x1b, 0x47,
	0x15, 0xb7, 0x56, 0x96, 0x34, 0x7a, 0xfa, 0x5a, 0xb5, 0x77, 0x15, 0x45, 0xeb, 0x24, 0xeb, 0xa1,
	0x4c, 0x5c, 0x90, 0x68, 0xf1, 0xc6, 0x71, 0x52, 0x14, 0x98, 0x2c, 0xb2, 0x1d, 0xbb, 0x2a, 0x15,
	0x9b, 0x59, 0x0c, 0xc7, 0xa9, 0xd1, 0x4c, 0x4b, 0x1e, 0x98, 0xaf, 0x74, 0xb7, 0xd6, 0xe8, 0xc2,
	0x89, 0x03, 0x14, 0xbe, 0x70, 0x81, 0x33, 0xdc, 0xa9, 0xe2, 0x8f, 0xe0, 0xaf, 0xa2, 0x38, 0x50,
	0xfd, 0x31, 0x33, 0x3d, 0x23, 0xcd, 0xae, 0xd9, 0xad, 0xda, 0xdb, 0xcc, 0xfb, 0xfc, 0xf5, 0xeb,
	0xd7, 0xaf, 0x5f, 0x3f, 0x98, 0x38, 0x89, 0x7f, 0xe4, 0x24, 0xbe, 0x9d, 0x90, 0x98, 0xc5, 0x47,
	0x3e, 0xa5, 0x2b, 0x4c, 0xa7, 0xe2, 0x07, 0x19, 0x61, 0x1c, 0xc5, 0xc4, 0xf1, 0x83, 0xc9, 0xc1,
	0x32, 0x8e, 0x97, 0x01, 0x3e, 0x12, 0xf4, 0xf9, 0x6a, 0x71, 0x84, 0xc3, 0x84, 0xad, 0xa5, 0xd8,
	0xe4, 0xc3, 0x32, 0xf3, 0x0d, 0x71, 0x92, 0x04, 0x13, 0x65, 0x66, 0x52, 0x72, 0xe1, 0xc6, 0x61,
	0x18, 0x47, 0x8a, 0x77, 0x67, 0x8b, 0x7b, 0x3b, 0x9e, 0xff, 0x06, 0xbb, 0x4c, 0xa9, 0x9b, 0xcf,
	0x60, 0xf7, 0x84, 0x31, 0xc7, 0x7d, 0x1d, 0xe2, 0x88, 0xbd, 0x4a, 0x82, 0xd8, 0xf1, 0xd0, 0x04,
	0x8c, 0x85, 0x1f, 0xe0, 0xc8, 0x09, 0xf1, 0xb8, 0x76, 0x58, 0xbb, 0xd7, 0xb6, 0xb2, 0x7f, 0x34,
	0x86, 0x96, 0x1b, 0x47, 0x0c, 0x47, 0x6c, 0xbc, 0x73, 0x58, 0xbb, 0xd7, 0xb5, 0xd2, 0x5f, 0xf3,
	0x6d, 0x0d, 0xd0, 0x8c, 0x60, 0x87, 0xe1, 0xe7, 0xdc, 0x8f, 0x85, 0xbf, 0x5b, 0x61, 0xca, 0xd0,
	0x27, 0xd0, 0x60, 0xc4, 0x71, 0xa5, 0xa5, 0xce, 0xf1, 0x68, 0x9a, 0x2e, 0x7b, 0xaa, 0x24, 0x7e,
	0xc9, 0xb9, 0x96, 0x14, 0x42, 0x77, 0xa0, 0x9b, 0x90, 0x98, 0x03, 0xb4, 0x85, 0xfb, 0x1d, 0xe1,
	0xbe, 0xa3, 0x68, 0xdf, 0x72, 0x04, 0x77, 0xa1, 0x21, 0x16, 0x32, 0xae, 0x0b, 0x83, 0x83, 0xdc,
	0xa0, 0xf4, 0x2b, 0xb9, 0x66, 0x02, 0x83, 0xaf, 0x31, 0xbb, 0x02, 0x94, 0x23, 0x68, 0xcb, 0x80,
	0x11, 0xbc, 0x10, 0x38, 0x3a, 0xc7, 0xa8, 0xec, 0x0b, 0x2f, 0x2c, 0xc3, 0x57, 0x5f, 0xe6, 0x43,
	0xe8, 0x29, 0x2a, 0x4d, 0xe2, 0x88, 0x6a, 0x48, 0x6b, 0xe7, 0x22, 0xfd, 0xeb, 0x0e, 0x0c, 0xbf,
	0xf1, 0xa9, 0xc4, 0x4a, 0x2f, 0x07, 0x76, 0x0f, 0x1a, 0xdf, 0xad, 0x30, 0x59, 0xab, 0x80, 0xc9,
	0x1f, 0x1e, 0x4d, 0xd7, 0x89, 0x22, 0xec, 0xd9, 0x92, 0xc9, 0x23, 0xd6, 0xb3, 0x3a, 0x92, 0xf6,
	0x0b, 0x21, 0xf2, 0x3d, 0xe8, 0xe9, 0x01, 0xa7, 0xe3, 0x9b, 0x87, 0xf5, 0x7b, 0x6d, 0xab, 0xab,
	0x45, 0x9c, 0xa2, 0x07, 0x00, 0x89, 0xb3, 0xf4, 0x23, 0x87, 0xf9, 0x71, 0x34, 0x6e, 0x08, 0x40,
	0x7b, 0x39, 0xa0, 0x97, 0x19, 0xcf, 0xd2, 0xe4, 0x90, 0x09, 0xbd, 0x25, 0x89, 0x57, 0x89, 0x3d,
	0x5f, 0xdb, 0x34, 0xc1, 0xee, 0xb8, 0x29, 0x37, 0x53, 0x10, 0x7f, 0xbe, 0x3e, 0x4d, 0xb0, 0x8b,
	0x0e, 0xa0, 0x4d, 0x63, 0xc2, 0x24, 0xbf, 0x25, 0x73, 0x8d, 0x13, 0x38, 0xd3, 0x9c, 0x03, 0xd2,
	0xe3, 0xa2, 0xa2, 0xfa, 0x31, 0x34, 0xe5, 0x39, 0x1a, 0xd7, 0x0e, 0xeb, 0xdb, 0xc2, 0xaa, 0xd8,
	0x7c, 0x69, 0x2c, 0x66, 0x4e, 0x60, 0x13, 0x4c, 0x57, 0x01, 0xa3, 0x22, 0x36, 0x3d, 0xab, 0x2b,
	0x88, 0x96, 0xa4, 0x99, 0xbf, 0x87, 0x03, 0xee, 0xc3, 0xc2, 0x0b, 0x4c, 0x70, 0xe4, 0x62, 0xef,
	0x2a, 0xbb, 0x70, 0x1f, 0x20, 0x4b, 0x19, 0xee, 0xae, 0x5e, 0x91, 0x33, 0xed, 0x34, 0x67, 0xa8,
	0xf9, 0x87, 0x1a, 0xdc, 0xde, 0x0e, 0x40, 0x2d, 0xf7, 0x08, 0xda, 0x71, 0x82, 0x23, 0x69, 0xb2,
	0x56, 0x69, 0xd2, 0xe0, 0x42, 0xdc, 0x22, 0xfa, 0x0c, 0x3a, 0x6e, 0x10, 0x53, 0xec, 0x5d, 0x84,
	0x02, 0xa4, 0x98, 0x80, 0xf1, 0xef, 0x1d, 0x40, 0xaf, 0x12, 0xef, 0x6a, 0x87, 0xf7, 0xff, 0x3d,
	0x31, 0xe8, 0x03, 0x00, 0x8a, 0x23, 0xcf, 0xc6, 0xa1, 0xe3, 0x07, 0x22, 0x3b, 0x0d, 0xab, 0xcd,
	0x29, 0x4f, 0x38, 0x01, 0xfd, 0x00, 0x1a, 0x1e, 0x0e, 0x98, 0x33, 0xbe, 0x59, 0xce, 0x38, 0x61,
	0xeb, 0x31, 0xe7, 0x59, 0x52, 0x04, 0x7d, 0x0c, 0x03, 0x5e, 0xfa, 0x70, 0xc4, 0xec, 0xb4, 0x3e,
	0x35, 0x44, 0x3a, 0xf5, 0x15, 0x79, 0x26, 0xa9, 0xe8, 0x2e, 0xf4, 0x7d, 0x6a, 0x7b, 0x98, 0xba,
	0xc4, 0x4f, 0x44, 0x3e, 0x37, 0x85, 0xdf, 0x9e, 0x4f, 0x1f, 0xe7, 0x44, 0xf4, 0x00, 0x5a, 0x2b,
	0x51, 0x0d, 0xe9, 0xb8, 0x25, 0x22, 0x38, 0xc9, 0xbd, 0x97, 0x0b, 0xa6, 0x95, 0x8a, 0x9a, 0x7f,
	0xae, 0xc1, 0xee, 0x29, 0x73, 0xc8, 0x75, 0x06, 0x71, 0x0c, 0x2d, 0xca, 0x1c, 0x42, 0xb0, 0xa7,
	0x22, 0x98, 0xfe, 0x9a, 0xc7, 0x30, 0xd4, 0xc0, 0xa8, 0x7c, 0xe2, 0x31, 0x67, 0x0e, 0xb1, 0xdd,
	0x78, 0x15, 0x31, 0x01, 0xa9, 0x67, 0xb5, 0x39, 0x65, 0xc6, 0x09, 0xe6, 0x19, 0xec, 0x3f, 0xa7,
	0x42, 0xe3, 0x54, 0x5a, 0xb9, 0xa6, 0xe2, 0xf9, 0x05, 0x8c, 0xca, 0x7e, 0x73, 0xc0, 0x3e, 0xb5,
	0xd3, 0x25, 0xd6, 0x64, 0x92, 0xf8, 0x54, 0x89, 0x99, 0x0c, 0x6e, 0xf1, 0xf3, 0x33, 0x93, 0xbb,
	0x4c, 0xaf, 0x09, 0xee, 0x13, 0xd8, 0x2b, 0x7a, 0x55, 0x60, 0x3f, 0x05, 0x43, 0xe5, 0x5b, 0x7a,
	0x58, 0x87, 0xb9, 0x1d, 0x25, 0x6d, 0x65, 0x22, 0xe6, 0xdf, 0x6b, 0xb0, 0xcf, 0xed, 0x9c, 0xb8,
	0xcc, 0x3f, 0xf3, 0x99, 0x7f, 0xd9, 0xc2, 0xf3, 0x09, 0x18, 0x2b, 0x8a, 0x89, 0x06, 0x5f, 0x73,
	0xfb, 0x8a, 0x62, 0xc2, 0xd1, 0xb7, 0x56, 0xf2, 0x03, 0x8d, 0xa0, 0x39, 0xc7, 0x8b, 0x98, 0xc8,
	0x2b, 0xb4, 0x65, 0xa9, 0x3f, 0x7e, 0x89, 0x38, 0x0b, 0x86, 0x89, 0x38, 0x6f, 0x2d, 0x4b, 0xfe,
	0x98, 0x7f, 0xac, 0xc1, 0xa8, 0x8c, 0xf1, 0x52, 0xab, 0x45, 0x3f, 0x83, 0x81, 0x8c, 0x32, 0x5d,
	0x85, 0xa1, 0x43, 0x7c, 0x9c, 0x56, 0xa7, 0x51, 0x29, 0xd6, 0xa7, 0x82, 0xbf, 0xb6, 0xfa, 0x7e,
	0xfe, 0xe7, 0x63, 0x6a, 0xfe, 0xab, 0x06, 0x7b, 0x8f, 0x71, 0x80, 0x19, 0x4e, 0x8d, 0x5f, 0xcf,
	0x11, 0xbb, 0x03, 0x5d, 0xca, 0xed, 0x44, 0x2e, 0xb6, 0xa3, 0x55, 0x28, 0xc2, 0x56, 0xb7, 0x3a,
	0x29, 0xed, 0xdb, 0x55, 0xc8, 0x63, 0xea, 0x09, 0x64, 0x22, 0x78, 0x86, 0xa5, 0xfe, 0xcc, 0xbf,
	0x18, 0x00, 0x79, 0xb5, 0x42, 0x0f, 0xa0, 0x49, 0x99, 0xc3, 0x56, 0x54, 0x21, 0xbd, 0x3d, 0x95,
	0xed, 0xdd, 0x34, 0x6d, 0xef, 0xa6, 0xa7, 0x8c, 0xf8, 0xd1, 0xf2, 0x57, 0x4e, 0xc0, 0x6f, 0x32,
	0x29, 0x8b, 0xa6, 0xd0, 0x8e, 0xdf, 0x44, 0x17, 0xed, 0xaf, 0x21, 0x64, 0x38, 0xde, 0xfb, 0xd0,
	0x71, 0x5d, 0x51, 0xfe, 0x6d, 0xc7, 0xe3, 0x65, 0xa1, 0xbe, 0x5d, 0xa3, 0xed, 0xba, 0xbc, 0xfa,
	0x9f, 0x78, 0x1e, 0xfa, 0x02, 0xfa, 0xa9, 0x0a, 0xc1, 0x61, 0x7c, 0x86, 0x45, 0x23, 0xb0, 0x55,
	0xab, 0x2b, 0xb5, 0x2c, 0x21, 0x86, 0x7e, 0x0c, 0x3d, 0x37, 0x0e, 0x93, 0xdc, 0x5b, 0xa3, 0xbc,
	0xa5, 0xb3, 0x38, 0x4c, 0xe2, 0x48, 0xec, 0xd6, 0xc2, 0xea, 0x70, 0xe1, 0xd4, 0xe9, 0x57, 0xb0,
	0x9b, 0xeb, 0x2a, 0xb7, 0xcd, 0x73, 0xd5, 0xfb, 0xa9, 0xba, 0xf2, 0xfe, 0x25, 0xf4, 0x03, 0x67,
	0x8e, 0x83, 0xdc, 0x7d, 0xab, 0x7c, 0xdf, 0x7d, 0xc3, 0xf9, 0x02, 0x77, 0xa0, 0xbe, 0x84, 0xef,
	0x47, 0x30, 0xd4, 0x34, 0x95, 0x73, 0xa3, 0x52, 0x79, 0x90, 0x29, 0x67, 0xeb, 0xee, 0x2f, 0x7c,
	0x1c, 0x78, 0xf6, 0x99, 0x13, 0x48, 0xcf, 0x6d, 0xa1, 0xac, 0xdd, 0x52, 0x4f, 0x39, 0x5f, 0xee,
	0x64, 0x77, 0xa1, 0xbe, 0xd5, 0xba, 0x87, 0x9a, 0xae, 0xf2, 0x0d, 0xe7, 0xa8, 0x0f, 0x32, 0x75,
	0xe5, 0xfd, 0x73, 0x90, 0x16, 0xa9, 0xed, 0x06, 0xd8, 0x21, 0xe3, 0x4e, 0x19, 0xb8, 0x50, 0x16,
	0x01, 0x97, 0x72, 0x33, 0x2e, 0x86, 0x4e, 0xe0, 0xd6, 0x3c, 0x88, 0xdd, 0xdf, 0x62, 0xcf, 0x8e,
	0xa3, 0x3c, 0x66, 0xdd, 0xca, 0x1e, 0x61, 0x57, 0x89, 0xbf, 0x88, 0xd2, 0xb8, 0x7d, 0x0d, 0xa3,
	0xb2, 0x09, 0xb5, 0x80, 0x5e, 0xa5, 0x95, 0x5b, 0x05, 0x2b, 0x6a, 0x09, 0x8f, 0x60, 0x28, 0xc8,
	0x7e, 0xb4, 0xcc, 0x91, 0xf4, 0x2b, 0x6d, 0x0c, 0x52, 0xe1, 0x14, 0xc8, 0x63, 0xd8, 0x2b, 0xea,
	0x2b, 0x18, 0x83, 0x4a, 0x13, 0x48, 0x37, 0x91, 0x6d, 0xe3, 0x20, 0xc4, 0x64, 0x89, 0x3d, 0xdb,
	0x8f, 0x58, 0x2c, 0x0e, 0xd8, 0x6e, 0x65, 0x45, 0xe8, 0x49, 0xd1, 0xe7, 0x11, 0x8b, 0xf9, 0x31,
	0x7b, 0x08, 0x2d, 0x59, 0xc9, 0xd6, 0xe3, 0xe1, 0x3b, 0x9c, 0xe6, 0x54, 0xd8, 0x7c, 0x5b, 0x87,
	0x7d, 0xd9, 0x6c, 0x9d, 0x24, 0x09, 0x89, 0xcf, 0x78, 0x37, 0x7a, 0x2d, 0x75, 0xec, 0x08, 0xda,
	0x32, 0xef, 0xb8, 0x42, 0xbd, 0xac, 0x90, 0xa5, 0x8c, 0xb1, 0x50, 0x5f, 0xe8, 0x11, 0xf4, 0x1d,
	0x05, 0xd1, 0xd6, 0x5b, 0xb1, 0xf7, 0xb4, 0x66, 0x48, 0xf1, 0x65, 0x37, 0xd6, 0x73, 0xf4, 0xdf,
	0x77, 0xef, 0xca, 0x8a, 0x9d, 0x60, 0xb3, 0xdc, 0x09, 0x6e, 0x36, 0x6d, 0xad, 0x0b, 0x9a, 0x36,
	0xe3, 0xdd, 0x9b, 0xb6, 0xff, 0xec, 0x40, 0xaf, 0xb0, 0x0a, 0xf4, 0xa3, 0x42, 0x95, 0xee, 0x1f,
	0x8f, 0x37, 0x97, 0x7b, 0x2a, 0xf8, 0x59, 0x85, 0xfe, 0x29, 0x0c, 0xe5, 0xca, 0x65, 0x91, 0x96,
	0xc9, 0xbc, 0x53, 0x55, 0x41, 0x07, 0xa9, 0x6c, 0x9a, 0xcb, 0x33, 0xd8, 0x2b, 0xaa, 0xab, 0x5c,
	0xae, 0xac, 0xdc, 0x48, 0xb7, 0x50, 0x59, 0x91, 0x6e, 0x5e, 0xad, 0x22, 0x35, 0xae, 0x52, 0x91,
	0x9a, 0xef, 0x54, 0x91, 0xcc, 0x67, 0x30, 0x2a, 0x1f, 0x05, 0xd5, 0x5c, 0x4c, 0xc1, 0x48, 0x93,
	0x49, 0x1d, 0x07, 0xb4, 0xb9, 0x0d, 0x56, 0x26, 0x63, 0xfe, 0xb7, 0x06, 0x7b, 0xb2, 0x7b, 0x88,
	0x9c, 0x84, 0xbe, 0x8e, 0x2f, 0xd9, 0x1c, 0xdc, 0x86, 0x36, 0xf3, 0x43, 0x4c, 0x99, 0x13, 0x26,
	0xe2, 0x50, 0x35, 0xac, 0x9c, 0x90, 0xbf, 0xb3, 0xeb, 0xe7, 0xbd, 0xb3, 0x6f, 0x0a, 0xb5, 0xc2,
	0x3b, 0xfb, 0x7d, 0x30, 0xd2, 0xc7, 0xb0, 0x3a, 0x02, 0x2d, 0xf5, 0x0e, 0xe6, 0xda, 0xf2, 0x26,
	0x4a, 0x08, 0x5e, 0xf8, 0xbf, 0x4b, 0x9f, 0xc9, 0x82, 0xf6, 0x52, 0x90, 0x36, 0xc6, 0x22, 0xad,
	0x8d, 0xb1, 0x88, 0xf9, 0x0c, 0x50, 0x61, 0xf5, 0xa2, 0x9d, 0xe7, 0xab, 0xf1, 0xfc, 0x10, 0x47,
	0x94, 0x9f, 0x19, 0x39, 0xcb, 0xc9, 0x09, 0x7c, 0x35, 0xf2, 0x19, 0x20, 0xd7, 0x29, 0x7f, 0xcc,
	0x3f, 0xd5, 0xf8, 0x1b, 0xa0, 0x10, 0x48, 0xb5, 0x25, 0x33, 0xe8, 0x53, 0x45, 0xcb, 0xde, 0x0f,
	0x75, 0x51, 0xf7, 0x4a, 0xfd, 0x9b, 0x8e, 0xc1, 0xea, 0xd1, 0x02, 0xa4, 0x1f, 0xc2, 0x70, 0x15,
	0xd1, 0x55, 0x92, 0xc4, 0x84, 0x61, 0xcf, 0x16, 0xc9, 0x20, 0x8e, 0x4a, 0xdb, 0xda, 0xd5, 0x18,
	0x22, 0x5d, 0xcc, 0x7f, 0xd6, 0x60, 0xff, 0x25, 0x7f, 0xbf, 0xcf, 0x43, 0xff, 0x3a, 0x87, 0x39,
	0xe8, 0x73, 0xe8, 0x48, 0x05, 0x59, 0xf6, 0xea, 0xe7, 0xbc, 0x40, 0xe5, 0x9b, 0x5f, 0x7c, 0x9b,
	0x7f, 0xab, 0xc3, 0xa8, 0x8c, 0x37, 0x6b, 0x96, 0x91, 0x6c, 0xe2, 0x9c, 0x33, 0xc7, 0x0f, 0x9c,
	0xb9, 0x1f, 0xf8, 0x6c, 0xad, 0xf6, 0x64, 0x28, 0x38, 0x27, 0x1a, 0x03, 0x7d, 0x09, 0xe3, 0x4d,
	0x71, 0xfe, 0x0c, 0x62, 0xe9, 0x54, 0x6c, 0xb4, 0xa1, 0xc4, 0x8b, 0x12, 0x46, 0x3f, 0x81, 0xbe,
	0x87, 0x89, 0x7f, 0x86, 0x3d, 0x5b, 0xe4, 0x10, 0x55, 0x65, 0x64, 0x3f, 0x47, 0x2f, 0xce, 0xf0,
	0x49, 0xe4, 0xfd, 0xfa, 0xf5, 0xda, 0xea, 0x29, 0x61, 0xd1, 0xea, 0x50, 0x5d, 0x5b, 0xd8, 0xa7,
	0xaa, 0x8a, 0x5c, 0xa0, 0xfd, 0x42, 0xc8, 0xa2, 0x87, 0xd0, 0x49, 0xb5, 0x5d, 0x97, 0xaa, 0x0a,
	0x52, 0xa1, 0x0a, 0x4a, 0x72, 0xe6, 0x52, 0x74, 0x1f, 0x8c, 0x37, 0x0e, 0x89, 0xfc, 0x68, 0x49,
	0x55, 0xe5, 0xa8, 0x50, 0xca, 0xc4, 0xd0, 0xa7, 0xd0, 0xc4, 0x84, 0xc4, 0x24, 0x7d, 0xa0, 0x57,
	0x28, 0x28, 0xa1, 0xe3, 0x7f, 0x18, 0xd0, 0x94, 0xa3, 0x15, 0xf4, 0x14, 0x3a, 0xda, 0xa0, 0x12,
	0x69, 0xd9, 0xbb, 0x39, 0xbf, 0x9c, 0xbc, 0xb7, 0x91, 0x26, 0x72, 0x3f, 0xcd, 0x1b, 0xe8, 0x2b,
	0x30, 0xd2, 0x11, 0x23, 0x7a, 0x3f, 0x17, 0x2b, 0x8d, 0x1d, 0xcf, 0xb3, 0xf0, 0x1c, 0x20, 0x9f,
	0x70, 0xa1, 0x03, 0xad, 0xef, 0x2c, 0xcf, 0x03, 0x27, 0xb7, 0xb7, 0x33, 0x33, 0x53, 0x4b, 0xf9,
	0x22, 0x2d, 0xcf, 0x91, 0xd0, 0xdd, 0xa2, 0x5e, 0xc5, 0xa0, 0x6b, 0xf2, 0xfd, 0x8b, 0xc4, 0x32,
	0x47, 0x4f, 0xa1, 0xa3, 0x4d, 0x8a, 0xf4, 0xe8, 0x6d, 0x0e, 0x90, 0xce, 0x5b, 0xfb, 0x53, 0x68,
	0x67, 0xd3, 0x09, 0xa4, 0x5d, 0xd4, 0xe5, 0xf9, 0xc9, 0xe4, 0x60, 0x2b, 0x2f, 0xb3, 0xf3, 0x0a,
	0xfa, 0xc5, 0xc9, 0x01, 0xfa, 0x48, 0x77, 0xba, 0x65, 0x96, 0x31, 0x39, 0xac, 0x16, 0xc8, 0xcc,
	0xbe, 0x80, 0xae, 0xfe, 0xc2, 0x47, 0x1f, 0x14, 0x03, 0x54, 0x9a, 0x37, 0x4c, 0x3e, 0xac, 0x62,
	0xeb, 0x38, 0x8b, 0xcf, 0x68, 0x1d, 0xe7, 0xd6, 0x21, 0x80, 0x8e, 0x73, 0xfb, 0x0b, 0x5c, 0xa4,
	0x50, 0xaf, 0xf0, 0x24, 0x46, 0x1a, 0x92, 0x6d, 0x6f, 0xe5, 0xc9, 0x68, 0xa3, 0x49, 0x7d, 0x12,
	0x26, 0x6c, 0x2d, 0x11, 0x16, 0xef, 0x62, 0x1d, 0xe1, 0xd6, 0x86, 0x55, 0x47, 0xb8, 0xfd, 0x1a,
	0x37, 0x6f, 0x20, 0x4b, 0xcd, 0xc5, 0xd3, 0x5b, 0x41, 0x47, 0xb8, 0xed, 0xc2, 0x9e, 0x7c, 0x54,
	0xc9, 0xd7, 0x83, 0x59, 0x2c, 0xb3, 0x3a, 0xd4, 0xad, 0x17, 0x86, 0x0e, 0x75, 0x7b, 0x85, 0x36,
	0x6f, 0xcc, 0x9b, 0x22, 0x26, 0x9f, 0xfd, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x79, 0x1b, 0x13, 0x24,
	0xb8, 0x19, 0x00, 0x00,
}
