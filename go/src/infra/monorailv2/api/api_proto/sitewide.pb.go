// Copyright 2018 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: api/api_proto/sitewide.proto

package monorail

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next available tag: 4
type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	TokenPath string `protobuf:"bytes,3,opt,name=token_path,json=tokenPath,proto3" json:"token_path,omitempty"`
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_sitewide_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_sitewide_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_sitewide_proto_rawDescGZIP(), []int{0}
}

func (x *RefreshTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RefreshTokenRequest) GetTokenPath() string {
	if x != nil {
		return x.TokenPath
	}
	return ""
}

// Next available tag: 3
type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token           string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TokenExpiresSec uint32 `protobuf:"varint,2,opt,name=token_expires_sec,json=tokenExpiresSec,proto3" json:"token_expires_sec,omitempty"`
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_sitewide_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_sitewide_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_sitewide_proto_rawDescGZIP(), []int{1}
}

func (x *RefreshTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RefreshTokenResponse) GetTokenExpiresSec() uint32 {
	if x != nil {
		return x.TokenExpiresSec
	}
	return 0
}

// Next available tag: 1
type GetServerStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServerStatusRequest) Reset() {
	*x = GetServerStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_sitewide_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerStatusRequest) ProtoMessage() {}

func (x *GetServerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_sitewide_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerStatusRequest.ProtoReflect.Descriptor instead.
func (*GetServerStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_sitewide_proto_rawDescGZIP(), []int{2}
}

// Next available tag: 4
type GetServerStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerMessage string `protobuf:"bytes,1,opt,name=banner_message,json=bannerMessage,proto3" json:"banner_message,omitempty"`
	BannerTime    uint32 `protobuf:"fixed32,2,opt,name=banner_time,json=bannerTime,proto3" json:"banner_time,omitempty"`
	ReadOnly      bool   `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
}

func (x *GetServerStatusResponse) Reset() {
	*x = GetServerStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_sitewide_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerStatusResponse) ProtoMessage() {}

func (x *GetServerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_sitewide_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerStatusResponse.ProtoReflect.Descriptor instead.
func (*GetServerStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_api_proto_sitewide_proto_rawDescGZIP(), []int{3}
}

func (x *GetServerStatusResponse) GetBannerMessage() string {
	if x != nil {
		return x.BannerMessage
	}
	return ""
}

func (x *GetServerStatusResponse) GetBannerTime() uint32 {
	if x != nil {
		return x.BannerTime
	}
	return 0
}

func (x *GetServerStatusResponse) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

var File_api_api_proto_sitewide_proto protoreflect.FileDescriptor

var file_api_api_proto_sitewide_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x69, 0x74, 0x65, 0x77, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x22, 0x4a, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x58, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x53, 0x65, 0x63, 0x22, 0x18,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x32, 0xb5, 0x01, 0x0a, 0x08, 0x53, 0x69, 0x74,
	0x65, 0x77, 0x69, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x29, 0x5a, 0x27, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_api_proto_sitewide_proto_rawDescOnce sync.Once
	file_api_api_proto_sitewide_proto_rawDescData = file_api_api_proto_sitewide_proto_rawDesc
)

func file_api_api_proto_sitewide_proto_rawDescGZIP() []byte {
	file_api_api_proto_sitewide_proto_rawDescOnce.Do(func() {
		file_api_api_proto_sitewide_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_api_proto_sitewide_proto_rawDescData)
	})
	return file_api_api_proto_sitewide_proto_rawDescData
}

var file_api_api_proto_sitewide_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_api_proto_sitewide_proto_goTypes = []interface{}{
	(*RefreshTokenRequest)(nil),     // 0: monorail.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),    // 1: monorail.RefreshTokenResponse
	(*GetServerStatusRequest)(nil),  // 2: monorail.GetServerStatusRequest
	(*GetServerStatusResponse)(nil), // 3: monorail.GetServerStatusResponse
}
var file_api_api_proto_sitewide_proto_depIdxs = []int32{
	0, // 0: monorail.Sitewide.RefreshToken:input_type -> monorail.RefreshTokenRequest
	2, // 1: monorail.Sitewide.GetServerStatus:input_type -> monorail.GetServerStatusRequest
	1, // 2: monorail.Sitewide.RefreshToken:output_type -> monorail.RefreshTokenResponse
	3, // 3: monorail.Sitewide.GetServerStatus:output_type -> monorail.GetServerStatusResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_api_proto_sitewide_proto_init() }
func file_api_api_proto_sitewide_proto_init() {
	if File_api_api_proto_sitewide_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_api_proto_sitewide_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_sitewide_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_sitewide_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_sitewide_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_api_proto_sitewide_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_api_proto_sitewide_proto_goTypes,
		DependencyIndexes: file_api_api_proto_sitewide_proto_depIdxs,
		MessageInfos:      file_api_api_proto_sitewide_proto_msgTypes,
	}.Build()
	File_api_api_proto_sitewide_proto = out.File
	file_api_api_proto_sitewide_proto_rawDesc = nil
	file_api_api_proto_sitewide_proto_goTypes = nil
	file_api_api_proto_sitewide_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SitewideClient is the client API for Sitewide service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SitewideClient interface {
	RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error)
	GetServerStatus(ctx context.Context, in *GetServerStatusRequest, opts ...grpc.CallOption) (*GetServerStatusResponse, error)
}
type sitewidePRPCClient struct {
	client *prpc.Client
}

func NewSitewidePRPCClient(client *prpc.Client) SitewideClient {
	return &sitewidePRPCClient{client}
}

func (c *sitewidePRPCClient) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error) {
	out := new(RefreshTokenResponse)
	err := c.client.Call(ctx, "monorail.Sitewide", "RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sitewidePRPCClient) GetServerStatus(ctx context.Context, in *GetServerStatusRequest, opts ...grpc.CallOption) (*GetServerStatusResponse, error) {
	out := new(GetServerStatusResponse)
	err := c.client.Call(ctx, "monorail.Sitewide", "GetServerStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type sitewideClient struct {
	cc grpc.ClientConnInterface
}

func NewSitewideClient(cc grpc.ClientConnInterface) SitewideClient {
	return &sitewideClient{cc}
}

func (c *sitewideClient) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error) {
	out := new(RefreshTokenResponse)
	err := c.cc.Invoke(ctx, "/monorail.Sitewide/RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sitewideClient) GetServerStatus(ctx context.Context, in *GetServerStatusRequest, opts ...grpc.CallOption) (*GetServerStatusResponse, error) {
	out := new(GetServerStatusResponse)
	err := c.cc.Invoke(ctx, "/monorail.Sitewide/GetServerStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SitewideServer is the server API for Sitewide service.
type SitewideServer interface {
	RefreshToken(context.Context, *RefreshTokenRequest) (*RefreshTokenResponse, error)
	GetServerStatus(context.Context, *GetServerStatusRequest) (*GetServerStatusResponse, error)
}

// UnimplementedSitewideServer can be embedded to have forward compatible implementations.
type UnimplementedSitewideServer struct {
}

func (*UnimplementedSitewideServer) RefreshToken(context.Context, *RefreshTokenRequest) (*RefreshTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshToken not implemented")
}
func (*UnimplementedSitewideServer) GetServerStatus(context.Context, *GetServerStatusRequest) (*GetServerStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerStatus not implemented")
}

func RegisterSitewideServer(s prpc.Registrar, srv SitewideServer) {
	s.RegisterService(&_Sitewide_serviceDesc, srv)
}

func _Sitewide_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SitewideServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Sitewide/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SitewideServer).RefreshToken(ctx, req.(*RefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sitewide_GetServerStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SitewideServer).GetServerStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.Sitewide/GetServerStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SitewideServer).GetServerStatus(ctx, req.(*GetServerStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sitewide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monorail.Sitewide",
	HandlerType: (*SitewideServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RefreshToken",
			Handler:    _Sitewide_RefreshToken_Handler,
		},
		{
			MethodName: "GetServerStatus",
			Handler:    _Sitewide_GetServerStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api_proto/sitewide.proto",
}
