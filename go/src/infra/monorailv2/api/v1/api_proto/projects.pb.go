// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v1/api_proto/projects.proto

package monorail_v1

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for ListIssueTemplates
// Next available tag: 4
type ListIssueTemplatesRequest struct {
	// The name of the project these templates belong to.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListIssueTemplatesRequest` call.
	// Provide this to retrieve the subsequent page.
	// When paginating, all other parameters provided to
	// `ListIssueTemplatesRequest` must match the call that provided the token.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIssueTemplatesRequest) Reset()         { *m = ListIssueTemplatesRequest{} }
func (m *ListIssueTemplatesRequest) String() string { return proto.CompactTextString(m) }
func (*ListIssueTemplatesRequest) ProtoMessage()    {}
func (*ListIssueTemplatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c420c733c90f8ec5, []int{0}
}

func (m *ListIssueTemplatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssueTemplatesRequest.Unmarshal(m, b)
}
func (m *ListIssueTemplatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssueTemplatesRequest.Marshal(b, m, deterministic)
}
func (m *ListIssueTemplatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssueTemplatesRequest.Merge(m, src)
}
func (m *ListIssueTemplatesRequest) XXX_Size() int {
	return xxx_messageInfo_ListIssueTemplatesRequest.Size(m)
}
func (m *ListIssueTemplatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssueTemplatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssueTemplatesRequest proto.InternalMessageInfo

func (m *ListIssueTemplatesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListIssueTemplatesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListIssueTemplatesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response message for ListIssueTemplates
// Next available tag: 3
type ListIssueTemplatesResponse struct {
	Templates []*IssueTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIssueTemplatesResponse) Reset()         { *m = ListIssueTemplatesResponse{} }
func (m *ListIssueTemplatesResponse) String() string { return proto.CompactTextString(m) }
func (*ListIssueTemplatesResponse) ProtoMessage()    {}
func (*ListIssueTemplatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c420c733c90f8ec5, []int{1}
}

func (m *ListIssueTemplatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssueTemplatesResponse.Unmarshal(m, b)
}
func (m *ListIssueTemplatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssueTemplatesResponse.Marshal(b, m, deterministic)
}
func (m *ListIssueTemplatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssueTemplatesResponse.Merge(m, src)
}
func (m *ListIssueTemplatesResponse) XXX_Size() int {
	return xxx_messageInfo_ListIssueTemplatesResponse.Size(m)
}
func (m *ListIssueTemplatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssueTemplatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssueTemplatesResponse proto.InternalMessageInfo

func (m *ListIssueTemplatesResponse) GetTemplates() []*IssueTemplate {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *ListIssueTemplatesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request message for FetchProjectEnvironment
// Next available tag: 2
type FetchProjectEnvironmentRequest struct {
	// The name of the project these config environments belong to.
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchProjectEnvironmentRequest) Reset()         { *m = FetchProjectEnvironmentRequest{} }
func (m *FetchProjectEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*FetchProjectEnvironmentRequest) ProtoMessage()    {}
func (*FetchProjectEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c420c733c90f8ec5, []int{2}
}

func (m *FetchProjectEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchProjectEnvironmentRequest.Unmarshal(m, b)
}
func (m *FetchProjectEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchProjectEnvironmentRequest.Marshal(b, m, deterministic)
}
func (m *FetchProjectEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchProjectEnvironmentRequest.Merge(m, src)
}
func (m *FetchProjectEnvironmentRequest) XXX_Size() int {
	return xxx_messageInfo_FetchProjectEnvironmentRequest.Size(m)
}
func (m *FetchProjectEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchProjectEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchProjectEnvironmentRequest proto.InternalMessageInfo

func (m *FetchProjectEnvironmentRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

// Response message for FetchProjectEnvironment
// Next available tag: 21
type FetchProjectEnvironmentResponse struct {
	// List of well known statuses that belong to this project.
	StatusDefs []*StatusDef `protobuf:"bytes,1,rep,name=status_defs,json=statusDefs,proto3" json:"status_defs,omitempty"`
	// List of well known labels that belong to this project.
	LabelDefs []*LabelDef `protobuf:"bytes,2,rep,name=label_defs,json=labelDefs,proto3" json:"label_defs,omitempty"`
	// List of components that belong to this project.
	ComponentDefs []*ComponentDef `protobuf:"bytes,3,rep,name=component_defs,json=componentDefs,proto3" json:"component_defs,omitempty"`
	// List of custom fields that belong to this project.
	FieldDefs []*FieldDef `protobuf:"bytes,4,rep,name=field_defs,json=fieldDefs,proto3" json:"field_defs,omitempty"`
	// List of approval fields that belong to this project.
	ApprovalDefs []*ApprovalDef `protobuf:"bytes,5,rep,name=approval_defs,json=approvalDefs,proto3" json:"approval_defs,omitempty"`
	// If an issue's status is one of these, show "Merge with:".
	StatusesOfferMerge []*StatusDef `protobuf:"bytes,6,rep,name=statuses_offer_merge,json=statusesOfferMerge,proto3" json:"statuses_offer_merge,omitempty"`
	// An issue may only have one label that begins with these prefixes
	// E.g. priority, since no issue can be both Priority-High and Priority-Low.
	ExclusiveLabelPrefixes []string `protobuf:"bytes,7,rep,name=exclusive_label_prefixes,json=exclusiveLabelPrefixes,proto3" json:"exclusive_label_prefixes,omitempty"`
	// Search terms that admins defined for this project.
	// TODO(monorail:7429) add ProjectSavedQuery after its proto is defined.
	// repeated ProjectSavedQuery saved_queries = 8;
	// Default search query for this project, only visible for project members.
	DefaultQuery string `protobuf:"bytes,9,opt,name=default_query,json=defaultQuery,proto3" json:"default_query,omitempty"`
	// Default sort specification for this project.
	DefaultSort string `protobuf:"bytes,10,opt,name=default_sort,json=defaultSort,proto3" json:"default_sort,omitempty"`
	// Default list columns for this project.
	DefaultColSpec string `protobuf:"bytes,11,opt,name=default_col_spec,json=defaultColSpec,proto3" json:"default_col_spec,omitempty"`
	// Default column dimension in grid view for this project.
	DefaultXAttr string `protobuf:"bytes,12,opt,name=default_x_attr,json=defaultXAttr,proto3" json:"default_x_attr,omitempty"`
	// Default row dimension in grid view for this project.
	DefaultYAttr string `protobuf:"bytes,13,opt,name=default_y_attr,json=defaultYAttr,proto3" json:"default_y_attr,omitempty"`
	// URL pointing to this project's logo image
	ProjectThumbnailUrl string `protobuf:"bytes,14,opt,name=project_thumbnail_url,json=projectThumbnailUrl,proto3" json:"project_thumbnail_url,omitempty"`
	// URL format to browse source code revisions for this project.
	RevisionUrlFormat string `protobuf:"bytes,15,opt,name=revision_url_format,json=revisionUrlFormat,proto3" json:"revision_url_format,omitempty"`
	// A project's custom URL for the "New issue" link, only if specified.
	CustomIssueEntryUrl string `protobuf:"bytes,16,opt,name=custom_issue_entry_url,json=customIssueEntryUrl,proto3" json:"custom_issue_entry_url,omitempty"`
	// Default template used for issue entry for members of this project.
	DefaultTemplateForMembers *IssueTemplate `protobuf:"bytes,17,opt,name=default_template_for_members,json=defaultTemplateForMembers,proto3" json:"default_template_for_members,omitempty"`
	// Default template used for issue entry for non-members of this project.
	DefaultTemplateForNonMembers *IssueTemplate `protobuf:"bytes,18,opt,name=default_template_for_non_members,json=defaultTemplateForNonMembers,proto3" json:"default_template_for_non_members,omitempty"`
	// It's debatable whether this is needed. For completeness of a resource,
	// this should be included, but since this isn't a "standard" resource and
	// the client already knows the project name it could be omitted.
	// I can go either way
	// Display name of this project, ie Monorail or Chromium
	ProjectName string `protobuf:"bytes,19,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	// Short description of this project. Shown as tool-tip on project selector.
	ProjectSummary       string   `protobuf:"bytes,20,opt,name=project_summary,json=projectSummary,proto3" json:"project_summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchProjectEnvironmentResponse) Reset()         { *m = FetchProjectEnvironmentResponse{} }
func (m *FetchProjectEnvironmentResponse) String() string { return proto.CompactTextString(m) }
func (*FetchProjectEnvironmentResponse) ProtoMessage()    {}
func (*FetchProjectEnvironmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c420c733c90f8ec5, []int{3}
}

func (m *FetchProjectEnvironmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchProjectEnvironmentResponse.Unmarshal(m, b)
}
func (m *FetchProjectEnvironmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchProjectEnvironmentResponse.Marshal(b, m, deterministic)
}
func (m *FetchProjectEnvironmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchProjectEnvironmentResponse.Merge(m, src)
}
func (m *FetchProjectEnvironmentResponse) XXX_Size() int {
	return xxx_messageInfo_FetchProjectEnvironmentResponse.Size(m)
}
func (m *FetchProjectEnvironmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchProjectEnvironmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchProjectEnvironmentResponse proto.InternalMessageInfo

func (m *FetchProjectEnvironmentResponse) GetStatusDefs() []*StatusDef {
	if m != nil {
		return m.StatusDefs
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetLabelDefs() []*LabelDef {
	if m != nil {
		return m.LabelDefs
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetComponentDefs() []*ComponentDef {
	if m != nil {
		return m.ComponentDefs
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetFieldDefs() []*FieldDef {
	if m != nil {
		return m.FieldDefs
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetApprovalDefs() []*ApprovalDef {
	if m != nil {
		return m.ApprovalDefs
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetStatusesOfferMerge() []*StatusDef {
	if m != nil {
		return m.StatusesOfferMerge
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetExclusiveLabelPrefixes() []string {
	if m != nil {
		return m.ExclusiveLabelPrefixes
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetDefaultQuery() string {
	if m != nil {
		return m.DefaultQuery
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetDefaultSort() string {
	if m != nil {
		return m.DefaultSort
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetDefaultColSpec() string {
	if m != nil {
		return m.DefaultColSpec
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetDefaultXAttr() string {
	if m != nil {
		return m.DefaultXAttr
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetDefaultYAttr() string {
	if m != nil {
		return m.DefaultYAttr
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetProjectThumbnailUrl() string {
	if m != nil {
		return m.ProjectThumbnailUrl
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetRevisionUrlFormat() string {
	if m != nil {
		return m.RevisionUrlFormat
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetCustomIssueEntryUrl() string {
	if m != nil {
		return m.CustomIssueEntryUrl
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetDefaultTemplateForMembers() *IssueTemplate {
	if m != nil {
		return m.DefaultTemplateForMembers
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetDefaultTemplateForNonMembers() *IssueTemplate {
	if m != nil {
		return m.DefaultTemplateForNonMembers
	}
	return nil
}

func (m *FetchProjectEnvironmentResponse) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *FetchProjectEnvironmentResponse) GetProjectSummary() string {
	if m != nil {
		return m.ProjectSummary
	}
	return ""
}

func init() {
	proto.RegisterType((*ListIssueTemplatesRequest)(nil), "monorail.v1.ListIssueTemplatesRequest")
	proto.RegisterType((*ListIssueTemplatesResponse)(nil), "monorail.v1.ListIssueTemplatesResponse")
	proto.RegisterType((*FetchProjectEnvironmentRequest)(nil), "monorail.v1.FetchProjectEnvironmentRequest")
	proto.RegisterType((*FetchProjectEnvironmentResponse)(nil), "monorail.v1.FetchProjectEnvironmentResponse")
}

func init() { proto.RegisterFile("api/v1/api_proto/projects.proto", fileDescriptor_c420c733c90f8ec5) }

var fileDescriptor_c420c733c90f8ec5 = []byte{
	// 871 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xd6, 0x3a, 0x34, 0xc4, 0xc7, 0x71, 0xd2, 0x4e, 0x9a, 0x74, 0x63, 0x5a, 0xea, 0x1a, 0x94,
	0x9a, 0x52, 0x6c, 0xd5, 0x05, 0x35, 0xaa, 0x54, 0x89, 0x50, 0x1a, 0x81, 0xd4, 0x96, 0x60, 0xa7,
	0x02, 0xc4, 0xc5, 0x68, 0xbc, 0x39, 0xeb, 0x2c, 0xec, 0xce, 0x6c, 0x67, 0x66, 0xad, 0xa4, 0x17,
	0x5c, 0xf0, 0x00, 0xdc, 0xf0, 0x00, 0x3c, 0x02, 0x17, 0x3c, 0x0a, 0x2f, 0x80, 0x10, 0x4f, 0xc1,
	0x15, 0x9a, 0xd9, 0x99, 0xd4, 0xab, 0xc4, 0x09, 0x52, 0xef, 0x66, 0xbe, 0x9f, 0xf9, 0xce, 0x1c,
	0xef, 0x1c, 0xc3, 0x4d, 0x96, 0x27, 0xfd, 0xe9, 0xbd, 0x3e, 0xcb, 0x13, 0x9a, 0x4b, 0xa1, 0x45,
	0x3f, 0x97, 0xe2, 0x07, 0x8c, 0xb4, 0xea, 0xd9, 0x2d, 0x69, 0x64, 0x82, 0x0b, 0xc9, 0x92, 0xb4,
	0x37, 0xbd, 0xd7, 0xba, 0x3b, 0x11, 0x62, 0x92, 0xa2, 0x53, 0x96, 0x1b, 0x63, 0xed, 0xc7, 0x09,
	0xa6, 0x07, 0x74, 0x8c, 0x87, 0x6c, 0x9a, 0x08, 0x59, 0x5a, 0x5b, 0x5b, 0xf3, 0xd4, 0x12, 0x95,
	0x28, 0x64, 0x84, 0x4e, 0xf7, 0xc1, 0x3c, 0x1d, 0xe3, 0x5c, 0x68, 0xa6, 0x13, 0xc1, 0x95, 0x3f,
	0x72, 0x5e, 0xb9, 0x54, 0x8c, 0x67, 0xaa, 0xee, 0xfc, 0x12, 0xc0, 0xe6, 0xd3, 0x44, 0xe9, 0x2f,
	0x95, 0x2a, 0x70, 0x1f, 0xb3, 0x3c, 0x65, 0x1a, 0xd5, 0x10, 0x5f, 0x16, 0xa8, 0x34, 0xf9, 0x04,
	0x16, 0x73, 0x26, 0x91, 0xeb, 0x30, 0x68, 0x07, 0xdd, 0xfa, 0x67, 0x37, 0xfe, 0xda, 0xa9, 0xfd,
	0xbb, 0x73, 0x0d, 0xd6, 0x59, 0x9e, 0xf4, 0x22, 0x39, 0x2e, 0x26, 0xbd, 0x48, 0x64, 0xfd, 0xbd,
	0xf2, 0xe8, 0xa1, 0x13, 0x93, 0x77, 0xa0, 0x9e, 0xb3, 0x09, 0x52, 0x95, 0xbc, 0xc2, 0xb0, 0xd6,
	0x0e, 0xba, 0x97, 0x86, 0x4b, 0x06, 0x18, 0x25, 0xaf, 0x90, 0xdc, 0x00, 0xb0, 0xa4, 0x16, 0x3f,
	0x22, 0x0f, 0x17, 0xcc, 0xb9, 0x43, 0x2b, 0xdf, 0x37, 0x40, 0xe7, 0x27, 0x68, 0x9d, 0x55, 0x8f,
	0xca, 0x05, 0x57, 0x48, 0xb6, 0xa1, 0xae, 0x3d, 0x18, 0x06, 0xed, 0x85, 0x6e, 0x63, 0xd0, 0xea,
	0xcd, 0x34, 0xbe, 0x57, 0xf1, 0x0d, 0x5f, 0x8b, 0xc9, 0x16, 0xac, 0x72, 0x3c, 0xd2, 0x74, 0x26,
	0xbb, 0x66, 0xb3, 0x9b, 0x06, 0xde, 0x3b, 0xc9, 0xff, 0x06, 0xde, 0xdd, 0x45, 0x1d, 0x1d, 0xba,
	0x3b, 0x3d, 0xe1, 0xd3, 0x44, 0x0a, 0x9e, 0x21, 0xd7, 0x6f, 0xd6, 0x94, 0xce, 0xef, 0x4b, 0x70,
	0x73, 0xee, 0xc9, 0xee, 0x7a, 0x0f, 0xa0, 0xa1, 0x34, 0xd3, 0x85, 0xa2, 0x07, 0x18, 0xfb, 0x0b,
	0x6e, 0x54, 0x2e, 0x38, 0xb2, 0xfc, 0xe7, 0x18, 0x0f, 0x41, 0xf9, 0xa5, 0x22, 0x1f, 0x03, 0xa4,
	0x6c, 0x8c, 0x69, 0xe9, 0xab, 0x59, 0xdf, 0x7a, 0xc5, 0xf7, 0xd4, 0xd0, 0xc6, 0x56, 0x4f, 0xdd,
	0x4a, 0x91, 0x4f, 0x61, 0x25, 0x12, 0x59, 0x2e, 0x38, 0x72, 0x5d, 0x3a, 0x17, 0xac, 0x73, 0xb3,
	0xe2, 0x7c, 0xec, 0x25, 0xc6, 0xdd, 0x8c, 0x66, 0x76, 0x36, 0xb7, 0xfc, 0xa2, 0xad, 0xfb, 0xad,
	0x33, 0x72, 0x77, 0x0d, 0x6d, 0x73, 0x63, 0xb7, 0x52, 0xe4, 0x11, 0x34, 0x59, 0x9e, 0x4b, 0x31,
	0x65, 0xae, 0xe0, 0x4b, 0xd6, 0x18, 0x56, 0x8c, 0x3b, 0x4e, 0x61, 0xbc, 0xcb, 0xec, 0xf5, 0x46,
	0x91, 0x2f, 0xe0, 0x6a, 0x79, 0x75, 0x54, 0x54, 0xc4, 0x31, 0x4a, 0x9a, 0xa1, 0x9c, 0x60, 0xb8,
	0x78, 0x6e, 0xbb, 0x88, 0xf7, 0x7c, 0x65, 0x2c, 0xcf, 0x8c, 0x83, 0x6c, 0x43, 0x88, 0x47, 0x51,
	0x5a, 0xa8, 0x64, 0x8a, 0xb4, 0x6c, 0x60, 0x2e, 0x31, 0x4e, 0x8e, 0x50, 0x85, 0x6f, 0xb7, 0x17,
	0xba, 0xf5, 0xe1, 0xc6, 0x09, 0x6f, 0x1b, 0xb8, 0xe7, 0x58, 0xf2, 0x1e, 0x34, 0x0f, 0x30, 0x66,
	0x45, 0xaa, 0xe9, 0xcb, 0x02, 0xe5, 0x71, 0x58, 0xb7, 0x1f, 0xd3, 0xb2, 0x03, 0xbf, 0x36, 0x18,
	0xb9, 0x05, 0x7e, 0x4f, 0x95, 0x90, 0x3a, 0x04, 0xab, 0x69, 0x38, 0x6c, 0x24, 0xa4, 0x26, 0x5d,
	0xb8, 0xec, 0x25, 0x91, 0x48, 0xa9, 0xca, 0x31, 0x0a, 0x1b, 0x56, 0xb6, 0xe2, 0xf0, 0xc7, 0x22,
	0x1d, 0xe5, 0x18, 0x91, 0xf7, 0xc1, 0x23, 0xf4, 0x88, 0x32, 0xad, 0x65, 0xb8, 0x5c, 0x89, 0xfc,
	0x76, 0x47, 0x6b, 0x39, 0xab, 0x3a, 0x2e, 0x55, 0xcd, 0x8a, 0xea, 0x3b, 0xab, 0x1a, 0xc0, 0xba,
	0x1f, 0x07, 0xfa, 0xb0, 0xc8, 0xc6, 0x9c, 0x25, 0x29, 0x2d, 0x64, 0x1a, 0xae, 0x58, 0xf1, 0x9a,
	0x23, 0xf7, 0x3d, 0xf7, 0x42, 0xa6, 0xa4, 0x07, 0x6b, 0x12, 0xa7, 0x89, 0x4a, 0x04, 0x37, 0x52,
	0x1a, 0x0b, 0x99, 0x31, 0x1d, 0xae, 0x5a, 0xc7, 0x15, 0x4f, 0xbd, 0x90, 0xe9, 0xae, 0x25, 0xc8,
	0x7d, 0xd8, 0x88, 0x0a, 0xa5, 0x45, 0x46, 0x13, 0xf3, 0x26, 0x29, 0x72, 0x2d, 0x8f, 0x6d, 0xc8,
	0xe5, 0x32, 0xa4, 0x64, 0xed, 0x83, 0x7d, 0x62, 0x38, 0x13, 0xf2, 0x3d, 0x5c, 0xf7, 0xe5, 0xfb,
	0xa7, 0x6b, 0x82, 0x68, 0x86, 0xd9, 0x18, 0xa5, 0x0a, 0xaf, 0xb4, 0x83, 0x0b, 0x9e, 0xfc, 0xa6,
	0xf3, 0x7b, 0x60, 0x57, 0xc8, 0x67, 0xa5, 0x99, 0x8c, 0xa1, 0x7d, 0xe6, 0xe1, 0x5c, 0xf0, 0x93,
	0x00, 0x72, 0x61, 0xc0, 0xf5, 0xd3, 0x01, 0xcf, 0x05, 0xf7, 0x19, 0xb7, 0x60, 0xd9, 0x77, 0x96,
	0xb3, 0x0c, 0xc3, 0xb5, 0xf2, 0x27, 0x77, 0xd8, 0x73, 0x96, 0x21, 0xb9, 0x0d, 0xab, 0x5e, 0xa2,
	0x8a, 0x2c, 0x63, 0xf2, 0x38, 0xbc, 0x5a, 0xfe, 0xe2, 0x0e, 0x1e, 0x95, 0xe8, 0xe0, 0xef, 0x1a,
	0x2c, 0xb9, 0x61, 0xa1, 0xc8, 0x6f, 0x01, 0x90, 0xd3, 0x83, 0x91, 0x6c, 0x55, 0x1f, 0xf9, 0xbc,
	0x49, 0xde, 0xba, 0x7d, 0xa1, 0xae, 0x1c, 0x41, 0x9d, 0xed, 0x9f, 0xff, 0xfc, 0xe7, 0xd7, 0xda,
	0xa0, 0xf3, 0x51, 0x3f, 0x97, 0x79, 0xd4, 0x9f, 0x75, 0xf9, 0x5a, 0xfa, 0xa7, 0xed, 0x0f, 0x83,
	0x3b, 0xe4, 0x8f, 0x00, 0xae, 0xcd, 0x19, 0x70, 0xe4, 0xc3, 0xea, 0x4c, 0x38, 0x77, 0xc0, 0xb6,
	0xee, 0xfe, 0x3f, 0xb1, 0x2b, 0xf8, 0x91, 0x2d, 0xf8, 0x41, 0x67, 0x70, 0x4e, 0xc1, 0x73, 0xce,
	0x78, 0x18, 0xdc, 0x19, 0x2f, 0xda, 0xff, 0xc1, 0xfb, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x4c,
	0x75, 0xcb, 0xfa, 0xe0, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProjectsClient is the client API for Projects service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectsClient interface {
	// Returns all templates for specified project.
	//
	// Raises:
	//   NOT_FOUND if the requested parent project is not found.
	//   INVALID_ARGUMENT if the given `parent` is not valid.
	ListIssueTemplates(ctx context.Context, in *ListIssueTemplatesRequest, opts ...grpc.CallOption) (*ListIssueTemplatesResponse, error)
	// Returns all project specific configurations needed for the SPA client.
	FetchProjectEnvironment(ctx context.Context, in *FetchProjectEnvironmentRequest, opts ...grpc.CallOption) (*FetchProjectEnvironmentResponse, error)
}
type projectsPRPCClient struct {
	client *prpc.Client
}

func NewProjectsPRPCClient(client *prpc.Client) ProjectsClient {
	return &projectsPRPCClient{client}
}

func (c *projectsPRPCClient) ListIssueTemplates(ctx context.Context, in *ListIssueTemplatesRequest, opts ...grpc.CallOption) (*ListIssueTemplatesResponse, error) {
	out := new(ListIssueTemplatesResponse)
	err := c.client.Call(ctx, "monorail.v1.Projects", "ListIssueTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsPRPCClient) FetchProjectEnvironment(ctx context.Context, in *FetchProjectEnvironmentRequest, opts ...grpc.CallOption) (*FetchProjectEnvironmentResponse, error) {
	out := new(FetchProjectEnvironmentResponse)
	err := c.client.Call(ctx, "monorail.v1.Projects", "FetchProjectEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type projectsClient struct {
	cc grpc.ClientConnInterface
}

func NewProjectsClient(cc grpc.ClientConnInterface) ProjectsClient {
	return &projectsClient{cc}
}

func (c *projectsClient) ListIssueTemplates(ctx context.Context, in *ListIssueTemplatesRequest, opts ...grpc.CallOption) (*ListIssueTemplatesResponse, error) {
	out := new(ListIssueTemplatesResponse)
	err := c.cc.Invoke(ctx, "/monorail.v1.Projects/ListIssueTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) FetchProjectEnvironment(ctx context.Context, in *FetchProjectEnvironmentRequest, opts ...grpc.CallOption) (*FetchProjectEnvironmentResponse, error) {
	out := new(FetchProjectEnvironmentResponse)
	err := c.cc.Invoke(ctx, "/monorail.v1.Projects/FetchProjectEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectsServer is the server API for Projects service.
type ProjectsServer interface {
	// Returns all templates for specified project.
	//
	// Raises:
	//   NOT_FOUND if the requested parent project is not found.
	//   INVALID_ARGUMENT if the given `parent` is not valid.
	ListIssueTemplates(context.Context, *ListIssueTemplatesRequest) (*ListIssueTemplatesResponse, error)
	// Returns all project specific configurations needed for the SPA client.
	FetchProjectEnvironment(context.Context, *FetchProjectEnvironmentRequest) (*FetchProjectEnvironmentResponse, error)
}

// UnimplementedProjectsServer can be embedded to have forward compatible implementations.
type UnimplementedProjectsServer struct {
}

func (*UnimplementedProjectsServer) ListIssueTemplates(ctx context.Context, req *ListIssueTemplatesRequest) (*ListIssueTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIssueTemplates not implemented")
}
func (*UnimplementedProjectsServer) FetchProjectEnvironment(ctx context.Context, req *FetchProjectEnvironmentRequest) (*FetchProjectEnvironmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchProjectEnvironment not implemented")
}

func RegisterProjectsServer(s prpc.Registrar, srv ProjectsServer) {
	s.RegisterService(&_Projects_serviceDesc, srv)
}

func _Projects_ListIssueTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIssueTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).ListIssueTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Projects/ListIssueTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).ListIssueTemplates(ctx, req.(*ListIssueTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_FetchProjectEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchProjectEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).FetchProjectEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monorail.v1.Projects/FetchProjectEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).FetchProjectEnvironment(ctx, req.(*FetchProjectEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Projects_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monorail.v1.Projects",
	HandlerType: (*ProjectsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListIssueTemplates",
			Handler:    _Projects_ListIssueTemplates_Handler,
		},
		{
			MethodName: "FetchProjectEnvironment",
			Handler:    _Projects_FetchProjectEnvironment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/api_proto/projects.proto",
}
