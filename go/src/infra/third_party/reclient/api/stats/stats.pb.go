// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: api/stats/stats.proto

package stats

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	log "infra/third_party/reclient/api/log"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The full aggregated build stats and properties.
type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of actions in the build.
	NumRecords int64 `protobuf:"varint,1,opt,name=num_records,json=numRecords,proto3" json:"num_records,omitempty"`
	// Aggregated build stats.
	Stats []*Stat `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
	// Verification results, if exist.
	Verification *log.Verification `protobuf:"bytes,4,opt,name=verification,proto3" json:"verification,omitempty"`
	// RBE tooling version.
	ToolVersion string `protobuf:"bytes,5,opt,name=tool_version,json=toolVersion,proto3" json:"tool_version,omitempty"`
	// Unique invocation IDs of the aggregated actions.
	InvocationIds []string `protobuf:"bytes,6,rep,name=invocation_ids,json=invocationIds,proto3" json:"invocation_ids,omitempty"`
	// Information about the build machine.
	MachineInfo *MachineInfo `protobuf:"bytes,7,opt,name=machine_info,json=machineInfo,proto3" json:"machine_info,omitempty"`
	// Information relative to each reproxy invocation.
	ProxyInfo []*log.ProxyInfo `protobuf:"bytes,9,rep,name=proxy_info,json=proxyInfo,proto3" json:"proxy_info,omitempty"`
	// The number of cache hits divided by the number of actions. 0 if there are
	// no actions.
	BuildCacheHitRatio float64 `protobuf:"fixed64,10,opt,name=build_cache_hit_ratio,json=buildCacheHitRatio,proto3" json:"build_cache_hit_ratio,omitempty"`
	// Total seconds between start of first build action and end of last build
	// action. 0 if there are no actions.
	BuildLatency float64 `protobuf:"fixed64,11,opt,name=build_latency,json=buildLatency,proto3" json:"build_latency,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stats_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_api_stats_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_api_stats_stats_proto_rawDescGZIP(), []int{0}
}

func (x *Stats) GetNumRecords() int64 {
	if x != nil {
		return x.NumRecords
	}
	return 0
}

func (x *Stats) GetStats() []*Stat {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Stats) GetVerification() *log.Verification {
	if x != nil {
		return x.Verification
	}
	return nil
}

func (x *Stats) GetToolVersion() string {
	if x != nil {
		return x.ToolVersion
	}
	return ""
}

func (x *Stats) GetInvocationIds() []string {
	if x != nil {
		return x.InvocationIds
	}
	return nil
}

func (x *Stats) GetMachineInfo() *MachineInfo {
	if x != nil {
		return x.MachineInfo
	}
	return nil
}

func (x *Stats) GetProxyInfo() []*log.ProxyInfo {
	if x != nil {
		return x.ProxyInfo
	}
	return nil
}

func (x *Stats) GetBuildCacheHitRatio() float64 {
	if x != nil {
		return x.BuildCacheHitRatio
	}
	return 0
}

func (x *Stats) GetBuildLatency() float64 {
	if x != nil {
		return x.BuildLatency
	}
	return 0
}

// Outlier represents a command with an unusually large value in the stat.
type Outlier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId string `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Value     int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Outlier) Reset() {
	*x = Outlier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stats_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Outlier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outlier) ProtoMessage() {}

func (x *Outlier) ProtoReflect() protoreflect.Message {
	mi := &file_api_stats_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outlier.ProtoReflect.Descriptor instead.
func (*Outlier) Descriptor() ([]byte, []int) {
	return file_api_stats_stats_proto_rawDescGZIP(), []int{1}
}

func (x *Outlier) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *Outlier) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metric/stat name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The number of all the true values for booleans, the sum of all the
	// values for ints.
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// For enum stats, the count of each value.
	CountsByValue []*Stat_Value `protobuf:"bytes,3,rep,name=counts_by_value,json=countsByValue,proto3" json:"counts_by_value,omitempty"`
	// A list of commands that have the highest values.
	Outliers     []*Outlier `protobuf:"bytes,4,rep,name=outliers,proto3" json:"outliers,omitempty"`
	Median       int64      `protobuf:"varint,5,opt,name=median,proto3" json:"median,omitempty"`
	Percentile75 int64      `protobuf:"varint,6,opt,name=percentile75,proto3" json:"percentile75,omitempty"`
	Percentile85 int64      `protobuf:"varint,7,opt,name=percentile85,proto3" json:"percentile85,omitempty"`
	Percentile95 int64      `protobuf:"varint,8,opt,name=percentile95,proto3" json:"percentile95,omitempty"`
	Average      float64    `protobuf:"fixed64,9,opt,name=average,proto3" json:"average,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stats_stats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_api_stats_stats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_api_stats_stats_proto_rawDescGZIP(), []int{2}
}

func (x *Stat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stat) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Stat) GetCountsByValue() []*Stat_Value {
	if x != nil {
		return x.CountsByValue
	}
	return nil
}

func (x *Stat) GetOutliers() []*Outlier {
	if x != nil {
		return x.Outliers
	}
	return nil
}

func (x *Stat) GetMedian() int64 {
	if x != nil {
		return x.Median
	}
	return 0
}

func (x *Stat) GetPercentile75() int64 {
	if x != nil {
		return x.Percentile75
	}
	return 0
}

func (x *Stat) GetPercentile85() int64 {
	if x != nil {
		return x.Percentile85
	}
	return 0
}

func (x *Stat) GetPercentile95() int64 {
	if x != nil {
		return x.Percentile95
	}
	return 0
}

func (x *Stat) GetAverage() float64 {
	if x != nil {
		return x.Average
	}
	return 0
}

type MachineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of CPU cores that the machine has.
	NumCpu int64 `protobuf:"varint,1,opt,name=num_cpu,json=numCpu,proto3" json:"num_cpu,omitempty"`
	// Amount of RAM that the machine has in megabytes.
	RamMbs int64 `protobuf:"varint,2,opt,name=ram_mbs,json=ramMbs,proto3" json:"ram_mbs,omitempty"`
	// Type of operating system of the build machine.
	OsFamily string `protobuf:"bytes,3,opt,name=os_family,json=osFamily,proto3" json:"os_family,omitempty"`
	// The architecture of the machine's CPU.
	Arch string `protobuf:"bytes,4,opt,name=arch,proto3" json:"arch,omitempty"`
}

func (x *MachineInfo) Reset() {
	*x = MachineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stats_stats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineInfo) ProtoMessage() {}

func (x *MachineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_stats_stats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineInfo.ProtoReflect.Descriptor instead.
func (*MachineInfo) Descriptor() ([]byte, []int) {
	return file_api_stats_stats_proto_rawDescGZIP(), []int{3}
}

func (x *MachineInfo) GetNumCpu() int64 {
	if x != nil {
		return x.NumCpu
	}
	return 0
}

func (x *MachineInfo) GetRamMbs() int64 {
	if x != nil {
		return x.RamMbs
	}
	return 0
}

func (x *MachineInfo) GetOsFamily() string {
	if x != nil {
		return x.OsFamily
	}
	return ""
}

func (x *MachineInfo) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

type Stat_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Stat_Value) Reset() {
	*x = Stat_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stats_stats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat_Value) ProtoMessage() {}

func (x *Stat_Value) ProtoReflect() protoreflect.Message {
	mi := &file_api_stats_stats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat_Value.ProtoReflect.Descriptor instead.
func (*Stat_Value) Descriptor() ([]byte, []int) {
	return file_api_stats_stats_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Stat_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stat_Value) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_api_stats_stats_proto protoreflect.FileDescriptor

var file_api_stats_stats_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x11,
	0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x96, 0x03, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x75, 0x6d, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x35, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x48, 0x69, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0x3e, 0x0a, 0x07, 0x4f, 0x75,
	0x74, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe8, 0x02, 0x0a, 0x04, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x6c,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x6c,
	0x69, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x37, 0x35, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x37, 0x35,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x38, 0x35,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x38, 0x35, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x39, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x39, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x1a, 0x31, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x70, 0x0a, 0x0b, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x70, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x43, 0x70, 0x75, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x61, 0x6d, 0x5f, 0x6d, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x61, 0x6d, 0x4d, 0x62, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x73, 0x5f, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x73, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x42, 0x26, 0x5a, 0x24, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x72, 0x65, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_stats_stats_proto_rawDescOnce sync.Once
	file_api_stats_stats_proto_rawDescData = file_api_stats_stats_proto_rawDesc
)

func file_api_stats_stats_proto_rawDescGZIP() []byte {
	file_api_stats_stats_proto_rawDescOnce.Do(func() {
		file_api_stats_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_stats_stats_proto_rawDescData)
	})
	return file_api_stats_stats_proto_rawDescData
}

var file_api_stats_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_stats_stats_proto_goTypes = []interface{}{
	(*Stats)(nil),            // 0: stats.Stats
	(*Outlier)(nil),          // 1: stats.Outlier
	(*Stat)(nil),             // 2: stats.Stat
	(*MachineInfo)(nil),      // 3: stats.MachineInfo
	(*Stat_Value)(nil),       // 4: stats.Stat.Value
	(*log.Verification)(nil), // 5: log.Verification
	(*log.ProxyInfo)(nil),    // 6: log.ProxyInfo
}
var file_api_stats_stats_proto_depIdxs = []int32{
	2, // 0: stats.Stats.stats:type_name -> stats.Stat
	5, // 1: stats.Stats.verification:type_name -> log.Verification
	3, // 2: stats.Stats.machine_info:type_name -> stats.MachineInfo
	6, // 3: stats.Stats.proxy_info:type_name -> log.ProxyInfo
	4, // 4: stats.Stat.counts_by_value:type_name -> stats.Stat.Value
	1, // 5: stats.Stat.outliers:type_name -> stats.Outlier
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_stats_stats_proto_init() }
func file_api_stats_stats_proto_init() {
	if File_api_stats_stats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_stats_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stats_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Outlier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stats_stats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stats_stats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stats_stats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_stats_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_stats_stats_proto_goTypes,
		DependencyIndexes: file_api_stats_stats_proto_depIdxs,
		MessageInfos:      file_api_stats_stats_proto_msgTypes,
	}.Build()
	File_api_stats_stats_proto = out.File
	file_api_stats_stats_proto_rawDesc = nil
	file_api_stats_stats_proto_goTypes = nil
	file_api_stats_stats_proto_depIdxs = nil
}
