// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: api/proxy/proxy.proto

package proxy

import (
	command "github.com/bazelbuild/remote-apis-sdks/go/api/command"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	log "infra/third_party/reclient/api/log"
	stats "infra/third_party/reclient/api/stats"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecutionStrategy_Value int32

const (
	// Invalid value, clients should always specify a value.
	ExecutionStrategy_UNSPECIFIED ExecutionStrategy_Value = 0
	// Only execute locally.
	ExecutionStrategy_LOCAL ExecutionStrategy_Value = 1
	// Only execute remotely.
	ExecutionStrategy_REMOTE ExecutionStrategy_Value = 2
	// Try executing remotely and fall back to local execution if failed.
	ExecutionStrategy_REMOTE_LOCAL_FALLBACK ExecutionStrategy_Value = 3
	// Race remote execution and local execution and use the earlier result.
	ExecutionStrategy_RACING ExecutionStrategy_Value = 4
)

// Enum value maps for ExecutionStrategy_Value.
var (
	ExecutionStrategy_Value_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "LOCAL",
		2: "REMOTE",
		3: "REMOTE_LOCAL_FALLBACK",
		4: "RACING",
	}
	ExecutionStrategy_Value_value = map[string]int32{
		"UNSPECIFIED":           0,
		"LOCAL":                 1,
		"REMOTE":                2,
		"REMOTE_LOCAL_FALLBACK": 3,
		"RACING":                4,
	}
)

func (x ExecutionStrategy_Value) Enum() *ExecutionStrategy_Value {
	p := new(ExecutionStrategy_Value)
	*p = x
	return p
}

func (x ExecutionStrategy_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStrategy_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proxy_proxy_proto_enumTypes[0].Descriptor()
}

func (ExecutionStrategy_Value) Type() protoreflect.EnumType {
	return &file_api_proxy_proxy_proto_enumTypes[0]
}

func (x ExecutionStrategy_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStrategy_Value.Descriptor instead.
func (ExecutionStrategy_Value) EnumDescriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{9, 0}
}

// Execute the command in the platform Docker container.
type LocalExecutionOptions_LocalExecutionPlatform int32

const (
	// Plain local execution using subprocess.
	LocalExecutionOptions_UNSPECIFIED LocalExecutionOptions_LocalExecutionPlatform = 0
	// Execute in the docker image specified in command's platform.
	LocalExecutionOptions_DOCKER LocalExecutionOptions_LocalExecutionPlatform = 1 // Maybe later add Linux sandbox or other options.
)

// Enum value maps for LocalExecutionOptions_LocalExecutionPlatform.
var (
	LocalExecutionOptions_LocalExecutionPlatform_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "DOCKER",
	}
	LocalExecutionOptions_LocalExecutionPlatform_value = map[string]int32{
		"UNSPECIFIED": 0,
		"DOCKER":      1,
	}
)

func (x LocalExecutionOptions_LocalExecutionPlatform) Enum() *LocalExecutionOptions_LocalExecutionPlatform {
	p := new(LocalExecutionOptions_LocalExecutionPlatform)
	*p = x
	return p
}

func (x LocalExecutionOptions_LocalExecutionPlatform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocalExecutionOptions_LocalExecutionPlatform) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proxy_proxy_proto_enumTypes[1].Descriptor()
}

func (LocalExecutionOptions_LocalExecutionPlatform) Type() protoreflect.EnumType {
	return &file_api_proxy_proxy_proto_enumTypes[1]
}

func (x LocalExecutionOptions_LocalExecutionPlatform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocalExecutionOptions_LocalExecutionPlatform.Descriptor instead.
func (LocalExecutionOptions_LocalExecutionPlatform) EnumDescriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{10, 0}
}

type ShutdownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{0}
}

type ShutdownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The full aggregated build stats and properties for this reproxy instance's lifetime.
	Stats *stats.Stats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *ShutdownResponse) GetStats() *stats.Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type GetStatusSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusSummaryRequest) Reset() {
	*x = GetStatusSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusSummaryRequest) ProtoMessage() {}

func (x *GetStatusSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetStatusSummaryRequest) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{2}
}

type GetStatusSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Count of completed actions grouped by completion status
	CompletedActionStats map[string]int32 `protobuf:"bytes,1,rep,name=completed_action_stats,json=completedActionStats,proto3" json:"completed_action_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Current status for each in-progress actions
	RunningActions int32 `protobuf:"varint,2,opt,name=running_actions,json=runningActions,proto3" json:"running_actions,omitempty"`
}

func (x *GetStatusSummaryResponse) Reset() {
	*x = GetStatusSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusSummaryResponse) ProtoMessage() {}

func (x *GetStatusSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetStatusSummaryResponse) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *GetStatusSummaryResponse) GetCompletedActionStats() map[string]int32 {
	if x != nil {
		return x.CompletedActionStats
	}
	return nil
}

func (x *GetStatusSummaryResponse) GetRunningActions() int32 {
	if x != nil {
		return x.RunningActions
	}
	return 0
}

type GetRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecordsRequest) Reset() {
	*x = GetRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsRequest) ProtoMessage() {}

func (x *GetRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsRequest.ProtoReflect.Descriptor instead.
func (*GetRecordsRequest) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{4}
}

type GetRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*log.LogRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetRecordsResponse) Reset() {
	*x = GetRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsResponse) ProtoMessage() {}

func (x *GetRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsResponse.ProtoReflect.Descriptor instead.
func (*GetRecordsResponse) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecordsResponse) GetRecords() []*log.LogRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// Passed to RunCommand to initiate execution of a remote command.
type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Properties of the command to run.
	Command *command.Command `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	// Custom labels belonging to the command by which it can later be sliced.
	// The labels can also be used to signal the proxy about the action type for
	// input processing.
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// How to execute the command.
	ExecutionOptions *ProxyExecutionOptions `protobuf:"bytes,3,opt,name=execution_options,json=executionOptions,proto3" json:"execution_options,omitempty"`
	// Metadata relevant to the RunRequest.
	Metadata *Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Toolchain inputs is a list of toolchain binaries needed for executing the
	// action.
	ToolchainInputs []string `protobuf:"bytes,5,rep,name=toolchain_inputs,json=toolchainInputs,proto3" json:"toolchain_inputs,omitempty"`
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *RunRequest) GetCommand() *command.Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *RunRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RunRequest) GetExecutionOptions() *ProxyExecutionOptions {
	if x != nil {
		return x.ExecutionOptions
	}
	return nil
}

func (x *RunRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RunRequest) GetToolchainInputs() []string {
	if x != nil {
		return x.ToolchainInputs
	}
	return nil
}

// Contains metadata and result data for a command execution.
type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Standard out of the command, chunked. May be empty.
	Stdout []byte `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Standard error of the command, chunked. May be empty.
	Stderr []byte `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	// Result of the command execution. Should always be present in the last
	// response in the stream.
	Result *command.CommandResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	// A unique execution id generated by the proxy. It can be used as a handle to
	// identify the execution. Only the first message is guaranteed to have the
	// execution_id.
	ExecutionId string `protobuf:"bytes,4,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	// A full reproxy log for a single remote action.
	// Present if ProxyExecutionOptions:include_action_log is True.
	ActionLog *log.LogRecord `protobuf:"bytes,5,opt,name=action_log,json=actionLog,proto3" json:"action_log,omitempty"`
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *RunResponse) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *RunResponse) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *RunResponse) GetResult() *command.CommandResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RunResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *RunResponse) GetActionLog() *log.LogRecord {
	if x != nil {
		return x.ActionLog
	}
	return nil
}

// Options for executing a command.
type ProxyExecutionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How to execute the command.
	ExecutionStrategy ExecutionStrategy_Value `protobuf:"varint,1,opt,name=execution_strategy,json=executionStrategy,proto3,enum=proxy.ExecutionStrategy_Value" json:"execution_strategy,omitempty"`
	// If needed, options to execute the command remotely.
	// If those are not provided, defaults are used.
	RemoteExecutionOptions *RemoteExecutionOptions `protobuf:"bytes,2,opt,name=remote_execution_options,json=remoteExecutionOptions,proto3" json:"remote_execution_options,omitempty"`
	// If needed, options to execute the command locally.
	// If those are not provided, defaults are used.
	LocalExecutionOptions *LocalExecutionOptions `protobuf:"bytes,3,opt,name=local_execution_options,json=localExecutionOptions,proto3" json:"local_execution_options,omitempty"`
	// Compares the set execution strategy with local execution. If the set
	// execution strategy is local, will compare the remote cache hit with local
	// execution. If accept_cached is false or there is no cache hit, this is a
	// noop.
	CompareWithLocal bool `protobuf:"varint,4,opt,name=compare_with_local,json=compareWithLocal,proto3" json:"compare_with_local,omitempty"`
	// Number of times the action should be run remotely in order to determine
	// whether the action is inherently non-deterministic or not.
	NumRetriesIfMismatched int32 `protobuf:"varint,5,opt,name=num_retries_if_mismatched,json=numRetriesIfMismatched,proto3" json:"num_retries_if_mismatched,omitempty"`
	// Number of times the action should be rerun locally.
	NumLocalReruns int32 `protobuf:"varint,6,opt,name=num_local_reruns,json=numLocalReruns,proto3" json:"num_local_reruns,omitempty"`
	// Number of times the action should be rerun remotely.
	NumRemoteReruns int32 `protobuf:"varint,7,opt,name=num_remote_reruns,json=numRemoteReruns,proto3" json:"num_remote_reruns,omitempty"`
	// If set, reproxy should log rewrapper's environment with local metadata
	LogEnvironment bool `protobuf:"varint,8,opt,name=log_environment,json=logEnvironment,proto3" json:"log_environment,omitempty"`
	// If set, include a full LogRecord in the RunResponse.
	IncludeActionLog bool `protobuf:"varint,9,opt,name=include_action_log,json=includeActionLog,proto3" json:"include_action_log,omitempty"`
	// The amount of time reclient should wait for the action to finish remotely.
	ReclientTimeout int32 `protobuf:"varint,10,opt,name=reclient_timeout,json=reclientTimeout,proto3" json:"reclient_timeout,omitempty"`
}

func (x *ProxyExecutionOptions) Reset() {
	*x = ProxyExecutionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyExecutionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyExecutionOptions) ProtoMessage() {}

func (x *ProxyExecutionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyExecutionOptions.ProtoReflect.Descriptor instead.
func (*ProxyExecutionOptions) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *ProxyExecutionOptions) GetExecutionStrategy() ExecutionStrategy_Value {
	if x != nil {
		return x.ExecutionStrategy
	}
	return ExecutionStrategy_UNSPECIFIED
}

func (x *ProxyExecutionOptions) GetRemoteExecutionOptions() *RemoteExecutionOptions {
	if x != nil {
		return x.RemoteExecutionOptions
	}
	return nil
}

func (x *ProxyExecutionOptions) GetLocalExecutionOptions() *LocalExecutionOptions {
	if x != nil {
		return x.LocalExecutionOptions
	}
	return nil
}

func (x *ProxyExecutionOptions) GetCompareWithLocal() bool {
	if x != nil {
		return x.CompareWithLocal
	}
	return false
}

func (x *ProxyExecutionOptions) GetNumRetriesIfMismatched() int32 {
	if x != nil {
		return x.NumRetriesIfMismatched
	}
	return 0
}

func (x *ProxyExecutionOptions) GetNumLocalReruns() int32 {
	if x != nil {
		return x.NumLocalReruns
	}
	return 0
}

func (x *ProxyExecutionOptions) GetNumRemoteReruns() int32 {
	if x != nil {
		return x.NumRemoteReruns
	}
	return 0
}

func (x *ProxyExecutionOptions) GetLogEnvironment() bool {
	if x != nil {
		return x.LogEnvironment
	}
	return false
}

func (x *ProxyExecutionOptions) GetIncludeActionLog() bool {
	if x != nil {
		return x.IncludeActionLog
	}
	return false
}

func (x *ProxyExecutionOptions) GetReclientTimeout() int32 {
	if x != nil {
		return x.ReclientTimeout
	}
	return 0
}

type ExecutionStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExecutionStrategy) Reset() {
	*x = ExecutionStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStrategy) ProtoMessage() {}

func (x *ExecutionStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStrategy.ProtoReflect.Descriptor instead.
func (*ExecutionStrategy) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{9}
}

// Options for local execution.
type LocalExecutionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform LocalExecutionOptions_LocalExecutionPlatform `protobuf:"varint,1,opt,name=platform,proto3,enum=proxy.LocalExecutionOptions_LocalExecutionPlatform" json:"platform,omitempty"`
	// If false, upload local results to remote CAS and Action Cache.
	DoNotCache bool `protobuf:"varint,2,opt,name=do_not_cache,json=doNotCache,proto3" json:"do_not_cache,omitempty"`
	// Whether to accept remotely cached action results. Defaults to true.
	AcceptCached bool `protobuf:"varint,3,opt,name=accept_cached,json=acceptCached,proto3" json:"accept_cached,omitempty"`
	// Wrapper path to run command locally.
	Wrapper string `protobuf:"bytes,4,opt,name=wrapper,proto3" json:"wrapper,omitempty"`
}

func (x *LocalExecutionOptions) Reset() {
	*x = LocalExecutionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalExecutionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalExecutionOptions) ProtoMessage() {}

func (x *LocalExecutionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalExecutionOptions.ProtoReflect.Descriptor instead.
func (*LocalExecutionOptions) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *LocalExecutionOptions) GetPlatform() LocalExecutionOptions_LocalExecutionPlatform {
	if x != nil {
		return x.Platform
	}
	return LocalExecutionOptions_UNSPECIFIED
}

func (x *LocalExecutionOptions) GetDoNotCache() bool {
	if x != nil {
		return x.DoNotCache
	}
	return false
}

func (x *LocalExecutionOptions) GetAcceptCached() bool {
	if x != nil {
		return x.AcceptCached
	}
	return false
}

func (x *LocalExecutionOptions) GetWrapper() string {
	if x != nil {
		return x.Wrapper
	}
	return ""
}

type RemoteExecutionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether to accept remotely cached action results. Defaults to true.
	AcceptCached bool `protobuf:"varint,1,opt,name=accept_cached,json=acceptCached,proto3" json:"accept_cached,omitempty"`
	// When set, this action results will not be cached remotely.
	DoNotCache bool `protobuf:"varint,2,opt,name=do_not_cache,json=doNotCache,proto3" json:"do_not_cache,omitempty"`
	// Download command outputs after execution. Defaults to true.
	DownloadOutputs bool `protobuf:"varint,3,opt,name=download_outputs,json=downloadOutputs,proto3" json:"download_outputs,omitempty"`
	// Wrapper path to run command in remote worker.
	Wrapper string `protobuf:"bytes,5,opt,name=wrapper,proto3" json:"wrapper,omitempty"`
	// When set, local working directory is replaced with a canonicalized form
	// when running an action on RE server - used to make action working dir
	// agnostic.
	CanonicalizeWorkingDir bool `protobuf:"varint,6,opt,name=canonicalize_working_dir,json=canonicalizeWorkingDir,proto3" json:"canonicalize_working_dir,omitempty"`
	// If true, then unchanged outputs mtimes will not be updated in exec root.
	PreserveUnchangedOutputMtime bool `protobuf:"varint,7,opt,name=preserve_unchanged_output_mtime,json=preserveUnchangedOutputMtime,proto3" json:"preserve_unchanged_output_mtime,omitempty"`
}

func (x *RemoteExecutionOptions) Reset() {
	*x = RemoteExecutionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteExecutionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteExecutionOptions) ProtoMessage() {}

func (x *RemoteExecutionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteExecutionOptions.ProtoReflect.Descriptor instead.
func (*RemoteExecutionOptions) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *RemoteExecutionOptions) GetAcceptCached() bool {
	if x != nil {
		return x.AcceptCached
	}
	return false
}

func (x *RemoteExecutionOptions) GetDoNotCache() bool {
	if x != nil {
		return x.DoNotCache
	}
	return false
}

func (x *RemoteExecutionOptions) GetDownloadOutputs() bool {
	if x != nil {
		return x.DownloadOutputs
	}
	return false
}

func (x *RemoteExecutionOptions) GetWrapper() string {
	if x != nil {
		return x.Wrapper
	}
	return ""
}

func (x *RemoteExecutionOptions) GetCanonicalizeWorkingDir() bool {
	if x != nil {
		return x.CanonicalizeWorkingDir
	}
	return false
}

func (x *RemoteExecutionOptions) GetPreserveUnchangedOutputMtime() bool {
	if x != nil {
		return x.PreserveUnchangedOutputMtime
	}
	return false
}

// Metadata relevant to the RunRequest.
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Times of various local events.
	EventTimes map[string]*command.TimeInterval `protobuf:"bytes,1,rep,name=event_times,json=eventTimes,proto3" json:"event_times,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Environment variables set when the RunRequest was made.
	Environment []string `protobuf:"bytes,2,rep,name=environment,proto3" json:"environment,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proxy_proxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_proxy_proxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_api_proxy_proxy_proto_rawDescGZIP(), []int{12}
}

func (x *Metadata) GetEventTimes() map[string]*command.TimeInterval {
	if x != nil {
		return x.EventTimes
	}
	return nil
}

func (x *Metadata) GetEnvironment() []string {
	if x != nil {
		return x.Environment
	}
	return nil
}

var File_api_proxy_proxy_proto protoreflect.FileDescriptor

var file_api_proxy_proxy_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x1c,
	0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x70,
	0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x10, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfd, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x16, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x47, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x13, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0xc9, 0x02, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x49, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x6f, 0x6c, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbb, 0x01,
	0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73,
	0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x2a, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6d, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x22, 0xd6, 0x04, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x57, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54, 0x0a,
	0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x15, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x5f, 0x69, 0x66, 0x5f, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x49, 0x66, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x72, 0x75,
	0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6c, 0x6f, 0x67,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f,
	0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x22, 0x6b, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x56, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45,
	0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x4c, 0x4c, 0x42,
	0x41, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x10,
	0x04, 0x22, 0x80, 0x02, 0x0a, 0x15, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0c,
	0x64, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x64, 0x6f, 0x4e, 0x6f, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x35, 0x0a,
	0x16, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x43, 0x4b,
	0x45, 0x52, 0x10, 0x01, 0x22, 0xab, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x6f, 0x4e, 0x6f,
	0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x63,
	0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63,
	0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x44, 0x69, 0x72, 0x12, 0x45, 0x0a, 0x1f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x5f, 0x75, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x55, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x04,
	0x10, 0x05, 0x22, 0xc0, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x40, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x50, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6d, 0x64, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x80, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x4c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x5f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x55, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x72, 0x65, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proxy_proxy_proto_rawDescOnce sync.Once
	file_api_proxy_proxy_proto_rawDescData = file_api_proxy_proxy_proto_rawDesc
)

func file_api_proxy_proxy_proto_rawDescGZIP() []byte {
	file_api_proxy_proxy_proto_rawDescOnce.Do(func() {
		file_api_proxy_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proxy_proxy_proto_rawDescData)
	})
	return file_api_proxy_proxy_proto_rawDescData
}

var file_api_proxy_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proxy_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_proxy_proxy_proto_goTypes = []interface{}{
	(ExecutionStrategy_Value)(0),                      // 0: proxy.ExecutionStrategy.Value
	(LocalExecutionOptions_LocalExecutionPlatform)(0), // 1: proxy.LocalExecutionOptions.LocalExecutionPlatform
	(*ShutdownRequest)(nil),                           // 2: proxy.ShutdownRequest
	(*ShutdownResponse)(nil),                          // 3: proxy.ShutdownResponse
	(*GetStatusSummaryRequest)(nil),                   // 4: proxy.GetStatusSummaryRequest
	(*GetStatusSummaryResponse)(nil),                  // 5: proxy.GetStatusSummaryResponse
	(*GetRecordsRequest)(nil),                         // 6: proxy.GetRecordsRequest
	(*GetRecordsResponse)(nil),                        // 7: proxy.GetRecordsResponse
	(*RunRequest)(nil),                                // 8: proxy.RunRequest
	(*RunResponse)(nil),                               // 9: proxy.RunResponse
	(*ProxyExecutionOptions)(nil),                     // 10: proxy.ProxyExecutionOptions
	(*ExecutionStrategy)(nil),                         // 11: proxy.ExecutionStrategy
	(*LocalExecutionOptions)(nil),                     // 12: proxy.LocalExecutionOptions
	(*RemoteExecutionOptions)(nil),                    // 13: proxy.RemoteExecutionOptions
	(*Metadata)(nil),                                  // 14: proxy.Metadata
	nil,                                               // 15: proxy.GetStatusSummaryResponse.CompletedActionStatsEntry
	nil,                                               // 16: proxy.RunRequest.LabelsEntry
	nil,                                               // 17: proxy.Metadata.EventTimesEntry
	(*stats.Stats)(nil),                               // 18: stats.Stats
	(*log.LogRecord)(nil),                             // 19: log.LogRecord
	(*command.Command)(nil),                           // 20: cmd.Command
	(*command.CommandResult)(nil),                     // 21: cmd.CommandResult
	(*command.TimeInterval)(nil),                      // 22: cmd.TimeInterval
}
var file_api_proxy_proxy_proto_depIdxs = []int32{
	18, // 0: proxy.ShutdownResponse.stats:type_name -> stats.Stats
	15, // 1: proxy.GetStatusSummaryResponse.completed_action_stats:type_name -> proxy.GetStatusSummaryResponse.CompletedActionStatsEntry
	19, // 2: proxy.GetRecordsResponse.records:type_name -> log.LogRecord
	20, // 3: proxy.RunRequest.command:type_name -> cmd.Command
	16, // 4: proxy.RunRequest.labels:type_name -> proxy.RunRequest.LabelsEntry
	10, // 5: proxy.RunRequest.execution_options:type_name -> proxy.ProxyExecutionOptions
	14, // 6: proxy.RunRequest.metadata:type_name -> proxy.Metadata
	21, // 7: proxy.RunResponse.result:type_name -> cmd.CommandResult
	19, // 8: proxy.RunResponse.action_log:type_name -> log.LogRecord
	0,  // 9: proxy.ProxyExecutionOptions.execution_strategy:type_name -> proxy.ExecutionStrategy.Value
	13, // 10: proxy.ProxyExecutionOptions.remote_execution_options:type_name -> proxy.RemoteExecutionOptions
	12, // 11: proxy.ProxyExecutionOptions.local_execution_options:type_name -> proxy.LocalExecutionOptions
	1,  // 12: proxy.LocalExecutionOptions.platform:type_name -> proxy.LocalExecutionOptions.LocalExecutionPlatform
	17, // 13: proxy.Metadata.event_times:type_name -> proxy.Metadata.EventTimesEntry
	22, // 14: proxy.Metadata.EventTimesEntry.value:type_name -> cmd.TimeInterval
	8,  // 15: proxy.Commands.RunCommand:input_type -> proxy.RunRequest
	2,  // 16: proxy.Commands.Shutdown:input_type -> proxy.ShutdownRequest
	6,  // 17: proxy.Stats.GetRecords:input_type -> proxy.GetRecordsRequest
	4,  // 18: proxy.Status.GetStatusSummary:input_type -> proxy.GetStatusSummaryRequest
	9,  // 19: proxy.Commands.RunCommand:output_type -> proxy.RunResponse
	3,  // 20: proxy.Commands.Shutdown:output_type -> proxy.ShutdownResponse
	7,  // 21: proxy.Stats.GetRecords:output_type -> proxy.GetRecordsResponse
	5,  // 22: proxy.Status.GetStatusSummary:output_type -> proxy.GetStatusSummaryResponse
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_proxy_proxy_proto_init() }
func file_api_proxy_proxy_proto_init() {
	if File_api_proxy_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proxy_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyExecutionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalExecutionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteExecutionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proxy_proxy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proxy_proxy_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_proxy_proxy_proto_goTypes,
		DependencyIndexes: file_api_proxy_proxy_proto_depIdxs,
		EnumInfos:         file_api_proxy_proxy_proto_enumTypes,
		MessageInfos:      file_api_proxy_proxy_proto_msgTypes,
	}.Build()
	File_api_proxy_proxy_proto = out.File
	file_api_proxy_proxy_proto_rawDesc = nil
	file_api_proxy_proxy_proto_goTypes = nil
	file_api_proxy_proxy_proto_depIdxs = nil
}
