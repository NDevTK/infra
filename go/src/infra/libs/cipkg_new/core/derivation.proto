// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

option go_package = "infra/libs/cipkg_new/core";

// Derivation is the atomic step transformed from different types of actions. It
// should contain all information used during the execution in its definition.
// NOTE: ${out} is not part of the derivation. We can't determine the output
// directory before we have a deterministic derivation so it has to be excluded
// from derivation to avoid self-reference.
message Derivation {
  // Platform is where the command is executed.
  // This is used as "output only", and is used to disambiguate Derivation ID
  // for the same command runs on different platforms.
  // Actions will follow a convention w/ supporting library functions
  // in order to produce this consistently.
  string platform = 1;

  // Args are the `argv` vector of the derivation when executed.
  repeated string args = 2;

  // Env includes all the environment variables for the execution isolated from
  // host.
  repeated string env = 3;

  // Inputs are ids of all packages referred by this derivation.
  // It depends on the package manager to interpret the ID.
  repeated string inputs = 4;

  // fixed_output, if set, represents the content of the output. ID will be
  // generated based on fixed_output exclusively.
  // WARNING: Using fixed_output means shifting away the responsibility for
  // detecting any change from derivation. This should be rarely touched and
  // most of its use cases have a builtin implementation to take care of the
  // generated fixed_output value. Any use of it outside the builtin modules
  // are strongly discouraged. YOU HAVE BEEN WARNED.
  string fixed_output = 5;
}
