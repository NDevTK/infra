// Copyright 2020 The Chromium Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: infra/chromeperf/workflows/workflow_templates.proto

package workflows

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	typepb "google.golang.org/protobuf/types/known/typepb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name should be unique, of the form /workflow-templates/<name>.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable name displayed in user interfaces.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Human-readable description. This shows up in user-infterfaces and may contain some formatting HTML tags (<b>, <i>,
	// <p>) and <a> tags with links.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// This is a list of input fields which describe the inputs required by a template. This will be used in the following
	// scenarios:
	//
	// - In user-interfaces we can create fields of the appropriate types.
	// - When expanding a template with provided inputs, the description here is used to perform type validation.
	//
	// Fields may provide an option named "validation" which can be used to describe certain supported validators.
	//
	// TODO(dberris): Document and implement the support for validators.
	Inputs []*typepb.Field `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// Task Options
	//
	// These options can refer to the inputs provided in `inputs` above using Python-style f-string syntax (i.e. input
	// names surrounded by curly braces `{name}`). We're representing the options as a Struct that can be turned into the
	// inputs that a graph creation function can use.
	//
	// The template instantiator can check whether a string value in the Struct is a reference to a numeric value or enum
	// values based on the field descriptor in `inputs` above and translate those accordingly.
	TaskOptions *structpb.Struct `protobuf:"bytes,5,opt,name=task_options,json=taskOptions,proto3" json:"task_options,omitempty"`
	// Graph Creation Module
	//
	// This is a fully-qualified module name which contains both the TaskOptions definition and `create_graph` function.
	//
	// Note that this is only useful for the Python-based execution engine and can be approximated by future engines by
	// having a fixed catalogue of graph creation functions.
	GraphCreationModule string `protobuf:"bytes,6,opt,name=graph_creation_module,json=graphCreationModule,proto3" json:"graph_creation_module,omitempty"`
	// CRIA (ChRome Infra Auth) groups for which this template can be readable. When empty it will default to the
	// administrators of the service.
	CriaReaders []string `protobuf:"bytes,7,rep,name=cria_readers,json=criaReaders,proto3" json:"cria_readers,omitempty"`
}

func (x *WorkflowTemplate) Reset() {
	*x = WorkflowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_chromeperf_workflows_workflow_templates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTemplate) ProtoMessage() {}

func (x *WorkflowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_infra_chromeperf_workflows_workflow_templates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTemplate.ProtoReflect.Descriptor instead.
func (*WorkflowTemplate) Descriptor() ([]byte, []int) {
	return file_infra_chromeperf_workflows_workflow_templates_proto_rawDescGZIP(), []int{0}
}

func (x *WorkflowTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowTemplate) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *WorkflowTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowTemplate) GetInputs() []*typepb.Field {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *WorkflowTemplate) GetTaskOptions() *structpb.Struct {
	if x != nil {
		return x.TaskOptions
	}
	return nil
}

func (x *WorkflowTemplate) GetGraphCreationModule() string {
	if x != nil {
		return x.GraphCreationModule
	}
	return ""
}

func (x *WorkflowTemplate) GetCriaReaders() []string {
	if x != nil {
		return x.CriaReaders
	}
	return nil
}

var File_infra_chromeperf_workflows_workflow_templates_proto protoreflect.FileDescriptor

var file_infra_chromeperf_workflows_workflow_templates_proto_rawDesc = []byte{
	0x0a, 0x33, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x70, 0x65,
	0x72, 0x66, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x03, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x37, 0x0a, 0x15, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x13, 0x67, 0x72, 0x61, 0x70, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x61,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x61, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x3a, 0x4d, 0xea, 0x41, 0x4a, 0x0a, 0x28, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x65,
	0x72, 0x66, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x72, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x7d, 0x42,
	0x1c, 0x5a, 0x1a, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x70,
	0x65, 0x72, 0x66, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_chromeperf_workflows_workflow_templates_proto_rawDescOnce sync.Once
	file_infra_chromeperf_workflows_workflow_templates_proto_rawDescData = file_infra_chromeperf_workflows_workflow_templates_proto_rawDesc
)

func file_infra_chromeperf_workflows_workflow_templates_proto_rawDescGZIP() []byte {
	file_infra_chromeperf_workflows_workflow_templates_proto_rawDescOnce.Do(func() {
		file_infra_chromeperf_workflows_workflow_templates_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_chromeperf_workflows_workflow_templates_proto_rawDescData)
	})
	return file_infra_chromeperf_workflows_workflow_templates_proto_rawDescData
}

var file_infra_chromeperf_workflows_workflow_templates_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_infra_chromeperf_workflows_workflow_templates_proto_goTypes = []interface{}{
	(*WorkflowTemplate)(nil), // 0: workflows.WorkflowTemplate
	(*typepb.Field)(nil),     // 1: google.protobuf.Field
	(*structpb.Struct)(nil),  // 2: google.protobuf.Struct
}
var file_infra_chromeperf_workflows_workflow_templates_proto_depIdxs = []int32{
	1, // 0: workflows.WorkflowTemplate.inputs:type_name -> google.protobuf.Field
	2, // 1: workflows.WorkflowTemplate.task_options:type_name -> google.protobuf.Struct
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_infra_chromeperf_workflows_workflow_templates_proto_init() }
func file_infra_chromeperf_workflows_workflow_templates_proto_init() {
	if File_infra_chromeperf_workflows_workflow_templates_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_chromeperf_workflows_workflow_templates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_chromeperf_workflows_workflow_templates_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_chromeperf_workflows_workflow_templates_proto_goTypes,
		DependencyIndexes: file_infra_chromeperf_workflows_workflow_templates_proto_depIdxs,
		MessageInfos:      file_infra_chromeperf_workflows_workflow_templates_proto_msgTypes,
	}.Build()
	File_infra_chromeperf_workflows_workflow_templates_proto = out.File
	file_infra_chromeperf_workflows_workflow_templates_proto_rawDesc = nil
	file_infra_chromeperf_workflows_workflow_templates_proto_goTypes = nil
	file_infra_chromeperf_workflows_workflow_templates_proto_depIdxs = nil
}
