// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
package setup

import (
	"strings"
	"testing"
)

func Test_ReadBoto(t *testing.T) {
	cases := []struct {
		name     string
		in       string
		expected string
	}{
		{
			name:     "full url",
			expected: "key_id",
			in: `
# Autogenerated by Satlab. Do not edit.

[Credentials]
gs_access_key_id = key_id
gs_secret_access_key = secret
      `,
		},
		{
			name:     "without suffix",
			expected: "",
			in: `
# Autogenerated by Satlab. Do not edit.
      `,
		},
	}

	for _, tt := range cases {
		t.Run(tt.name, func(t *testing.T) {
			r := strings.NewReader(tt.in)
			out := ReadBotoKey(r)
			if out != tt.expected {
				t.Errorf("unexpected error.")
			}
		})
	}

}
