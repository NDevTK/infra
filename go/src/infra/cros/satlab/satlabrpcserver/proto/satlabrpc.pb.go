// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: satlabrpc.proto

package satlabrpcserver

import (
	longrunning "go.chromium.org/chromiumos/config/go/longrunning"
	api "go.chromium.org/chromiumos/config/go/test/api"
	test_platform "go.chromium.org/chromiumos/infra/proto/go/test_platform"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NEXT_TAG = 4
type BuildItem_BuildStatus int32

const (
	BuildItem_BUILD_STATUS_PASS    BuildItem_BuildStatus = 0
	BuildItem_BUILD_STATUS_FAIL    BuildItem_BuildStatus = 1
	BuildItem_BUILD_STATUS_RUNNING BuildItem_BuildStatus = 2
	BuildItem_BUILD_STATUS_ABORTED BuildItem_BuildStatus = 3
)

// Enum value maps for BuildItem_BuildStatus.
var (
	BuildItem_BuildStatus_name = map[int32]string{
		0: "BUILD_STATUS_PASS",
		1: "BUILD_STATUS_FAIL",
		2: "BUILD_STATUS_RUNNING",
		3: "BUILD_STATUS_ABORTED",
	}
	BuildItem_BuildStatus_value = map[string]int32{
		"BUILD_STATUS_PASS":    0,
		"BUILD_STATUS_FAIL":    1,
		"BUILD_STATUS_RUNNING": 2,
		"BUILD_STATUS_ABORTED": 3,
	}
)

func (x BuildItem_BuildStatus) Enum() *BuildItem_BuildStatus {
	p := new(BuildItem_BuildStatus)
	*p = x
	return p
}

func (x BuildItem_BuildStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildItem_BuildStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_satlabrpc_proto_enumTypes[0].Descriptor()
}

func (BuildItem_BuildStatus) Type() protoreflect.EnumType {
	return &file_satlabrpc_proto_enumTypes[0]
}

func (x BuildItem_BuildStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildItem_BuildStatus.Descriptor instead.
func (BuildItem_BuildStatus) EnumDescriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{2, 0}
}

type ListBuildTargetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBuildTargetsRequest) Reset() {
	*x = ListBuildTargetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildTargetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildTargetsRequest) ProtoMessage() {}

func (x *ListBuildTargetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildTargetsRequest.ProtoReflect.Descriptor instead.
func (*ListBuildTargetsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{0}
}

// NEXT_TAG = 2
type ListBuildTargetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildTargets []string `protobuf:"bytes,1,rep,name=build_targets,json=buildTargets,proto3" json:"build_targets,omitempty"`
}

func (x *ListBuildTargetsResponse) Reset() {
	*x = ListBuildTargetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildTargetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildTargetsResponse) ProtoMessage() {}

func (x *ListBuildTargetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildTargetsResponse.ProtoReflect.Descriptor instead.
func (*ListBuildTargetsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{1}
}

func (x *ListBuildTargetsResponse) GetBuildTargets() []string {
	if x != nil {
		return x.BuildTargets
	}
	return nil
}

// NEXT_TAG = 4
type BuildItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    string                `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	IsStaged bool                  `protobuf:"varint,2,opt,name=is_staged,json=isStaged,proto3" json:"is_staged,omitempty"`
	Status   BuildItem_BuildStatus `protobuf:"varint,3,opt,name=status,proto3,enum=satlabrpcserver.BuildItem_BuildStatus" json:"status,omitempty"`
}

func (x *BuildItem) Reset() {
	*x = BuildItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildItem) ProtoMessage() {}

func (x *BuildItem) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildItem.ProtoReflect.Descriptor instead.
func (*BuildItem) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{2}
}

func (x *BuildItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BuildItem) GetIsStaged() bool {
	if x != nil {
		return x.IsStaged
	}
	return false
}

func (x *BuildItem) GetStatus() BuildItem_BuildStatus {
	if x != nil {
		return x.Status
	}
	return BuildItem_BUILD_STATUS_PASS
}

// NEXT_TAG = 3
type ListMilestonesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board string `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *ListMilestonesRequest) Reset() {
	*x = ListMilestonesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMilestonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMilestonesRequest) ProtoMessage() {}

func (x *ListMilestonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMilestonesRequest.ProtoReflect.Descriptor instead.
func (*ListMilestonesRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{3}
}

func (x *ListMilestonesRequest) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *ListMilestonesRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

// NEXT_TAG = 3
type ListMilestonesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Milestones []*BuildItem `protobuf:"bytes,1,rep,name=milestones,proto3" json:"milestones,omitempty"`
}

func (x *ListMilestonesResponse) Reset() {
	*x = ListMilestonesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMilestonesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMilestonesResponse) ProtoMessage() {}

func (x *ListMilestonesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMilestonesResponse.ProtoReflect.Descriptor instead.
func (*ListMilestonesResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{4}
}

func (x *ListMilestonesResponse) GetMilestones() []*BuildItem {
	if x != nil {
		return x.Milestones
	}
	return nil
}

// NEXT_TAG = 2
type ListAccessibleModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board string `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
}

func (x *ListAccessibleModelsRequest) Reset() {
	*x = ListAccessibleModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccessibleModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessibleModelsRequest) ProtoMessage() {}

func (x *ListAccessibleModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessibleModelsRequest.ProtoReflect.Descriptor instead.
func (*ListAccessibleModelsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{5}
}

func (x *ListAccessibleModelsRequest) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

// NEXT_TAG = 3
type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Boards []string `protobuf:"bytes,2,rep,name=boards,proto3" json:"boards,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{6}
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetBoards() []string {
	if x != nil {
		return x.Boards
	}
	return nil
}

// NEXT_TAG = 2
type ListAccessibleModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
}

func (x *ListAccessibleModelsResponse) Reset() {
	*x = ListAccessibleModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccessibleModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessibleModelsResponse) ProtoMessage() {}

func (x *ListAccessibleModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessibleModelsResponse.ProtoReflect.Descriptor instead.
func (*ListAccessibleModelsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{7}
}

func (x *ListAccessibleModelsResponse) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

// NEXT_TAG = 4
type ListBuildVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board     string `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Model     string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Milestone int32  `protobuf:"varint,3,opt,name=milestone,proto3" json:"milestone,omitempty"`
}

func (x *ListBuildVersionsRequest) Reset() {
	*x = ListBuildVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildVersionsRequest) ProtoMessage() {}

func (x *ListBuildVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListBuildVersionsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{8}
}

func (x *ListBuildVersionsRequest) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *ListBuildVersionsRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ListBuildVersionsRequest) GetMilestone() int32 {
	if x != nil {
		return x.Milestone
	}
	return 0
}

// NEXT_TAG = 2
type ListBuildVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildVersions []*BuildItem `protobuf:"bytes,1,rep,name=build_versions,json=buildVersions,proto3" json:"build_versions,omitempty"`
}

func (x *ListBuildVersionsResponse) Reset() {
	*x = ListBuildVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildVersionsResponse) ProtoMessage() {}

func (x *ListBuildVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListBuildVersionsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{9}
}

func (x *ListBuildVersionsResponse) GetBuildVersions() []*BuildItem {
	if x != nil {
		return x.BuildVersions
	}
	return nil
}

// NEXT_TAG = 4
type StageBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board        string `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Model        string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	BuildVersion string `protobuf:"bytes,3,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
}

func (x *StageBuildRequest) Reset() {
	*x = StageBuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageBuildRequest) ProtoMessage() {}

func (x *StageBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageBuildRequest.ProtoReflect.Descriptor instead.
func (*StageBuildRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{10}
}

func (x *StageBuildRequest) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *StageBuildRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *StageBuildRequest) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

// NEXT_TAG = 2
type StageBuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildBucket string `protobuf:"bytes,1,opt,name=build_bucket,json=buildBucket,proto3" json:"build_bucket,omitempty"`
}

func (x *StageBuildResponse) Reset() {
	*x = StageBuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageBuildResponse) ProtoMessage() {}

func (x *StageBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageBuildResponse.ProtoReflect.Descriptor instead.
func (*StageBuildResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{11}
}

func (x *StageBuildResponse) GetBuildBucket() string {
	if x != nil {
		return x.BuildBucket
	}
	return ""
}

// NEXT_TAG = 1
type ListConnectedDutsFirmwareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListConnectedDutsFirmwareRequest) Reset() {
	*x = ListConnectedDutsFirmwareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectedDutsFirmwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedDutsFirmwareRequest) ProtoMessage() {}

func (x *ListConnectedDutsFirmwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedDutsFirmwareRequest.ProtoReflect.Descriptor instead.
func (*ListConnectedDutsFirmwareRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{12}
}

// NEXT_TAG = 4
type ConnectedDutFirmwareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip              string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	CurrentFirmware string `protobuf:"bytes,2,opt,name=current_firmware,json=currentFirmware,proto3" json:"current_firmware,omitempty"`
	UpdateFirmware  string `protobuf:"bytes,3,opt,name=update_firmware,json=updateFirmware,proto3" json:"update_firmware,omitempty"`
}

func (x *ConnectedDutFirmwareInfo) Reset() {
	*x = ConnectedDutFirmwareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedDutFirmwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedDutFirmwareInfo) ProtoMessage() {}

func (x *ConnectedDutFirmwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedDutFirmwareInfo.ProtoReflect.Descriptor instead.
func (*ConnectedDutFirmwareInfo) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{13}
}

func (x *ConnectedDutFirmwareInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ConnectedDutFirmwareInfo) GetCurrentFirmware() string {
	if x != nil {
		return x.CurrentFirmware
	}
	return ""
}

func (x *ConnectedDutFirmwareInfo) GetUpdateFirmware() string {
	if x != nil {
		return x.UpdateFirmware
	}
	return ""
}

// NEXT_TAG = 2
type ListConnectedDutsFirmwareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duts []*ConnectedDutFirmwareInfo `protobuf:"bytes,1,rep,name=duts,proto3" json:"duts,omitempty"`
}

func (x *ListConnectedDutsFirmwareResponse) Reset() {
	*x = ListConnectedDutsFirmwareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectedDutsFirmwareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedDutsFirmwareResponse) ProtoMessage() {}

func (x *ListConnectedDutsFirmwareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedDutsFirmwareResponse.ProtoReflect.Descriptor instead.
func (*ListConnectedDutsFirmwareResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{14}
}

func (x *ListConnectedDutsFirmwareResponse) GetDuts() []*ConnectedDutFirmwareInfo {
	if x != nil {
		return x.Duts
	}
	return nil
}

// NEXT_TAG = 1
type GetSystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSystemInfoRequest) Reset() {
	*x = GetSystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoRequest) ProtoMessage() {}

func (x *GetSystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{15}
}

// NEXT_TAG = 3
type GetSystemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuTemperature float32                `protobuf:"fixed32,1,opt,name=cpu_temperature,json=cpuTemperature,proto3" json:"cpu_temperature,omitempty"`
	StartTime      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *GetSystemInfoResponse) Reset() {
	*x = GetSystemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse) ProtoMessage() {}

func (x *GetSystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{16}
}

func (x *GetSystemInfoResponse) GetCpuTemperature() float32 {
	if x != nil {
		return x.CpuTemperature
	}
	return 0
}

func (x *GetSystemInfoResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// NEXT_TAG = 2
type GetPeripheralInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DutHostname string `protobuf:"bytes,1,opt,name=dut_hostname,json=dutHostname,proto3" json:"dut_hostname,omitempty"`
}

func (x *GetPeripheralInformationRequest) Reset() {
	*x = GetPeripheralInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeripheralInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeripheralInformationRequest) ProtoMessage() {}

func (x *GetPeripheralInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeripheralInformationRequest.ProtoReflect.Descriptor instead.
func (*GetPeripheralInformationRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{17}
}

func (x *GetPeripheralInformationRequest) GetDutHostname() string {
	if x != nil {
		return x.DutHostname
	}
	return ""
}

// NEXT_TAG = 2
type GetPeripheralInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonInfo string `protobuf:"bytes,1,opt,name=json_info,json=jsonInfo,proto3" json:"json_info,omitempty"`
}

func (x *GetPeripheralInformationResponse) Reset() {
	*x = GetPeripheralInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeripheralInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeripheralInformationResponse) ProtoMessage() {}

func (x *GetPeripheralInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeripheralInformationResponse.ProtoReflect.Descriptor instead.
func (*GetPeripheralInformationResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{18}
}

func (x *GetPeripheralInformationResponse) GetJsonInfo() string {
	if x != nil {
		return x.JsonInfo
	}
	return ""
}

// NEXT_TAG = 2
type UpdateDutsFirmwareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *UpdateDutsFirmwareRequest) Reset() {
	*x = UpdateDutsFirmwareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDutsFirmwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDutsFirmwareRequest) ProtoMessage() {}

func (x *UpdateDutsFirmwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDutsFirmwareRequest.ProtoReflect.Descriptor instead.
func (*UpdateDutsFirmwareRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateDutsFirmwareRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// NEXT_TAG = 3
type FirmwareUpdateCommandOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip            string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	CommandOutput string `protobuf:"bytes,2,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *FirmwareUpdateCommandOutput) Reset() {
	*x = FirmwareUpdateCommandOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirmwareUpdateCommandOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareUpdateCommandOutput) ProtoMessage() {}

func (x *FirmwareUpdateCommandOutput) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareUpdateCommandOutput.ProtoReflect.Descriptor instead.
func (*FirmwareUpdateCommandOutput) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{20}
}

func (x *FirmwareUpdateCommandOutput) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *FirmwareUpdateCommandOutput) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

// NEXT_TAG = 2
type UpdateDutsFirmwareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outputs []*FirmwareUpdateCommandOutput `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *UpdateDutsFirmwareResponse) Reset() {
	*x = UpdateDutsFirmwareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDutsFirmwareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDutsFirmwareResponse) ProtoMessage() {}

func (x *UpdateDutsFirmwareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDutsFirmwareResponse.ProtoReflect.Descriptor instead.
func (*UpdateDutsFirmwareResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateDutsFirmwareResponse) GetOutputs() []*FirmwareUpdateCommandOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// NEXT_TAG = 7
type RunSuiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suite        string `protobuf:"bytes,1,opt,name=suite,proto3" json:"suite,omitempty"`
	BuildTarget  string `protobuf:"bytes,2,opt,name=build_target,json=buildTarget,proto3" json:"build_target,omitempty"`
	Milestone    string `protobuf:"bytes,3,opt,name=milestone,proto3" json:"milestone,omitempty"`
	BuildVersion string `protobuf:"bytes,4,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
	Model        string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Pool         string `protobuf:"bytes,6,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (x *RunSuiteRequest) Reset() {
	*x = RunSuiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSuiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSuiteRequest) ProtoMessage() {}

func (x *RunSuiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSuiteRequest.ProtoReflect.Descriptor instead.
func (*RunSuiteRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{22}
}

func (x *RunSuiteRequest) GetSuite() string {
	if x != nil {
		return x.Suite
	}
	return ""
}

func (x *RunSuiteRequest) GetBuildTarget() string {
	if x != nil {
		return x.BuildTarget
	}
	return ""
}

func (x *RunSuiteRequest) GetMilestone() string {
	if x != nil {
		return x.Milestone
	}
	return ""
}

func (x *RunSuiteRequest) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

func (x *RunSuiteRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RunSuiteRequest) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

// NEXT_TAG = 2
type RunSuiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildLink string `protobuf:"bytes,1,opt,name=build_link,json=buildLink,proto3" json:"build_link,omitempty"`
}

func (x *RunSuiteResponse) Reset() {
	*x = RunSuiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSuiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSuiteResponse) ProtoMessage() {}

func (x *RunSuiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSuiteResponse.ProtoReflect.Descriptor instead.
func (*RunSuiteResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{23}
}

func (x *RunSuiteResponse) GetBuildLink() string {
	if x != nil {
		return x.BuildLink
	}
	return ""
}

// NEXT_TAG = 2
type GetVersionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionInfoRequest) Reset() {
	*x = GetVersionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionInfoRequest) ProtoMessage() {}

func (x *GetVersionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVersionInfoRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{24}
}

// NEXT_TAG = 7
type GetVersionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ChromeosVersion string `protobuf:"bytes,2,opt,name=chromeos_version,json=chromeosVersion,proto3" json:"chromeos_version,omitempty"`
	Track           string `protobuf:"bytes,3,opt,name=track,proto3" json:"track,omitempty"`
	Description     string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	HostId          string `protobuf:"bytes,6,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
}

func (x *GetVersionInfoResponse) Reset() {
	*x = GetVersionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionInfoResponse) ProtoMessage() {}

func (x *GetVersionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVersionInfoResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{25}
}

func (x *GetVersionInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetVersionInfoResponse) GetChromeosVersion() string {
	if x != nil {
		return x.ChromeosVersion
	}
	return ""
}

func (x *GetVersionInfoResponse) GetTrack() string {
	if x != nil {
		return x.Track
	}
	return ""
}

func (x *GetVersionInfoResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetVersionInfoResponse) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

// NEXT_TAG = 3
type AddPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Pool      string   `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (x *AddPoolRequest) Reset() {
	*x = AddPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPoolRequest) ProtoMessage() {}

func (x *AddPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPoolRequest.ProtoReflect.Descriptor instead.
func (*AddPoolRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{26}
}

func (x *AddPoolRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *AddPoolRequest) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

// NEXT_TAG = 1
type AddPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPoolResponse) Reset() {
	*x = AddPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPoolResponse) ProtoMessage() {}

func (x *AddPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPoolResponse.ProtoReflect.Descriptor instead.
func (*AddPoolResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{27}
}

// NEXT_TAG = 2
type UpdatePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UpdatePoolRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UpdatePoolRequest) Reset() {
	*x = UpdatePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoolRequest) ProtoMessage() {}

func (x *UpdatePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoolRequest.ProtoReflect.Descriptor instead.
func (*UpdatePoolRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{28}
}

func (x *UpdatePoolRequest) GetItems() []*UpdatePoolRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// NEXT_TAG = 1
type UpdatePoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePoolResponse) Reset() {
	*x = UpdatePoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoolResponse) ProtoMessage() {}

func (x *UpdatePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoolResponse.ProtoReflect.Descriptor instead.
func (*UpdatePoolResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{29}
}

// NEXT_TAG = 2
type GetDutDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetDutDetailRequest) Reset() {
	*x = GetDutDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDutDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDutDetailRequest) ProtoMessage() {}

func (x *GetDutDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDutDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDutDetailRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{30}
}

func (x *GetDutDetailRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// NEXT_TAG = 3
type StringListPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StringListPair) Reset() {
	*x = StringListPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringListPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringListPair) ProtoMessage() {}

func (x *StringListPair) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringListPair.ProtoReflect.Descriptor instead.
func (*StringListPair) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{31}
}

func (x *StringListPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringListPair) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// NEXT_TAG = 13
type GetDutDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId           string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	TaskId          string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ExternalIp      string                 `protobuf:"bytes,3,opt,name=external_ip,json=externalIp,proto3" json:"external_ip,omitempty"`
	AuthenticatedAs string                 `protobuf:"bytes,4,opt,name=authenticated_as,json=authenticatedAs,proto3" json:"authenticated_as,omitempty"`
	FirstSeenTs     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=first_seen_ts,json=firstSeenTs,proto3" json:"first_seen_ts,omitempty"`
	IsDead          bool                   `protobuf:"varint,6,opt,name=is_dead,json=isDead,proto3" json:"is_dead,omitempty"`
	LastSeenTs      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_seen_ts,json=lastSeenTs,proto3" json:"last_seen_ts,omitempty"`
	Quarantined     bool                   `protobuf:"varint,8,opt,name=quarantined,proto3" json:"quarantined,omitempty"`
	MaintenanceMsg  string                 `protobuf:"bytes,9,opt,name=maintenance_msg,json=maintenanceMsg,proto3" json:"maintenance_msg,omitempty"`
	Dimensions      []*StringListPair      `protobuf:"bytes,10,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	TaskName        string                 `protobuf:"bytes,11,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Version         string                 `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetDutDetailResponse) Reset() {
	*x = GetDutDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDutDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDutDetailResponse) ProtoMessage() {}

func (x *GetDutDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDutDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDutDetailResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetDutDetailResponse) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *GetDutDetailResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetDutDetailResponse) GetExternalIp() string {
	if x != nil {
		return x.ExternalIp
	}
	return ""
}

func (x *GetDutDetailResponse) GetAuthenticatedAs() string {
	if x != nil {
		return x.AuthenticatedAs
	}
	return ""
}

func (x *GetDutDetailResponse) GetFirstSeenTs() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeenTs
	}
	return nil
}

func (x *GetDutDetailResponse) GetIsDead() bool {
	if x != nil {
		return x.IsDead
	}
	return false
}

func (x *GetDutDetailResponse) GetLastSeenTs() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenTs
	}
	return nil
}

func (x *GetDutDetailResponse) GetQuarantined() bool {
	if x != nil {
		return x.Quarantined
	}
	return false
}

func (x *GetDutDetailResponse) GetMaintenanceMsg() string {
	if x != nil {
		return x.MaintenanceMsg
	}
	return ""
}

func (x *GetDutDetailResponse) GetDimensions() []*StringListPair {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetDutDetailResponse) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *GetDutDetailResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// NEXT_TAG = 4
type ListDutTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the IP address of DUT
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// A page token, received from the previous `ListDUTEvents` call.
	// Provide this, to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The maximum number of events to return
	// if unspecified, at most 30 events will be returned
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListDutTasksRequest) Reset() {
	*x = ListDutTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutTasksRequest) ProtoMessage() {}

func (x *ListDutTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutTasksRequest.ProtoReflect.Descriptor instead.
func (*ListDutTasksRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{33}
}

func (x *ListDutTasksRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListDutTasksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDutTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// NEXT_TAG = 7
type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	Duration  float32                `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Url       string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	IsSuccess bool                   `protobuf:"varint,5,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Name      string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{34}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *Task) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Task) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Task) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// NEXT_TAG = 4
type ListDutTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A page token, the next token for retrieving the subsequent page.
	// if it is empty, means it is at the end, no more plans
	// that we can read from the bucket
	NextPageToken string  `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Tasks         []*Task `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *ListDutTasksResponse) Reset() {
	*x = ListDutTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutTasksResponse) ProtoMessage() {}

func (x *ListDutTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutTasksResponse.ProtoReflect.Descriptor instead.
func (*ListDutTasksResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{35}
}

func (x *ListDutTasksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDutTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// NEXT_TAG = 4
type ListDutEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the IP address of DUT
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// A page token, received from the previous `ListDUTEvents` call.
	// Provide this, to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The maximum number of events to return
	// if unspecified, at most 30 events will be returned
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListDutEventsRequest) Reset() {
	*x = ListDutEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutEventsRequest) ProtoMessage() {}

func (x *ListDutEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutEventsRequest.ProtoReflect.Descriptor instead.
func (*ListDutEventsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{36}
}

func (x *ListDutEventsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListDutEventsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDutEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// NEXT_TAG = 7
type BotEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	EventType string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TaskId    string                 `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskLink  string                 `protobuf:"bytes,5,opt,name=task_link,json=taskLink,proto3" json:"task_link,omitempty"`
	Version   string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BotEvent) Reset() {
	*x = BotEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotEvent) ProtoMessage() {}

func (x *BotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotEvent.ProtoReflect.Descriptor instead.
func (*BotEvent) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{37}
}

func (x *BotEvent) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BotEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *BotEvent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BotEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *BotEvent) GetTaskLink() string {
	if x != nil {
		return x.TaskLink
	}
	return ""
}

func (x *BotEvent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// NEXT_TAG = 3
type ListDutEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A page token, the next token for retrieving the subsequent page.
	// if it is empty, means it is at the end, no more plans
	// that we can read from the bucket
	NextPageToken string      `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Events        []*BotEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ListDutEventsResponse) Reset() {
	*x = ListDutEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutEventsResponse) ProtoMessage() {}

func (x *ListDutEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutEventsResponse.ProtoReflect.Descriptor instead.
func (*ListDutEventsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{38}
}

func (x *ListDutEventsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDutEventsResponse) GetEvents() []*BotEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// NEXT_TAG = 8
type RunTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tests     []string `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
	TestArgs  string   `protobuf:"bytes,2,opt,name=test_args,json=testArgs,proto3" json:"test_args,omitempty"`
	Board     string   `protobuf:"bytes,3,opt,name=board,proto3" json:"board,omitempty"`
	Model     string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Milestone string   `protobuf:"bytes,5,opt,name=milestone,proto3" json:"milestone,omitempty"`
	Build     string   `protobuf:"bytes,6,opt,name=build,proto3" json:"build,omitempty"`
	Pool      string   `protobuf:"bytes,7,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (x *RunTestRequest) Reset() {
	*x = RunTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTestRequest) ProtoMessage() {}

func (x *RunTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTestRequest.ProtoReflect.Descriptor instead.
func (*RunTestRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{39}
}

func (x *RunTestRequest) GetTests() []string {
	if x != nil {
		return x.Tests
	}
	return nil
}

func (x *RunTestRequest) GetTestArgs() string {
	if x != nil {
		return x.TestArgs
	}
	return ""
}

func (x *RunTestRequest) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *RunTestRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RunTestRequest) GetMilestone() string {
	if x != nil {
		return x.Milestone
	}
	return ""
}

func (x *RunTestRequest) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *RunTestRequest) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

// NEXT_TAG = 2
type RunTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildLink string `protobuf:"bytes,1,opt,name=build_link,json=buildLink,proto3" json:"build_link,omitempty"`
}

func (x *RunTestResponse) Reset() {
	*x = RunTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTestResponse) ProtoMessage() {}

func (x *RunTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTestResponse.ProtoReflect.Descriptor instead.
func (*RunTestResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{40}
}

func (x *RunTestResponse) GetBuildLink() string {
	if x != nil {
		return x.BuildLink
	}
	return ""
}

// NEXT_TAG = 1
type ListEnrolledDutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListEnrolledDutsRequest) Reset() {
	*x = ListEnrolledDutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnrolledDutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnrolledDutsRequest) ProtoMessage() {}

func (x *ListEnrolledDutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnrolledDutsRequest.ProtoReflect.Descriptor instead.
func (*ListEnrolledDutsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{41}
}

// NEXT_TAG = 13
type Dut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Hostname    string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Board       string   `protobuf:"bytes,4,opt,name=board,proto3" json:"board,omitempty"`
	Model       string   `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Pools       []string `protobuf:"bytes,6,rep,name=pools,proto3" json:"pools,omitempty"`
	MacAddress  string   `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IsConnected bool     `protobuf:"varint,8,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	ServoSerial string   `protobuf:"bytes,9,opt,name=servo_serial,json=servoSerial,proto3" json:"servo_serial,omitempty"`
	ServoType   string   `protobuf:"bytes,10,opt,name=servo_type,json=servoType,proto3" json:"servo_type,omitempty"`
	ServoPort   int32    `protobuf:"varint,11,opt,name=servo_port,json=servoPort,proto3" json:"servo_port,omitempty"`
	State       string   `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Dut) Reset() {
	*x = Dut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dut) ProtoMessage() {}

func (x *Dut) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dut.ProtoReflect.Descriptor instead.
func (*Dut) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{42}
}

func (x *Dut) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Dut) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dut) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Dut) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *Dut) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Dut) GetPools() []string {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *Dut) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Dut) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *Dut) GetServoSerial() string {
	if x != nil {
		return x.ServoSerial
	}
	return ""
}

func (x *Dut) GetServoType() string {
	if x != nil {
		return x.ServoType
	}
	return ""
}

func (x *Dut) GetServoPort() int32 {
	if x != nil {
		return x.ServoPort
	}
	return 0
}

func (x *Dut) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// NEXT_TAG = 2
type ListEnrolledDutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duts []*Dut `protobuf:"bytes,1,rep,name=duts,proto3" json:"duts,omitempty"`
}

func (x *ListEnrolledDutsResponse) Reset() {
	*x = ListEnrolledDutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnrolledDutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnrolledDutsResponse) ProtoMessage() {}

func (x *ListEnrolledDutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnrolledDutsResponse.ProtoReflect.Descriptor instead.
func (*ListEnrolledDutsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{43}
}

func (x *ListEnrolledDutsResponse) GetDuts() []*Dut {
	if x != nil {
		return x.Duts
	}
	return nil
}

// NEXT_TAG = 1
type ListDutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDutsRequest) Reset() {
	*x = ListDutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutsRequest) ProtoMessage() {}

func (x *ListDutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutsRequest.ProtoReflect.Descriptor instead.
func (*ListDutsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{44}
}

// NEXT_TAG = 2
type ListDutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duts []*Dut `protobuf:"bytes,1,rep,name=duts,proto3" json:"duts,omitempty"`
}

func (x *ListDutsResponse) Reset() {
	*x = ListDutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDutsResponse) ProtoMessage() {}

func (x *ListDutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDutsResponse.ProtoReflect.Descriptor instead.
func (*ListDutsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{45}
}

func (x *ListDutsResponse) GetDuts() []*Dut {
	if x != nil {
		return x.Duts
	}
	return nil
}

// NEXT_TAG = 2
type DeleteDutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostnames []string `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
}

func (x *DeleteDutsRequest) Reset() {
	*x = DeleteDutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDutsRequest) ProtoMessage() {}

func (x *DeleteDutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDutsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDutsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteDutsRequest) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

// NEXT_TAG = 4
type DeleteDutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pass contains the hostnames that we have deleted DUTs successfully
	Pass []string `protobuf:"bytes,1,rep,name=pass,proto3" json:"pass,omitempty"`
	// fail contains the hostnames that we failed to delete DUTs
	Fail []string `protobuf:"bytes,2,rep,name=fail,proto3" json:"fail,omitempty"`
}

func (x *DeleteDutsResponse) Reset() {
	*x = DeleteDutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDutsResponse) ProtoMessage() {}

func (x *DeleteDutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDutsResponse.ProtoReflect.Descriptor instead.
func (*DeleteDutsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteDutsResponse) GetPass() []string {
	if x != nil {
		return x.Pass
	}
	return nil
}

func (x *DeleteDutsResponse) GetFail() []string {
	if x != nil {
		return x.Fail
	}
	return nil
}

// NEXT_TAG = 1
type GetNetworkInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNetworkInfoRequest) Reset() {
	*x = GetNetworkInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInfoRequest) ProtoMessage() {}

func (x *GetNetworkInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInfoRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkInfoRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{48}
}

// NEXT_TAG = 4
type GetNetworkInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname    string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	MacAddress  string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IsConnected bool   `protobuf:"varint,3,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
}

func (x *GetNetworkInfoResponse) Reset() {
	*x = GetNetworkInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInfoResponse) ProtoMessage() {}

func (x *GetNetworkInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInfoResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkInfoResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{49}
}

func (x *GetNetworkInfoResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *GetNetworkInfoResponse) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *GetNetworkInfoResponse) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

// NEXT_TAG = 2
type AddDutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duts []*AddDutsRequest_Param `protobuf:"bytes,1,rep,name=duts,proto3" json:"duts,omitempty"`
}

func (x *AddDutsRequest) Reset() {
	*x = AddDutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDutsRequest) ProtoMessage() {}

func (x *AddDutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDutsRequest.ProtoReflect.Descriptor instead.
func (*AddDutsRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{50}
}

func (x *AddDutsRequest) GetDuts() []*AddDutsRequest_Param {
	if x != nil {
		return x.Duts
	}
	return nil
}

// NEXT_TAG = 3
type AddDutsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass []*AddDutsResponse_PassedData `protobuf:"bytes,1,rep,name=pass,proto3" json:"pass,omitempty"`
	Fail []*AddDutsResponse_FailedData `protobuf:"bytes,2,rep,name=fail,proto3" json:"fail,omitempty"`
}

func (x *AddDutsResponse) Reset() {
	*x = AddDutsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDutsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDutsResponse) ProtoMessage() {}

func (x *AddDutsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDutsResponse.ProtoReflect.Descriptor instead.
func (*AddDutsResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{51}
}

func (x *AddDutsResponse) GetPass() []*AddDutsResponse_PassedData {
	if x != nil {
		return x.Pass
	}
	return nil
}

func (x *AddDutsResponse) GetFail() []*AddDutsResponse_FailedData {
	if x != nil {
		return x.Fail
	}
	return nil
}

// NEXT_TAG = 1
type ListTestPlansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTestPlansRequest) Reset() {
	*x = ListTestPlansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestPlansRequest) ProtoMessage() {}

func (x *ListTestPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestPlansRequest.ProtoReflect.Descriptor instead.
func (*ListTestPlansRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{52}
}

// NEXT_TAG = 2
type ListTestPlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of test plan
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *ListTestPlansResponse) Reset() {
	*x = ListTestPlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestPlansResponse) ProtoMessage() {}

func (x *ListTestPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestPlansResponse.ProtoReflect.Descriptor instead.
func (*ListTestPlansResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{53}
}

func (x *ListTestPlansResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// NEXT_TAG = 7
type RunTestPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the test plan in the bucket that a user wants to run
	TestPlanName string `protobuf:"bytes,1,opt,name=test_plan_name,json=testPlanName,proto3" json:"test_plan_name,omitempty"`
	Board        string `protobuf:"bytes,2,opt,name=board,proto3" json:"board,omitempty"`
	Model        string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Milestone    string `protobuf:"bytes,4,opt,name=milestone,proto3" json:"milestone,omitempty"`
	Build        string `protobuf:"bytes,5,opt,name=build,proto3" json:"build,omitempty"`
	Pool         string `protobuf:"bytes,6,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (x *RunTestPlanRequest) Reset() {
	*x = RunTestPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTestPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTestPlanRequest) ProtoMessage() {}

func (x *RunTestPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTestPlanRequest.ProtoReflect.Descriptor instead.
func (*RunTestPlanRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{54}
}

func (x *RunTestPlanRequest) GetTestPlanName() string {
	if x != nil {
		return x.TestPlanName
	}
	return ""
}

func (x *RunTestPlanRequest) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *RunTestPlanRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RunTestPlanRequest) GetMilestone() string {
	if x != nil {
		return x.Milestone
	}
	return ""
}

func (x *RunTestPlanRequest) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *RunTestPlanRequest) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

// NEXT_TAG = 2
type RunTestPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildLink string `protobuf:"bytes,1,opt,name=build_link,json=buildLink,proto3" json:"build_link,omitempty"`
}

func (x *RunTestPlanResponse) Reset() {
	*x = RunTestPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTestPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTestPlanResponse) ProtoMessage() {}

func (x *RunTestPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTestPlanResponse.ProtoReflect.Descriptor instead.
func (*RunTestPlanResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{55}
}

func (x *RunTestPlanResponse) GetBuildLink() string {
	if x != nil {
		return x.BuildLink
	}
	return ""
}

// NEXT_TAG = 2
type GetTestPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of test plan we want to fetch the content
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTestPlanRequest) Reset() {
	*x = GetTestPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestPlanRequest) ProtoMessage() {}

func (x *GetTestPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestPlanRequest.ProtoReflect.Descriptor instead.
func (*GetTestPlanRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{56}
}

func (x *GetTestPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// NEXT_TAG = 2
type GetTestPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// plan is the content of the test plan
	Plan *test_platform.Request_TestPlan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *GetTestPlanResponse) Reset() {
	*x = GetTestPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestPlanResponse) ProtoMessage() {}

func (x *GetTestPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestPlanResponse.ProtoReflect.Descriptor instead.
func (*GetTestPlanResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{57}
}

func (x *GetTestPlanResponse) GetPlan() *test_platform.Request_TestPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

// NEXT_TAG = 4
type SetCloudConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotoKeyId     string `protobuf:"bytes,1,opt,name=boto_key_id,json=botoKeyId,proto3" json:"boto_key_id,omitempty"`
	BotoKeySecret string `protobuf:"bytes,2,opt,name=boto_key_secret,json=botoKeySecret,proto3" json:"boto_key_secret,omitempty"`
	GcsBucketUrl  string `protobuf:"bytes,3,opt,name=gcs_bucket_url,json=gcsBucketUrl,proto3" json:"gcs_bucket_url,omitempty"`
}

func (x *SetCloudConfigurationRequest) Reset() {
	*x = SetCloudConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCloudConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCloudConfigurationRequest) ProtoMessage() {}

func (x *SetCloudConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCloudConfigurationRequest.ProtoReflect.Descriptor instead.
func (*SetCloudConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{58}
}

func (x *SetCloudConfigurationRequest) GetBotoKeyId() string {
	if x != nil {
		return x.BotoKeyId
	}
	return ""
}

func (x *SetCloudConfigurationRequest) GetBotoKeySecret() string {
	if x != nil {
		return x.BotoKeySecret
	}
	return ""
}

func (x *SetCloudConfigurationRequest) GetGcsBucketUrl() string {
	if x != nil {
		return x.GcsBucketUrl
	}
	return ""
}

// NEXT_TAG = 1
type SetCloudConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCloudConfigurationResponse) Reset() {
	*x = SetCloudConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCloudConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCloudConfigurationResponse) ProtoMessage() {}

func (x *SetCloudConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCloudConfigurationResponse.ProtoReflect.Descriptor instead.
func (*SetCloudConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{59}
}

// NEXT_TAG = 1
type GetCloudConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCloudConfigurationRequest) Reset() {
	*x = GetCloudConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCloudConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudConfigurationRequest) ProtoMessage() {}

func (x *GetCloudConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetCloudConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{60}
}

// NEXT_TAG = 3
type GetCloudConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotoKeyId    string `protobuf:"bytes,1,opt,name=boto_key_id,json=botoKeyId,proto3" json:"boto_key_id,omitempty"`
	GcsBucketUrl string `protobuf:"bytes,2,opt,name=gcs_bucket_url,json=gcsBucketUrl,proto3" json:"gcs_bucket_url,omitempty"`
}

func (x *GetCloudConfigurationResponse) Reset() {
	*x = GetCloudConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCloudConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudConfigurationResponse) ProtoMessage() {}

func (x *GetCloudConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetCloudConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{61}
}

func (x *GetCloudConfigurationResponse) GetBotoKeyId() string {
	if x != nil {
		return x.BotoKeyId
	}
	return ""
}

func (x *GetCloudConfigurationResponse) GetGcsBucketUrl() string {
	if x != nil {
		return x.GcsBucketUrl
	}
	return ""
}

// NEXT_TAG = 1
type RebootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RebootRequest) Reset() {
	*x = RebootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootRequest) ProtoMessage() {}

func (x *RebootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootRequest.ProtoReflect.Descriptor instead.
func (*RebootRequest) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{62}
}

// NEXT_TAG = 1
type RebootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RebootResponse) Reset() {
	*x = RebootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootResponse) ProtoMessage() {}

func (x *RebootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootResponse.ProtoReflect.Descriptor instead.
func (*RebootResponse) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{63}
}

// NEXT_TAG = 3
type UpdatePoolRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Pools   []string `protobuf:"bytes,2,rep,name=pools,proto3" json:"pools,omitempty"`
}

func (x *UpdatePoolRequest_Item) Reset() {
	*x = UpdatePoolRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoolRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoolRequest_Item) ProtoMessage() {}

func (x *UpdatePoolRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoolRequest_Item.ProtoReflect.Descriptor instead.
func (*UpdatePoolRequest_Item) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{28, 0}
}

func (x *UpdatePoolRequest_Item) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdatePoolRequest_Item) GetPools() []string {
	if x != nil {
		return x.Pools
	}
	return nil
}

// NEXT_TAG = 5
type AddDutsRequest_Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IP address that connected to Satlab
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The hostname that a user wants to name the DUT
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// The board of the DUT
	Board string `protobuf:"bytes,3,opt,name=board,proto3" json:"board,omitempty"`
	// The model of the DUT
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	// The label pool that user wants to add
	Pools []string `protobuf:"bytes,5,rep,name=pools,proto3" json:"pools,omitempty"`
	// The servo serial number that connected with DUT
	ServoSerial string `protobuf:"bytes,6,opt,name=servo_serial,json=servoSerial,proto3" json:"servo_serial,omitempty"`
}

func (x *AddDutsRequest_Param) Reset() {
	*x = AddDutsRequest_Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDutsRequest_Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDutsRequest_Param) ProtoMessage() {}

func (x *AddDutsRequest_Param) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDutsRequest_Param.ProtoReflect.Descriptor instead.
func (*AddDutsRequest_Param) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{50, 0}
}

func (x *AddDutsRequest_Param) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddDutsRequest_Param) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AddDutsRequest_Param) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *AddDutsRequest_Param) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AddDutsRequest_Param) GetPools() []string {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *AddDutsRequest_Param) GetServoSerial() string {
	if x != nil {
		return x.ServoSerial
	}
	return ""
}

// NEXT_TAG = 3
type AddDutsResponse_PassedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// the url of of deploying job
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AddDutsResponse_PassedData) Reset() {
	*x = AddDutsResponse_PassedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDutsResponse_PassedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDutsResponse_PassedData) ProtoMessage() {}

func (x *AddDutsResponse_PassedData) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDutsResponse_PassedData.ProtoReflect.Descriptor instead.
func (*AddDutsResponse_PassedData) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{51, 0}
}

func (x *AddDutsResponse_PassedData) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AddDutsResponse_PassedData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// NEXT_TAG = 3
type AddDutsResponse_FailedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// the reason that why we can not add the DUT.
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AddDutsResponse_FailedData) Reset() {
	*x = AddDutsResponse_FailedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satlabrpc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDutsResponse_FailedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDutsResponse_FailedData) ProtoMessage() {}

func (x *AddDutsResponse_FailedData) ProtoReflect() protoreflect.Message {
	mi := &file_satlabrpc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDutsResponse_FailedData.ProtoReflect.Descriptor instead.
func (*AddDutsResponse_FailedData) Descriptor() ([]byte, []int) {
	return file_satlabrpc_proto_rawDescGZIP(), []int{51, 1}
}

func (x *AddDutsResponse_FailedData) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AddDutsResponse_FailedData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_satlabrpc_proto protoreflect.FileDescriptor

var file_satlabrpc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x27, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73, 0x2f, 0x6c, 0x6f, 0x6e,
	0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x69, 0x75, 0x6d, 0x6f, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22,
	0xef, 0x01, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x6f, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x15, 0x0a, 0x11, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x55, 0x49, 0x4c, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x03, 0x22, 0x43, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x54, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0a, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x22, 0x33, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72,
	0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x64, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x22, 0x5e, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x64, 0x0a, 0x11,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x75, 0x74, 0x73,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x7e, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x75, 0x74, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x22,
	0x62, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x44, 0x75, 0x74, 0x73, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x75,
	0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x75, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63,
	0x70, 0x75, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x75, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x75, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x2d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x75, 0x74, 0x73, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x54,
	0x0a, 0x1b, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x64, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x75,
	0x74, 0x73, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x52,
	0x75, 0x6e, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x75, 0x69, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6f, 0x6c, 0x22, 0x31, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xb4, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x42, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8a,
	0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x36, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x3a, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xec,
	0x03, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65,
	0x6e, 0x5f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x54, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x65, 0x61, 0x64, 0x12, 0x3c, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x54, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75,
	0x61, 0x72, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x71, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x74, 0x6c,
	0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x04, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x74,
	0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x6c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x08, 0x42, 0x6f, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x72, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x31, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x73, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x22, 0x30, 0x0a,
	0x0f, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x22,
	0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x44,
	0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcc, 0x02, 0x0a, 0x03, 0x44,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x6f, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x44, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x75, 0x74, 0x52, 0x04, 0x64, 0x75, 0x74, 0x73, 0x22,
	0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x75, 0x74, 0x52, 0x04, 0x64, 0x75, 0x74, 0x73,
	0x22, 0x31, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x75, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x69,
	0x6c, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x78, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x04, 0x64, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x61,
	0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x04, 0x64, 0x75, 0x74, 0x73, 0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x91, 0x02,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x70, 0x61,
	0x73, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x66,
	0x61, 0x69, 0x6c, 0x1a, 0x3a, 0x0a, 0x0a, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a,
	0x40, 0x0a, 0x0a, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x52, 0x75, 0x6e,
	0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x22, 0x34, 0x0a, 0x13, 0x52, 0x75, 0x6e,
	0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x22,
	0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x6f, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x74,
	0x6f, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x6f, 0x74, 0x6f, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x62, 0x6f, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x67, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x63, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x55, 0x72, 0x6c, 0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x6f, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x74,
	0x6f, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x63, 0x73, 0x5f, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x67, 0x63, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x0f, 0x0a, 0x0d,
	0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a,
	0x0e, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xf7, 0x16, 0x0a, 0x10, 0x53, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x52, 0x70, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x2c,
	0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x22, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61,
	0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x85, 0x01, 0x0a, 0x1c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x74, 0x73, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x44, 0x75, 0x74, 0x73, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70,
	0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x75, 0x74, 0x73, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x67, 0x65, 0x74,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x10, 0x67,
	0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62,
	0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72,
	0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x75, 0x74, 0x73, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x2a, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x75, 0x74, 0x73, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x75, 0x74, 0x73, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x12, 0x28, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x61, 0x74,
	0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61,
	0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x67,
	0x65, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x5f, 0x73,
	0x75, 0x69, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72,
	0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x72, 0x75, 0x6e,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70,
	0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72,
	0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x5f,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x61, 0x74, 0x6c,
	0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x54,
	0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x6f, 0x6f, 0x6c,
	0x12, 0x1f, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x12, 0x22, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72,
	0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x75, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x61, 0x74,
	0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x64, 0x75, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x75, 0x74, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x75, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x61, 0x74,
	0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x74, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x61, 0x74, 0x6c,
	0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x74, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x61, 0x74,
	0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61,
	0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x64, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x61, 0x74,
	0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x78, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x73, 0x61, 0x74,
	0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x61, 0x74, 0x6c,
	0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x17, 0x67, 0x65, 0x74,
	0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x1e, 0x2e,
	0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88,
	0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x64, 0x12, 0x27,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x6f, 0x73, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69,
	0x75, 0x6d, 0x6f, 0x73, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0xd2, 0x41, 0x2a, 0x0a,
	0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x6f,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x23, 0x5a, 0x21, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x73, 0x61, 0x74, 0x6c, 0x61, 0x62, 0x2f, 0x73,
	0x61, 0x74, 0x6c, 0x61, 0x62, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_satlabrpc_proto_rawDescOnce sync.Once
	file_satlabrpc_proto_rawDescData = file_satlabrpc_proto_rawDesc
)

func file_satlabrpc_proto_rawDescGZIP() []byte {
	file_satlabrpc_proto_rawDescOnce.Do(func() {
		file_satlabrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_satlabrpc_proto_rawDescData)
	})
	return file_satlabrpc_proto_rawDescData
}

var file_satlabrpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_satlabrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_satlabrpc_proto_goTypes = []interface{}{
	(BuildItem_BuildStatus)(0),                // 0: satlabrpcserver.BuildItem.BuildStatus
	(*ListBuildTargetsRequest)(nil),           // 1: satlabrpcserver.ListBuildTargetsRequest
	(*ListBuildTargetsResponse)(nil),          // 2: satlabrpcserver.ListBuildTargetsResponse
	(*BuildItem)(nil),                         // 3: satlabrpcserver.BuildItem
	(*ListMilestonesRequest)(nil),             // 4: satlabrpcserver.ListMilestonesRequest
	(*ListMilestonesResponse)(nil),            // 5: satlabrpcserver.ListMilestonesResponse
	(*ListAccessibleModelsRequest)(nil),       // 6: satlabrpcserver.ListAccessibleModelsRequest
	(*Model)(nil),                             // 7: satlabrpcserver.Model
	(*ListAccessibleModelsResponse)(nil),      // 8: satlabrpcserver.ListAccessibleModelsResponse
	(*ListBuildVersionsRequest)(nil),          // 9: satlabrpcserver.ListBuildVersionsRequest
	(*ListBuildVersionsResponse)(nil),         // 10: satlabrpcserver.ListBuildVersionsResponse
	(*StageBuildRequest)(nil),                 // 11: satlabrpcserver.StageBuildRequest
	(*StageBuildResponse)(nil),                // 12: satlabrpcserver.StageBuildResponse
	(*ListConnectedDutsFirmwareRequest)(nil),  // 13: satlabrpcserver.ListConnectedDutsFirmwareRequest
	(*ConnectedDutFirmwareInfo)(nil),          // 14: satlabrpcserver.ConnectedDutFirmwareInfo
	(*ListConnectedDutsFirmwareResponse)(nil), // 15: satlabrpcserver.ListConnectedDutsFirmwareResponse
	(*GetSystemInfoRequest)(nil),              // 16: satlabrpcserver.GetSystemInfoRequest
	(*GetSystemInfoResponse)(nil),             // 17: satlabrpcserver.GetSystemInfoResponse
	(*GetPeripheralInformationRequest)(nil),   // 18: satlabrpcserver.GetPeripheralInformationRequest
	(*GetPeripheralInformationResponse)(nil),  // 19: satlabrpcserver.GetPeripheralInformationResponse
	(*UpdateDutsFirmwareRequest)(nil),         // 20: satlabrpcserver.UpdateDutsFirmwareRequest
	(*FirmwareUpdateCommandOutput)(nil),       // 21: satlabrpcserver.FirmwareUpdateCommandOutput
	(*UpdateDutsFirmwareResponse)(nil),        // 22: satlabrpcserver.UpdateDutsFirmwareResponse
	(*RunSuiteRequest)(nil),                   // 23: satlabrpcserver.RunSuiteRequest
	(*RunSuiteResponse)(nil),                  // 24: satlabrpcserver.RunSuiteResponse
	(*GetVersionInfoRequest)(nil),             // 25: satlabrpcserver.GetVersionInfoRequest
	(*GetVersionInfoResponse)(nil),            // 26: satlabrpcserver.GetVersionInfoResponse
	(*AddPoolRequest)(nil),                    // 27: satlabrpcserver.AddPoolRequest
	(*AddPoolResponse)(nil),                   // 28: satlabrpcserver.AddPoolResponse
	(*UpdatePoolRequest)(nil),                 // 29: satlabrpcserver.UpdatePoolRequest
	(*UpdatePoolResponse)(nil),                // 30: satlabrpcserver.UpdatePoolResponse
	(*GetDutDetailRequest)(nil),               // 31: satlabrpcserver.GetDutDetailRequest
	(*StringListPair)(nil),                    // 32: satlabrpcserver.StringListPair
	(*GetDutDetailResponse)(nil),              // 33: satlabrpcserver.GetDutDetailResponse
	(*ListDutTasksRequest)(nil),               // 34: satlabrpcserver.ListDutTasksRequest
	(*Task)(nil),                              // 35: satlabrpcserver.Task
	(*ListDutTasksResponse)(nil),              // 36: satlabrpcserver.ListDutTasksResponse
	(*ListDutEventsRequest)(nil),              // 37: satlabrpcserver.ListDutEventsRequest
	(*BotEvent)(nil),                          // 38: satlabrpcserver.BotEvent
	(*ListDutEventsResponse)(nil),             // 39: satlabrpcserver.ListDutEventsResponse
	(*RunTestRequest)(nil),                    // 40: satlabrpcserver.RunTestRequest
	(*RunTestResponse)(nil),                   // 41: satlabrpcserver.RunTestResponse
	(*ListEnrolledDutsRequest)(nil),           // 42: satlabrpcserver.ListEnrolledDutsRequest
	(*Dut)(nil),                               // 43: satlabrpcserver.Dut
	(*ListEnrolledDutsResponse)(nil),          // 44: satlabrpcserver.ListEnrolledDutsResponse
	(*ListDutsRequest)(nil),                   // 45: satlabrpcserver.ListDutsRequest
	(*ListDutsResponse)(nil),                  // 46: satlabrpcserver.ListDutsResponse
	(*DeleteDutsRequest)(nil),                 // 47: satlabrpcserver.DeleteDutsRequest
	(*DeleteDutsResponse)(nil),                // 48: satlabrpcserver.DeleteDutsResponse
	(*GetNetworkInfoRequest)(nil),             // 49: satlabrpcserver.GetNetworkInfoRequest
	(*GetNetworkInfoResponse)(nil),            // 50: satlabrpcserver.GetNetworkInfoResponse
	(*AddDutsRequest)(nil),                    // 51: satlabrpcserver.AddDutsRequest
	(*AddDutsResponse)(nil),                   // 52: satlabrpcserver.AddDutsResponse
	(*ListTestPlansRequest)(nil),              // 53: satlabrpcserver.ListTestPlansRequest
	(*ListTestPlansResponse)(nil),             // 54: satlabrpcserver.ListTestPlansResponse
	(*RunTestPlanRequest)(nil),                // 55: satlabrpcserver.RunTestPlanRequest
	(*RunTestPlanResponse)(nil),               // 56: satlabrpcserver.RunTestPlanResponse
	(*GetTestPlanRequest)(nil),                // 57: satlabrpcserver.GetTestPlanRequest
	(*GetTestPlanResponse)(nil),               // 58: satlabrpcserver.GetTestPlanResponse
	(*SetCloudConfigurationRequest)(nil),      // 59: satlabrpcserver.SetCloudConfigurationRequest
	(*SetCloudConfigurationResponse)(nil),     // 60: satlabrpcserver.SetCloudConfigurationResponse
	(*GetCloudConfigurationRequest)(nil),      // 61: satlabrpcserver.GetCloudConfigurationRequest
	(*GetCloudConfigurationResponse)(nil),     // 62: satlabrpcserver.GetCloudConfigurationResponse
	(*RebootRequest)(nil),                     // 63: satlabrpcserver.RebootRequest
	(*RebootResponse)(nil),                    // 64: satlabrpcserver.RebootResponse
	(*UpdatePoolRequest_Item)(nil),            // 65: satlabrpcserver.UpdatePoolRequest.Item
	(*AddDutsRequest_Param)(nil),              // 66: satlabrpcserver.AddDutsRequest.Param
	(*AddDutsResponse_PassedData)(nil),        // 67: satlabrpcserver.AddDutsResponse.PassedData
	(*AddDutsResponse_FailedData)(nil),        // 68: satlabrpcserver.AddDutsResponse.FailedData
	(*timestamppb.Timestamp)(nil),             // 69: google.protobuf.Timestamp
	(*test_platform.Request_TestPlan)(nil),    // 70: test_platform.Request.TestPlan
	(*api.StartServodRequest)(nil),            // 71: chromiumos.test.api.StartServodRequest
	(*longrunning.Operation)(nil),             // 72: chromiumos.longrunning.Operation
}
var file_satlabrpc_proto_depIdxs = []int32{
	0,  // 0: satlabrpcserver.BuildItem.status:type_name -> satlabrpcserver.BuildItem.BuildStatus
	3,  // 1: satlabrpcserver.ListMilestonesResponse.milestones:type_name -> satlabrpcserver.BuildItem
	7,  // 2: satlabrpcserver.ListAccessibleModelsResponse.models:type_name -> satlabrpcserver.Model
	3,  // 3: satlabrpcserver.ListBuildVersionsResponse.build_versions:type_name -> satlabrpcserver.BuildItem
	14, // 4: satlabrpcserver.ListConnectedDutsFirmwareResponse.duts:type_name -> satlabrpcserver.ConnectedDutFirmwareInfo
	69, // 5: satlabrpcserver.GetSystemInfoResponse.start_time:type_name -> google.protobuf.Timestamp
	21, // 6: satlabrpcserver.UpdateDutsFirmwareResponse.outputs:type_name -> satlabrpcserver.FirmwareUpdateCommandOutput
	65, // 7: satlabrpcserver.UpdatePoolRequest.items:type_name -> satlabrpcserver.UpdatePoolRequest.Item
	69, // 8: satlabrpcserver.GetDutDetailResponse.first_seen_ts:type_name -> google.protobuf.Timestamp
	69, // 9: satlabrpcserver.GetDutDetailResponse.last_seen_ts:type_name -> google.protobuf.Timestamp
	32, // 10: satlabrpcserver.GetDutDetailResponse.dimensions:type_name -> satlabrpcserver.StringListPair
	69, // 11: satlabrpcserver.Task.start_at:type_name -> google.protobuf.Timestamp
	35, // 12: satlabrpcserver.ListDutTasksResponse.tasks:type_name -> satlabrpcserver.Task
	69, // 13: satlabrpcserver.BotEvent.created_at:type_name -> google.protobuf.Timestamp
	38, // 14: satlabrpcserver.ListDutEventsResponse.events:type_name -> satlabrpcserver.BotEvent
	43, // 15: satlabrpcserver.ListEnrolledDutsResponse.duts:type_name -> satlabrpcserver.Dut
	43, // 16: satlabrpcserver.ListDutsResponse.duts:type_name -> satlabrpcserver.Dut
	66, // 17: satlabrpcserver.AddDutsRequest.duts:type_name -> satlabrpcserver.AddDutsRequest.Param
	67, // 18: satlabrpcserver.AddDutsResponse.pass:type_name -> satlabrpcserver.AddDutsResponse.PassedData
	68, // 19: satlabrpcserver.AddDutsResponse.fail:type_name -> satlabrpcserver.AddDutsResponse.FailedData
	70, // 20: satlabrpcserver.GetTestPlanResponse.plan:type_name -> test_platform.Request.TestPlan
	6,  // 21: satlabrpcserver.SatlabRpcService.list_accessible_models:input_type -> satlabrpcserver.ListAccessibleModelsRequest
	9,  // 22: satlabrpcserver.SatlabRpcService.list_build_versions:input_type -> satlabrpcserver.ListBuildVersionsRequest
	11, // 23: satlabrpcserver.SatlabRpcService.stage_build:input_type -> satlabrpcserver.StageBuildRequest
	13, // 24: satlabrpcserver.SatlabRpcService.list_connected_duts_firmware:input_type -> satlabrpcserver.ListConnectedDutsFirmwareRequest
	16, // 25: satlabrpcserver.SatlabRpcService.get_system_info:input_type -> satlabrpcserver.GetSystemInfoRequest
	25, // 26: satlabrpcserver.SatlabRpcService.get_version_info:input_type -> satlabrpcserver.GetVersionInfoRequest
	49, // 27: satlabrpcserver.SatlabRpcService.get_network_info:input_type -> satlabrpcserver.GetNetworkInfoRequest
	18, // 28: satlabrpcserver.SatlabRpcService.get_peripheral_information:input_type -> satlabrpcserver.GetPeripheralInformationRequest
	20, // 29: satlabrpcserver.SatlabRpcService.update_duts_firmware:input_type -> satlabrpcserver.UpdateDutsFirmwareRequest
	1,  // 30: satlabrpcserver.SatlabRpcService.list_build_targets:input_type -> satlabrpcserver.ListBuildTargetsRequest
	4,  // 31: satlabrpcserver.SatlabRpcService.list_milestones:input_type -> satlabrpcserver.ListMilestonesRequest
	53, // 32: satlabrpcserver.SatlabRpcService.list_test_plans:input_type -> satlabrpcserver.ListTestPlansRequest
	57, // 33: satlabrpcserver.SatlabRpcService.get_test_plan:input_type -> satlabrpcserver.GetTestPlanRequest
	23, // 34: satlabrpcserver.SatlabRpcService.run_suite:input_type -> satlabrpcserver.RunSuiteRequest
	40, // 35: satlabrpcserver.SatlabRpcService.run_test:input_type -> satlabrpcserver.RunTestRequest
	55, // 36: satlabrpcserver.SatlabRpcService.run_test_plan:input_type -> satlabrpcserver.RunTestPlanRequest
	27, // 37: satlabrpcserver.SatlabRpcService.add_pool:input_type -> satlabrpcserver.AddPoolRequest
	29, // 38: satlabrpcserver.SatlabRpcService.update_pool:input_type -> satlabrpcserver.UpdatePoolRequest
	47, // 39: satlabrpcserver.SatlabRpcService.delete_duts:input_type -> satlabrpcserver.DeleteDutsRequest
	51, // 40: satlabrpcserver.SatlabRpcService.add_duts:input_type -> satlabrpcserver.AddDutsRequest
	31, // 41: satlabrpcserver.SatlabRpcService.get_dut_detail:input_type -> satlabrpcserver.GetDutDetailRequest
	34, // 42: satlabrpcserver.SatlabRpcService.list_dut_tasks:input_type -> satlabrpcserver.ListDutTasksRequest
	37, // 43: satlabrpcserver.SatlabRpcService.list_dut_events:input_type -> satlabrpcserver.ListDutEventsRequest
	42, // 44: satlabrpcserver.SatlabRpcService.list_enrolled_duts:input_type -> satlabrpcserver.ListEnrolledDutsRequest
	45, // 45: satlabrpcserver.SatlabRpcService.list_duts:input_type -> satlabrpcserver.ListDutsRequest
	59, // 46: satlabrpcserver.SatlabRpcService.set_cloud_configuration:input_type -> satlabrpcserver.SetCloudConfigurationRequest
	61, // 47: satlabrpcserver.SatlabRpcService.get_cloud_configuration:input_type -> satlabrpcserver.GetCloudConfigurationRequest
	63, // 48: satlabrpcserver.SatlabRpcService.reboot:input_type -> satlabrpcserver.RebootRequest
	71, // 49: satlabrpcserver.SatlabRpcService.StartServod:input_type -> chromiumos.test.api.StartServodRequest
	8,  // 50: satlabrpcserver.SatlabRpcService.list_accessible_models:output_type -> satlabrpcserver.ListAccessibleModelsResponse
	10, // 51: satlabrpcserver.SatlabRpcService.list_build_versions:output_type -> satlabrpcserver.ListBuildVersionsResponse
	12, // 52: satlabrpcserver.SatlabRpcService.stage_build:output_type -> satlabrpcserver.StageBuildResponse
	15, // 53: satlabrpcserver.SatlabRpcService.list_connected_duts_firmware:output_type -> satlabrpcserver.ListConnectedDutsFirmwareResponse
	17, // 54: satlabrpcserver.SatlabRpcService.get_system_info:output_type -> satlabrpcserver.GetSystemInfoResponse
	26, // 55: satlabrpcserver.SatlabRpcService.get_version_info:output_type -> satlabrpcserver.GetVersionInfoResponse
	50, // 56: satlabrpcserver.SatlabRpcService.get_network_info:output_type -> satlabrpcserver.GetNetworkInfoResponse
	19, // 57: satlabrpcserver.SatlabRpcService.get_peripheral_information:output_type -> satlabrpcserver.GetPeripheralInformationResponse
	22, // 58: satlabrpcserver.SatlabRpcService.update_duts_firmware:output_type -> satlabrpcserver.UpdateDutsFirmwareResponse
	2,  // 59: satlabrpcserver.SatlabRpcService.list_build_targets:output_type -> satlabrpcserver.ListBuildTargetsResponse
	5,  // 60: satlabrpcserver.SatlabRpcService.list_milestones:output_type -> satlabrpcserver.ListMilestonesResponse
	54, // 61: satlabrpcserver.SatlabRpcService.list_test_plans:output_type -> satlabrpcserver.ListTestPlansResponse
	58, // 62: satlabrpcserver.SatlabRpcService.get_test_plan:output_type -> satlabrpcserver.GetTestPlanResponse
	24, // 63: satlabrpcserver.SatlabRpcService.run_suite:output_type -> satlabrpcserver.RunSuiteResponse
	41, // 64: satlabrpcserver.SatlabRpcService.run_test:output_type -> satlabrpcserver.RunTestResponse
	56, // 65: satlabrpcserver.SatlabRpcService.run_test_plan:output_type -> satlabrpcserver.RunTestPlanResponse
	28, // 66: satlabrpcserver.SatlabRpcService.add_pool:output_type -> satlabrpcserver.AddPoolResponse
	30, // 67: satlabrpcserver.SatlabRpcService.update_pool:output_type -> satlabrpcserver.UpdatePoolResponse
	48, // 68: satlabrpcserver.SatlabRpcService.delete_duts:output_type -> satlabrpcserver.DeleteDutsResponse
	52, // 69: satlabrpcserver.SatlabRpcService.add_duts:output_type -> satlabrpcserver.AddDutsResponse
	33, // 70: satlabrpcserver.SatlabRpcService.get_dut_detail:output_type -> satlabrpcserver.GetDutDetailResponse
	36, // 71: satlabrpcserver.SatlabRpcService.list_dut_tasks:output_type -> satlabrpcserver.ListDutTasksResponse
	39, // 72: satlabrpcserver.SatlabRpcService.list_dut_events:output_type -> satlabrpcserver.ListDutEventsResponse
	44, // 73: satlabrpcserver.SatlabRpcService.list_enrolled_duts:output_type -> satlabrpcserver.ListEnrolledDutsResponse
	46, // 74: satlabrpcserver.SatlabRpcService.list_duts:output_type -> satlabrpcserver.ListDutsResponse
	60, // 75: satlabrpcserver.SatlabRpcService.set_cloud_configuration:output_type -> satlabrpcserver.SetCloudConfigurationResponse
	62, // 76: satlabrpcserver.SatlabRpcService.get_cloud_configuration:output_type -> satlabrpcserver.GetCloudConfigurationResponse
	64, // 77: satlabrpcserver.SatlabRpcService.reboot:output_type -> satlabrpcserver.RebootResponse
	72, // 78: satlabrpcserver.SatlabRpcService.StartServod:output_type -> chromiumos.longrunning.Operation
	50, // [50:79] is the sub-list for method output_type
	21, // [21:50] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_satlabrpc_proto_init() }
func file_satlabrpc_proto_init() {
	if File_satlabrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_satlabrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBuildTargetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBuildTargetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMilestonesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMilestonesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccessibleModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccessibleModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBuildVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBuildVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageBuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageBuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectedDutsFirmwareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedDutFirmwareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectedDutsFirmwareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeripheralInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeripheralInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDutsFirmwareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirmwareUpdateCommandOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDutsFirmwareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSuiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSuiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDutDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringListPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDutDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnrolledDutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnrolledDutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDutsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestPlansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestPlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTestPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTestPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCloudConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCloudConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCloudConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCloudConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoolRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDutsRequest_Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDutsResponse_PassedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satlabrpc_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDutsResponse_FailedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_satlabrpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_satlabrpc_proto_goTypes,
		DependencyIndexes: file_satlabrpc_proto_depIdxs,
		EnumInfos:         file_satlabrpc_proto_enumTypes,
		MessageInfos:      file_satlabrpc_proto_msgTypes,
	}.Build()
	File_satlabrpc_proto = out.File
	file_satlabrpc_proto_rawDesc = nil
	file_satlabrpc_proto_goTypes = nil
	file_satlabrpc_proto_depIdxs = nil
}
