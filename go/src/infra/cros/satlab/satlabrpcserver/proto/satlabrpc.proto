// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
syntax = "proto3";

package satlabrpcserver;

option go_package = "infra/cros/satlab/satlabrpcserver"; // figure out what this should be

service SatlabRpcService {
  rpc list_build_targets (ListBuildTargetsRequest) returns (ListBuildTargetsResponse);
  rpc list_milestones (ListMilestonesRequest) returns (ListMilestonesResponse);
  rpc list_accessible_models (ListAccessibleModelsRequest) returns (ListAccessibleModelsResponse);
  rpc list_build_versions (ListBuildVersionsRequest) returns (ListBuildVersionsResponse);
  rpc stage_build (StageBuildRequest) returns (StageBuildResponse);
  rpc list_connected_duts_firmware(ListConnectedDutsFirmwareRequest) returns (ListConnectedDutsFirmwareResponse);
  rpc get_system_info(GetSystemInfoRequest) returns (GetSystemInfoResponse);
  rpc get_version_info(GetVersionInfoRequest) returns (GetVersionInfoResponse);
  rpc get_peripheral_information (GetPeripheralInformationRequest) returns (GetPeripheralInformationResponse);
  rpc update_duts_firmware (UpdateDutsFirmwareRequest)  returns (UpdateDutsFirmwareResponse);

  // services to run different types of test suites
  rpc run_suite (RunSuiteRequest) returns (RunSuiteResponse) {}

  // manage DUTs
  rpc add_pool (AddPoolRequest) returns (AddPoolResponse);
}

message ListBuildTargetsRequest {
}

// NEXT_TAG = 2
message ListBuildTargetsResponse {
  repeated string build_targets = 1;
}

// NEXT_TAG = 4
message BuildItem {
  // NEXT_TAG = 4
  enum BuildStatus {
    BUILD_STATUS_PASS = 0;
    BUILD_STATUS_FAIL = 1;
    BUILD_STATUS_RUNNING = 2;
    BUILD_STATUS_ABORTED = 3;
  }
  string value = 1;
  bool is_staged = 2;
  BuildStatus status = 3;
}

// NEXT_TAG = 3
message ListMilestonesRequest {
  string board = 1;
  string model = 2;
}

// NEXT_TAG = 3
message ListMilestonesResponse {
  repeated BuildItem milestones = 1;
}

// NEXT_TAG = 2
message ListAccessibleModelsRequest {
  string board = 1;
}

// NEXT_TAG = 3
message Model {
  string name = 1;
  repeated string boards = 2;
}

// NEXT_TAG = 2
message ListAccessibleModelsResponse {
  repeated Model models = 1;
}

// NEXT_TAG = 4
message ListBuildVersionsRequest {
  string board = 1;
  string model = 2;
  int32 milestone = 3;
}

// NEXT_TAG = 2
message ListBuildVersionsResponse {
  repeated BuildItem build_versions = 1;
}

// NEXT_TAG = 4
message StageBuildRequest {
  string board = 1;
  string model = 2;
  string build_version = 3;
}

// NEXT_TAG = 2
message StageBuildResponse {
  string build_bucket = 1;
}

// NEXT_TAG = 1
message ListConnectedDutsFirmwareRequest {
}

// NEXT_TAG = 4
message ConnectedDutFirmwareInfo {
  string ip = 1;
  string current_firmware = 2;
  string update_firmware = 3;
}

// NEXT_TAG = 2
message ListConnectedDutsFirmwareResponse {
  repeated ConnectedDutFirmwareInfo duts = 1;
}

// NEXT_TAG = 1
message GetSystemInfoRequest {
}

// NEXT_TAG = 2
message GetSystemInfoResponse {
  float cpu_temperature = 1;
}

// NEXT_TAG = 2
message GetPeripheralInformationRequest {
  string dut_hostname = 1;
}

// NEXT_TAG = 2
message GetPeripheralInformationResponse {
  string json_info = 1;
}

// NEXT_TAG = 2
message UpdateDutsFirmwareRequest {
  repeated string ips = 1;
}

// NEXT_TAG = 3
message FirmwareUpdateCommandOutput {
  string ip = 1;
  string command_output = 2;
}

// NEXT_TAG = 2
message UpdateDutsFirmwareResponse {
  repeated FirmwareUpdateCommandOutput outputs = 1;
}


// NEXT_TAG = 7
message RunSuiteRequest {
  string suite = 1;
  string build_target = 2;
  string milestone = 3;
  string build_version = 4;
  string model = 5;
  string pool = 6;
}

// NEXT_TAG = 2
message RunSuiteResponse {
}

// NEXT_TAG = 2
message GetVersionInfoRequest {}

// NEXT_TAG = 7
message GetVersionInfoResponse {
  string version = 1;
  string chromeos_version = 2;
  string track = 3;
  string description = 4;
  string install_id = 5;
  string host_id = 6;
}

// NEXT_TAG = 3
message AddPoolRequest {
  repeated string addresses = 1;
  string pool = 2;
}

// NEXT_TAG = 1
message AddPoolResponse {}
