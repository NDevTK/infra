// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.7
// source: infra/cros/fleetcost/api/service.proto

package fleetcostpb

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PingRequest intentionally contains nothing.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{0}
}

// PingResponse intentionally contains nothing.
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{1}
}

// PingUFSRequest intentionally contains nothing.
type PingUFSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingUFSRequest) Reset() {
	*x = PingUFSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingUFSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingUFSRequest) ProtoMessage() {}

func (x *PingUFSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingUFSRequest.ProtoReflect.Descriptor instead.
func (*PingUFSRequest) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{2}
}

// PingUFSResponse contains information about the request sent to and returned from UFS.
//
// This RPC is intended solely for diagnostic purposes.
type PingUFSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ufs_request is the request to UFS, encoded as JSON.
	UfsRequest *anypb.Any `protobuf:"bytes,1,opt,name=ufs_request,json=ufsRequest,proto3" json:"ufs_request,omitempty"`
	// ufs_response is the response from UFS, encoded as JSON.
	UfsResponse *anypb.Any `protobuf:"bytes,2,opt,name=ufs_response,json=ufsResponse,proto3" json:"ufs_response,omitempty"`
	// ufs_error is the error we encountered from trying to ping UFS.
	UfsError string `protobuf:"bytes,3,opt,name=ufs_error,json=ufsError,proto3" json:"ufs_error,omitempty"`
	// ufs_hostname is the hostname of the UFS instance that we contacted.
	UfsHostname string `protobuf:"bytes,4,opt,name=ufs_hostname,json=ufsHostname,proto3" json:"ufs_hostname,omitempty"`
}

func (x *PingUFSResponse) Reset() {
	*x = PingUFSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingUFSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingUFSResponse) ProtoMessage() {}

func (x *PingUFSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingUFSResponse.ProtoReflect.Descriptor instead.
func (*PingUFSResponse) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{3}
}

func (x *PingUFSResponse) GetUfsRequest() *anypb.Any {
	if x != nil {
		return x.UfsRequest
	}
	return nil
}

func (x *PingUFSResponse) GetUfsResponse() *anypb.Any {
	if x != nil {
		return x.UfsResponse
	}
	return nil
}

func (x *PingUFSResponse) GetUfsError() string {
	if x != nil {
		return x.UfsError
	}
	return ""
}

func (x *PingUFSResponse) GetUfsHostname() string {
	if x != nil {
		return x.UfsHostname
	}
	return ""
}

// CreateCostIndicatorRequest creates a new cost indicator.
type CreateCostIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostIndicator *CostIndicator `protobuf:"bytes,1,opt,name=cost_indicator,json=costIndicator,proto3" json:"cost_indicator,omitempty"`
}

func (x *CreateCostIndicatorRequest) Reset() {
	*x = CreateCostIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCostIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCostIndicatorRequest) ProtoMessage() {}

func (x *CreateCostIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCostIndicatorRequest.ProtoReflect.Descriptor instead.
func (*CreateCostIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCostIndicatorRequest) GetCostIndicator() *CostIndicator {
	if x != nil {
		return x.CostIndicator
	}
	return nil
}

// CreateCostIndicatorResponse contains the newly created CostIndicator.
type CreateCostIndicatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostIndicator *CostIndicator `protobuf:"bytes,1,opt,name=cost_indicator,json=costIndicator,proto3" json:"cost_indicator,omitempty"`
}

func (x *CreateCostIndicatorResponse) Reset() {
	*x = CreateCostIndicatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCostIndicatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCostIndicatorResponse) ProtoMessage() {}

func (x *CreateCostIndicatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCostIndicatorResponse.ProtoReflect.Descriptor instead.
func (*CreateCostIndicatorResponse) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCostIndicatorResponse) GetCostIndicator() *CostIndicator {
	if x != nil {
		return x.CostIndicator
	}
	return nil
}

// ListCostIndicatorsRequest lists the cost indicators.
type ListCostIndicatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(gregorynisbet): Add filters here.
	PageSize int32 `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListCostIndicatorsRequest) Reset() {
	*x = ListCostIndicatorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCostIndicatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCostIndicatorsRequest) ProtoMessage() {}

func (x *ListCostIndicatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCostIndicatorsRequest.ProtoReflect.Descriptor instead.
func (*ListCostIndicatorsRequest) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListCostIndicatorsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// ListCostIndicatorsResponse lists cost indicators
type ListCostIndicatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostIndicator []*CostIndicator `protobuf:"bytes,1,rep,name=cost_indicator,json=costIndicator,proto3" json:"cost_indicator,omitempty"`
}

func (x *ListCostIndicatorsResponse) Reset() {
	*x = ListCostIndicatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCostIndicatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCostIndicatorsResponse) ProtoMessage() {}

func (x *ListCostIndicatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCostIndicatorsResponse.ProtoReflect.Descriptor instead.
func (*ListCostIndicatorsResponse) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListCostIndicatorsResponse) GetCostIndicator() []*CostIndicator {
	if x != nil {
		return x.CostIndicator
	}
	return nil
}

// UpdateCostIndicatorRequest updates a cost indicator.
type UpdateCostIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostIndicator *CostIndicator `protobuf:"bytes,1,opt,name=cost_indicator,json=costIndicator,proto3" json:"cost_indicator,omitempty"`
	// The list of fields to be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateCostIndicatorRequest) Reset() {
	*x = UpdateCostIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCostIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCostIndicatorRequest) ProtoMessage() {}

func (x *UpdateCostIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCostIndicatorRequest.ProtoReflect.Descriptor instead.
func (*UpdateCostIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCostIndicatorRequest) GetCostIndicator() *CostIndicator {
	if x != nil {
		return x.CostIndicator
	}
	return nil
}

func (x *UpdateCostIndicatorRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateCostIndicatorResponse contains a CostIndicator.
type UpdateCostIndicatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostIndicator *CostIndicator `protobuf:"bytes,1,opt,name=cost_indicator,json=costIndicator,proto3" json:"cost_indicator,omitempty"`
}

func (x *UpdateCostIndicatorResponse) Reset() {
	*x = UpdateCostIndicatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCostIndicatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCostIndicatorResponse) ProtoMessage() {}

func (x *UpdateCostIndicatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCostIndicatorResponse.ProtoReflect.Descriptor instead.
func (*UpdateCostIndicatorResponse) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCostIndicatorResponse) GetCostIndicator() *CostIndicator {
	if x != nil {
		return x.CostIndicator
	}
	return nil
}

// GetCostResultRequest gets information about the cost of a device.
type GetCostResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId    string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Hostname    string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	ForceUpdate bool   `protobuf:"varint,3,opt,name=force_update,json=forceUpdate,proto3" json:"force_update,omitempty"`
}

func (x *GetCostResultRequest) Reset() {
	*x = GetCostResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCostResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCostResultRequest) ProtoMessage() {}

func (x *GetCostResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCostResultRequest.ProtoReflect.Descriptor instead.
func (*GetCostResultRequest) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetCostResultRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetCostResultRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *GetCostResultRequest) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

// GetCostResultResponse is the cost detail information obtained by GetCostResult.
type GetCostResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CostResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetCostResultResponse) Reset() {
	*x = GetCostResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCostResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCostResultResponse) ProtoMessage() {}

func (x *GetCostResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCostResultResponse.ProtoReflect.Descriptor instead.
func (*GetCostResultResponse) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetCostResultResponse) GetResult() *CostResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_infra_cros_fleetcost_api_service_proto protoreflect.FileDescriptor

var file_infra_cros_fleetcost_api_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65,
	0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f,
	0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x25, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x67,
	0x55, 0x46, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x50,
	0x69, 0x6e, 0x67, 0x55, 0x46, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x0b, 0x75, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x75, 0x66, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x75, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x0b, 0x75, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x66, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x66, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x66, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x66, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0e,
	0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x22, 0x54, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x37, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x53, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x95, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22,
	0x54, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x72, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xa6, 0x06, 0x0a, 0x09, 0x46, 0x6c, 0x65, 0x65,
	0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x68, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x55, 0x46, 0x53, 0x12, 0x22, 0x2e,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x55, 0x46, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x55, 0x46, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x0c,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x2d, 0x75, 0x66, 0x73, 0x12, 0x99, 0x01, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x95, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x2d, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x63, 0x6f, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63,
	0x6f, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2d, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x99, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x63, 0x6f,
	0x73, 0x74, 0x2d, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x81, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63,
	0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x65, 0x6f, 0x73, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2d, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x42, 0x26, 0x5a, 0x24, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_cros_fleetcost_api_service_proto_rawDescOnce sync.Once
	file_infra_cros_fleetcost_api_service_proto_rawDescData = file_infra_cros_fleetcost_api_service_proto_rawDesc
)

func file_infra_cros_fleetcost_api_service_proto_rawDescGZIP() []byte {
	file_infra_cros_fleetcost_api_service_proto_rawDescOnce.Do(func() {
		file_infra_cros_fleetcost_api_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_cros_fleetcost_api_service_proto_rawDescData)
	})
	return file_infra_cros_fleetcost_api_service_proto_rawDescData
}

var file_infra_cros_fleetcost_api_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_infra_cros_fleetcost_api_service_proto_goTypes = []interface{}{
	(*PingRequest)(nil),                 // 0: chromeos.fleetcost.PingRequest
	(*PingResponse)(nil),                // 1: chromeos.fleetcost.PingResponse
	(*PingUFSRequest)(nil),              // 2: chromeos.fleetcost.PingUFSRequest
	(*PingUFSResponse)(nil),             // 3: chromeos.fleetcost.PingUFSResponse
	(*CreateCostIndicatorRequest)(nil),  // 4: chromeos.fleetcost.CreateCostIndicatorRequest
	(*CreateCostIndicatorResponse)(nil), // 5: chromeos.fleetcost.CreateCostIndicatorResponse
	(*ListCostIndicatorsRequest)(nil),   // 6: chromeos.fleetcost.ListCostIndicatorsRequest
	(*ListCostIndicatorsResponse)(nil),  // 7: chromeos.fleetcost.ListCostIndicatorsResponse
	(*UpdateCostIndicatorRequest)(nil),  // 8: chromeos.fleetcost.UpdateCostIndicatorRequest
	(*UpdateCostIndicatorResponse)(nil), // 9: chromeos.fleetcost.UpdateCostIndicatorResponse
	(*GetCostResultRequest)(nil),        // 10: chromeos.fleetcost.GetCostResultRequest
	(*GetCostResultResponse)(nil),       // 11: chromeos.fleetcost.GetCostResultResponse
	(*anypb.Any)(nil),                   // 12: google.protobuf.Any
	(*CostIndicator)(nil),               // 13: CostIndicator
	(*fieldmaskpb.FieldMask)(nil),       // 14: google.protobuf.FieldMask
	(*CostResult)(nil),                  // 15: CostResult
}
var file_infra_cros_fleetcost_api_service_proto_depIdxs = []int32{
	12, // 0: chromeos.fleetcost.PingUFSResponse.ufs_request:type_name -> google.protobuf.Any
	12, // 1: chromeos.fleetcost.PingUFSResponse.ufs_response:type_name -> google.protobuf.Any
	13, // 2: chromeos.fleetcost.CreateCostIndicatorRequest.cost_indicator:type_name -> CostIndicator
	13, // 3: chromeos.fleetcost.CreateCostIndicatorResponse.cost_indicator:type_name -> CostIndicator
	13, // 4: chromeos.fleetcost.ListCostIndicatorsResponse.cost_indicator:type_name -> CostIndicator
	13, // 5: chromeos.fleetcost.UpdateCostIndicatorRequest.cost_indicator:type_name -> CostIndicator
	14, // 6: chromeos.fleetcost.UpdateCostIndicatorRequest.update_mask:type_name -> google.protobuf.FieldMask
	13, // 7: chromeos.fleetcost.UpdateCostIndicatorResponse.cost_indicator:type_name -> CostIndicator
	15, // 8: chromeos.fleetcost.GetCostResultResponse.result:type_name -> CostResult
	0,  // 9: chromeos.fleetcost.FleetCost.Ping:input_type -> chromeos.fleetcost.PingRequest
	2,  // 10: chromeos.fleetcost.FleetCost.PingUFS:input_type -> chromeos.fleetcost.PingUFSRequest
	4,  // 11: chromeos.fleetcost.FleetCost.CreateCostIndicator:input_type -> chromeos.fleetcost.CreateCostIndicatorRequest
	6,  // 12: chromeos.fleetcost.FleetCost.ListCostIndicators:input_type -> chromeos.fleetcost.ListCostIndicatorsRequest
	8,  // 13: chromeos.fleetcost.FleetCost.UpdateCostIndicator:input_type -> chromeos.fleetcost.UpdateCostIndicatorRequest
	10, // 14: chromeos.fleetcost.FleetCost.GetCostResult:input_type -> chromeos.fleetcost.GetCostResultRequest
	1,  // 15: chromeos.fleetcost.FleetCost.Ping:output_type -> chromeos.fleetcost.PingResponse
	3,  // 16: chromeos.fleetcost.FleetCost.PingUFS:output_type -> chromeos.fleetcost.PingUFSResponse
	5,  // 17: chromeos.fleetcost.FleetCost.CreateCostIndicator:output_type -> chromeos.fleetcost.CreateCostIndicatorResponse
	7,  // 18: chromeos.fleetcost.FleetCost.ListCostIndicators:output_type -> chromeos.fleetcost.ListCostIndicatorsResponse
	9,  // 19: chromeos.fleetcost.FleetCost.UpdateCostIndicator:output_type -> chromeos.fleetcost.UpdateCostIndicatorResponse
	11, // 20: chromeos.fleetcost.FleetCost.GetCostResult:output_type -> chromeos.fleetcost.GetCostResultResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_infra_cros_fleetcost_api_service_proto_init() }
func file_infra_cros_fleetcost_api_service_proto_init() {
	if File_infra_cros_fleetcost_api_service_proto != nil {
		return
	}
	file_infra_cros_fleetcost_api_indicator_proto_init()
	file_infra_cros_fleetcost_api_detail_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_infra_cros_fleetcost_api_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingUFSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingUFSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCostIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCostIndicatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCostIndicatorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCostIndicatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCostIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCostIndicatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCostResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_cros_fleetcost_api_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCostResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_cros_fleetcost_api_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_infra_cros_fleetcost_api_service_proto_goTypes,
		DependencyIndexes: file_infra_cros_fleetcost_api_service_proto_depIdxs,
		MessageInfos:      file_infra_cros_fleetcost_api_service_proto_msgTypes,
	}.Build()
	File_infra_cros_fleetcost_api_service_proto = out.File
	file_infra_cros_fleetcost_api_service_proto_rawDesc = nil
	file_infra_cros_fleetcost_api_service_proto_goTypes = nil
	file_infra_cros_fleetcost_api_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FleetCostClient is the client API for FleetCost service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FleetCostClient interface {
	// Ping does not send or receive any information. It just checks that the service is there.
	//
	// It can't be given any data and does not return anything especially useful.
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// PingUFS pings UFS and returns what it did.
	PingUFS(ctx context.Context, in *PingUFSRequest, opts ...grpc.CallOption) (*PingUFSResponse, error)
	// CreateCostIndicator creates a new cost indicator.
	CreateCostIndicator(ctx context.Context, in *CreateCostIndicatorRequest, opts ...grpc.CallOption) (*CreateCostIndicatorResponse, error)
	// ListCostIndicators creates a new cost indicator.
	ListCostIndicators(ctx context.Context, in *ListCostIndicatorsRequest, opts ...grpc.CallOption) (*ListCostIndicatorsResponse, error)
	// UpdateCostIndicator updates an existing cost indicator.
	UpdateCostIndicator(ctx context.Context, in *UpdateCostIndicatorRequest, opts ...grpc.CallOption) (*UpdateCostIndicatorResponse, error)
	// GetCostResult gets the cost breakdown for a given device.
	GetCostResult(ctx context.Context, in *GetCostResultRequest, opts ...grpc.CallOption) (*GetCostResultResponse, error)
}
type fleetCostPRPCClient struct {
	client *prpc.Client
}

func NewFleetCostPRPCClient(client *prpc.Client) FleetCostClient {
	return &fleetCostPRPCClient{client}
}

func (c *fleetCostPRPCClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.client.Call(ctx, "chromeos.fleetcost.FleetCost", "Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostPRPCClient) PingUFS(ctx context.Context, in *PingUFSRequest, opts ...grpc.CallOption) (*PingUFSResponse, error) {
	out := new(PingUFSResponse)
	err := c.client.Call(ctx, "chromeos.fleetcost.FleetCost", "PingUFS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostPRPCClient) CreateCostIndicator(ctx context.Context, in *CreateCostIndicatorRequest, opts ...grpc.CallOption) (*CreateCostIndicatorResponse, error) {
	out := new(CreateCostIndicatorResponse)
	err := c.client.Call(ctx, "chromeos.fleetcost.FleetCost", "CreateCostIndicator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostPRPCClient) ListCostIndicators(ctx context.Context, in *ListCostIndicatorsRequest, opts ...grpc.CallOption) (*ListCostIndicatorsResponse, error) {
	out := new(ListCostIndicatorsResponse)
	err := c.client.Call(ctx, "chromeos.fleetcost.FleetCost", "ListCostIndicators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostPRPCClient) UpdateCostIndicator(ctx context.Context, in *UpdateCostIndicatorRequest, opts ...grpc.CallOption) (*UpdateCostIndicatorResponse, error) {
	out := new(UpdateCostIndicatorResponse)
	err := c.client.Call(ctx, "chromeos.fleetcost.FleetCost", "UpdateCostIndicator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostPRPCClient) GetCostResult(ctx context.Context, in *GetCostResultRequest, opts ...grpc.CallOption) (*GetCostResultResponse, error) {
	out := new(GetCostResultResponse)
	err := c.client.Call(ctx, "chromeos.fleetcost.FleetCost", "GetCostResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type fleetCostClient struct {
	cc grpc.ClientConnInterface
}

func NewFleetCostClient(cc grpc.ClientConnInterface) FleetCostClient {
	return &fleetCostClient{cc}
}

func (c *fleetCostClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/chromeos.fleetcost.FleetCost/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostClient) PingUFS(ctx context.Context, in *PingUFSRequest, opts ...grpc.CallOption) (*PingUFSResponse, error) {
	out := new(PingUFSResponse)
	err := c.cc.Invoke(ctx, "/chromeos.fleetcost.FleetCost/PingUFS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostClient) CreateCostIndicator(ctx context.Context, in *CreateCostIndicatorRequest, opts ...grpc.CallOption) (*CreateCostIndicatorResponse, error) {
	out := new(CreateCostIndicatorResponse)
	err := c.cc.Invoke(ctx, "/chromeos.fleetcost.FleetCost/CreateCostIndicator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostClient) ListCostIndicators(ctx context.Context, in *ListCostIndicatorsRequest, opts ...grpc.CallOption) (*ListCostIndicatorsResponse, error) {
	out := new(ListCostIndicatorsResponse)
	err := c.cc.Invoke(ctx, "/chromeos.fleetcost.FleetCost/ListCostIndicators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostClient) UpdateCostIndicator(ctx context.Context, in *UpdateCostIndicatorRequest, opts ...grpc.CallOption) (*UpdateCostIndicatorResponse, error) {
	out := new(UpdateCostIndicatorResponse)
	err := c.cc.Invoke(ctx, "/chromeos.fleetcost.FleetCost/UpdateCostIndicator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetCostClient) GetCostResult(ctx context.Context, in *GetCostResultRequest, opts ...grpc.CallOption) (*GetCostResultResponse, error) {
	out := new(GetCostResultResponse)
	err := c.cc.Invoke(ctx, "/chromeos.fleetcost.FleetCost/GetCostResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FleetCostServer is the server API for FleetCost service.
type FleetCostServer interface {
	// Ping does not send or receive any information. It just checks that the service is there.
	//
	// It can't be given any data and does not return anything especially useful.
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// PingUFS pings UFS and returns what it did.
	PingUFS(context.Context, *PingUFSRequest) (*PingUFSResponse, error)
	// CreateCostIndicator creates a new cost indicator.
	CreateCostIndicator(context.Context, *CreateCostIndicatorRequest) (*CreateCostIndicatorResponse, error)
	// ListCostIndicators creates a new cost indicator.
	ListCostIndicators(context.Context, *ListCostIndicatorsRequest) (*ListCostIndicatorsResponse, error)
	// UpdateCostIndicator updates an existing cost indicator.
	UpdateCostIndicator(context.Context, *UpdateCostIndicatorRequest) (*UpdateCostIndicatorResponse, error)
	// GetCostResult gets the cost breakdown for a given device.
	GetCostResult(context.Context, *GetCostResultRequest) (*GetCostResultResponse, error)
}

// UnimplementedFleetCostServer can be embedded to have forward compatible implementations.
type UnimplementedFleetCostServer struct {
}

func (*UnimplementedFleetCostServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedFleetCostServer) PingUFS(context.Context, *PingUFSRequest) (*PingUFSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingUFS not implemented")
}
func (*UnimplementedFleetCostServer) CreateCostIndicator(context.Context, *CreateCostIndicatorRequest) (*CreateCostIndicatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCostIndicator not implemented")
}
func (*UnimplementedFleetCostServer) ListCostIndicators(context.Context, *ListCostIndicatorsRequest) (*ListCostIndicatorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCostIndicators not implemented")
}
func (*UnimplementedFleetCostServer) UpdateCostIndicator(context.Context, *UpdateCostIndicatorRequest) (*UpdateCostIndicatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCostIndicator not implemented")
}
func (*UnimplementedFleetCostServer) GetCostResult(context.Context, *GetCostResultRequest) (*GetCostResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCostResult not implemented")
}

func RegisterFleetCostServer(s prpc.Registrar, srv FleetCostServer) {
	s.RegisterService(&_FleetCost_serviceDesc, srv)
}

func _FleetCost_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetCostServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chromeos.fleetcost.FleetCost/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetCostServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FleetCost_PingUFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingUFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetCostServer).PingUFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chromeos.fleetcost.FleetCost/PingUFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetCostServer).PingUFS(ctx, req.(*PingUFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FleetCost_CreateCostIndicator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCostIndicatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetCostServer).CreateCostIndicator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chromeos.fleetcost.FleetCost/CreateCostIndicator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetCostServer).CreateCostIndicator(ctx, req.(*CreateCostIndicatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FleetCost_ListCostIndicators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCostIndicatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetCostServer).ListCostIndicators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chromeos.fleetcost.FleetCost/ListCostIndicators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetCostServer).ListCostIndicators(ctx, req.(*ListCostIndicatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FleetCost_UpdateCostIndicator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCostIndicatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetCostServer).UpdateCostIndicator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chromeos.fleetcost.FleetCost/UpdateCostIndicator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetCostServer).UpdateCostIndicator(ctx, req.(*UpdateCostIndicatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FleetCost_GetCostResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCostResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetCostServer).GetCostResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chromeos.fleetcost.FleetCost/GetCostResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetCostServer).GetCostResult(ctx, req.(*GetCostResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FleetCost_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chromeos.fleetcost.FleetCost",
	HandlerType: (*FleetCostServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _FleetCost_Ping_Handler,
		},
		{
			MethodName: "PingUFS",
			Handler:    _FleetCost_PingUFS_Handler,
		},
		{
			MethodName: "CreateCostIndicator",
			Handler:    _FleetCost_CreateCostIndicator_Handler,
		},
		{
			MethodName: "ListCostIndicators",
			Handler:    _FleetCost_ListCostIndicators_Handler,
		},
		{
			MethodName: "UpdateCostIndicator",
			Handler:    _FleetCost_UpdateCostIndicator_Handler,
		},
		{
			MethodName: "GetCostResult",
			Handler:    _FleetCost_GetCostResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/cros/fleetcost/api/service.proto",
}
