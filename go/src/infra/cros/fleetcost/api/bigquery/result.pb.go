// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: infra/cros/fleetcost/api/bigquery/result.proto

package bqpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CostResult is a cached cost result.
//
// For simplicity, the cost result table will be partitioned by ingestion time, but
// there is no dedicated field for ingestion time in this schema.
type CostResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the hostname or device id of the entity with the cost associated with it, as appropriate.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace is the namespace that the record resides in, valid namespaces are:
	// - OS
	// - BROWSER
	// - ANDROID
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// hourly_total_cost is the total hourly cost.
	HourlyTotalCost float64 `protobuf:"fixed64,3,opt,name=hourly_total_cost,json=hourlyTotalCost,proto3" json:"hourly_total_cost,omitempty"`
	// hourly_dedicated_cost is the cost for this specific device.
	HourlyDedicatedCost float64 `protobuf:"fixed64,4,opt,name=hourly_dedicated_cost,json=hourlyDedicatedCost,proto3" json:"hourly_dedicated_cost,omitempty"`
	// hourly_shared_cost is the pro-rated share of costs that aren't specific to this device.
	HourlySharedCost float64 `protobuf:"fixed64,5,opt,name=hourly_shared_cost,json=hourlySharedCost,proto3" json:"hourly_shared_cost,omitempty"`
	// hourly_cloud_cost is the pro-rated share of the cloud costs.
	HourlyCloudCost float64 `protobuf:"fixed64,6,opt,name=hourly_cloud_cost,json=hourlyCloudCost,proto3" json:"hourly_cloud_cost,omitempty"`
}

func (x *CostResult) Reset() {
	*x = CostResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_fleetcost_api_bigquery_result_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostResult) ProtoMessage() {}

func (x *CostResult) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_fleetcost_api_bigquery_result_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostResult.ProtoReflect.Descriptor instead.
func (*CostResult) Descriptor() ([]byte, []int) {
	return file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescGZIP(), []int{0}
}

func (x *CostResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CostResult) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CostResult) GetHourlyTotalCost() float64 {
	if x != nil {
		return x.HourlyTotalCost
	}
	return 0
}

func (x *CostResult) GetHourlyDedicatedCost() float64 {
	if x != nil {
		return x.HourlyDedicatedCost
	}
	return 0
}

func (x *CostResult) GetHourlySharedCost() float64 {
	if x != nil {
		return x.HourlySharedCost
	}
	return 0
}

func (x *CostResult) GetHourlyCloudCost() float64 {
	if x != nil {
		return x.HourlyCloudCost
	}
	return 0
}

var File_infra_cros_fleetcost_api_bigquery_result_proto protoreflect.FileDescriptor

var file_infra_cros_fleetcost_api_bigquery_result_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x71, 0x70, 0x62, 0x22, 0xf8, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0f, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x13, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x10, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x5f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x42,
	0x28, 0x5a, 0x26, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x66, 0x6c,
	0x65, 0x65, 0x74, 0x63, 0x6f, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x67, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x3b, 0x62, 0x71, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescOnce sync.Once
	file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescData = file_infra_cros_fleetcost_api_bigquery_result_proto_rawDesc
)

func file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescGZIP() []byte {
	file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescOnce.Do(func() {
		file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescData)
	})
	return file_infra_cros_fleetcost_api_bigquery_result_proto_rawDescData
}

var file_infra_cros_fleetcost_api_bigquery_result_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_infra_cros_fleetcost_api_bigquery_result_proto_goTypes = []interface{}{
	(*CostResult)(nil), // 0: fleetcost.api.bqpb.CostResult
}
var file_infra_cros_fleetcost_api_bigquery_result_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_infra_cros_fleetcost_api_bigquery_result_proto_init() }
func file_infra_cros_fleetcost_api_bigquery_result_proto_init() {
	if File_infra_cros_fleetcost_api_bigquery_result_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_cros_fleetcost_api_bigquery_result_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CostResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_cros_fleetcost_api_bigquery_result_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_cros_fleetcost_api_bigquery_result_proto_goTypes,
		DependencyIndexes: file_infra_cros_fleetcost_api_bigquery_result_proto_depIdxs,
		MessageInfos:      file_infra_cros_fleetcost_api_bigquery_result_proto_msgTypes,
	}.Build()
	File_infra_cros_fleetcost_api_bigquery_result_proto = out.File
	file_infra_cros_fleetcost_api_bigquery_result_proto_rawDesc = nil
	file_infra_cros_fleetcost_api_bigquery_result_proto_goTypes = nil
	file_infra_cros_fleetcost_api_bigquery_result_proto_depIdxs = nil
}
