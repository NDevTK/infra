// Copyright 2021 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: infra/cros/recovery/config/planpb/metric_config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UploadPolicy specifies what to do with the metrics created by the action in question.
type MetricsConfig_UploadPolicy int32

const (
	// DEFAULT_UPLOAD_POLICY uploads everything.
	MetricsConfig_DEFAULT_UPLOAD_POLICY MetricsConfig_UploadPolicy = 0
	// SKIP_ALL skips uploading all metrics.
	MetricsConfig_SKIP_ALL MetricsConfig_UploadPolicy = 1
	// UPLOAD_ON_ERROR only uploads a metric if the action was unsuccessful in some way.
	//
	// TODO(gregorynisbet): Add in another policy to upload ALL errors and 1% of successes to make it possible to
	//
	//	recover the true success rate for actions that have been throttled in this way.
	//
	// TODO(gregorynisbet): Consider making this or some other kind of "throttled" policy the default policy.
	MetricsConfig_UPLOAD_ON_ERROR MetricsConfig_UploadPolicy = 2
)

// Enum value maps for MetricsConfig_UploadPolicy.
var (
	MetricsConfig_UploadPolicy_name = map[int32]string{
		0: "DEFAULT_UPLOAD_POLICY",
		1: "SKIP_ALL",
		2: "UPLOAD_ON_ERROR",
	}
	MetricsConfig_UploadPolicy_value = map[string]int32{
		"DEFAULT_UPLOAD_POLICY": 0,
		"SKIP_ALL":              1,
		"UPLOAD_ON_ERROR":       2,
	}
)

func (x MetricsConfig_UploadPolicy) Enum() *MetricsConfig_UploadPolicy {
	p := new(MetricsConfig_UploadPolicy)
	*p = x
	return p
}

func (x MetricsConfig_UploadPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricsConfig_UploadPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_infra_cros_recovery_config_planpb_metric_config_proto_enumTypes[0].Descriptor()
}

func (MetricsConfig_UploadPolicy) Type() protoreflect.EnumType {
	return &file_infra_cros_recovery_config_planpb_metric_config_proto_enumTypes[0]
}

func (x MetricsConfig_UploadPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricsConfig_UploadPolicy.Descriptor instead.
func (MetricsConfig_UploadPolicy) EnumDescriptor() ([]byte, []int) {
	return file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescGZIP(), []int{0, 0}
}

// MetricsConfig configures a single action.
type MetricsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// upload_policy is the policy for uploading the individual action.
	UploadPolicy MetricsConfig_UploadPolicy `protobuf:"varint,1,opt,name=upload_policy,json=uploadPolicy,proto3,enum=chromeos.recovery.MetricsConfig_UploadPolicy" json:"upload_policy,omitempty"`
}

func (x *MetricsConfig) Reset() {
	*x = MetricsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_cros_recovery_config_planpb_metric_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsConfig) ProtoMessage() {}

func (x *MetricsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_infra_cros_recovery_config_planpb_metric_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsConfig.ProtoReflect.Descriptor instead.
func (*MetricsConfig) Descriptor() ([]byte, []int) {
	return file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescGZIP(), []int{0}
}

func (x *MetricsConfig) GetUploadPolicy() MetricsConfig_UploadPolicy {
	if x != nil {
		return x.UploadPolicy
	}
	return MetricsConfig_DEFAULT_UPLOAD_POLICY
}

var File_infra_cros_recovery_config_planpb_metric_config_proto protoreflect.FileDescriptor

var file_infra_cros_recovery_config_planpb_metric_config_proto_rawDesc = []byte{
	0x0a, 0x35, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x6c, 0x61,
	0x6e, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x0d,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x22, 0x4c, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x50, 0x4c, 0x4f,
	0x41, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x4b, 0x49, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x50, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x42, 0x23,
	0x5a, 0x21, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescOnce sync.Once
	file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescData = file_infra_cros_recovery_config_planpb_metric_config_proto_rawDesc
)

func file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescGZIP() []byte {
	file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescOnce.Do(func() {
		file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescData)
	})
	return file_infra_cros_recovery_config_planpb_metric_config_proto_rawDescData
}

var file_infra_cros_recovery_config_planpb_metric_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_infra_cros_recovery_config_planpb_metric_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_infra_cros_recovery_config_planpb_metric_config_proto_goTypes = []interface{}{
	(MetricsConfig_UploadPolicy)(0), // 0: chromeos.recovery.MetricsConfig.UploadPolicy
	(*MetricsConfig)(nil),           // 1: chromeos.recovery.MetricsConfig
}
var file_infra_cros_recovery_config_planpb_metric_config_proto_depIdxs = []int32{
	0, // 0: chromeos.recovery.MetricsConfig.upload_policy:type_name -> chromeos.recovery.MetricsConfig.UploadPolicy
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_infra_cros_recovery_config_planpb_metric_config_proto_init() }
func file_infra_cros_recovery_config_planpb_metric_config_proto_init() {
	if File_infra_cros_recovery_config_planpb_metric_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_cros_recovery_config_planpb_metric_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_cros_recovery_config_planpb_metric_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_cros_recovery_config_planpb_metric_config_proto_goTypes,
		DependencyIndexes: file_infra_cros_recovery_config_planpb_metric_config_proto_depIdxs,
		EnumInfos:         file_infra_cros_recovery_config_planpb_metric_config_proto_enumTypes,
		MessageInfos:      file_infra_cros_recovery_config_planpb_metric_config_proto_msgTypes,
	}.Build()
	File_infra_cros_recovery_config_planpb_metric_config_proto = out.File
	file_infra_cros_recovery_config_planpb_metric_config_proto_rawDesc = nil
	file_infra_cros_recovery_config_planpb_metric_config_proto_goTypes = nil
	file_infra_cros_recovery_config_planpb_metric_config_proto_depIdxs = nil
}
