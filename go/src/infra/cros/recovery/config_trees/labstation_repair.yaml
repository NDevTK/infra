plans:
    - name: cros
      criticalactions:
        - name: dut_state_repair_failed (RUN_ONCE)
          exec_name: dut_state_repair_failed
        - name: check_host_info
          exec_name: sample_pass
          docs:
            - Check basic info for deployment.
          dependencies:
            - name: dut_has_name
              exec_name: dut_has_name
            - name: dut_has_board_name
              exec_name: dut_has_board_name
            - name: dut_has_model_name
              exec_name: dut_has_model_name
        - name: Collect logs (before) (Allow to fail) (RUN_ONCE)
          exec_name: sample_pass
          docs:
            - Collect any pre-existing logs from before deletes such logs.
            - 'Any logs collection are not critical, and we marks '
            - that action attempt to perform to avoid repeating it.
            - 'Collection to folder: before.'
          conditions:
            - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
              exec_name: cros_ssh
              docs:
                - This verifier checks whether the host is accessible over ssh.
            - name: Confirm log collection info does not exist (before)
              exec_name: cros_confirm_file_not_exists
              exec_args:
                - target_file:log_collection_info_before
              docs:
                - 'Need to check whether the log collection info file already '
                - 'exists in the file system. A pre-existing file indicates that '
                - 'the collection of any pre-existing logs has already been '
                - tried to be collected.
          dependencies:
            - name: Create log collection info (before) (RUN_ONCE)
              exec_name: cros_create_log_collection_info
              exec_args:
                - info_file:log_collection_info_before
              docs:
                - 'When the log collection completes, we create an info file that '
                - indicates the successful completion of the collection process.
              conditions:
                - name: Confirm log collection info does not exist (before)
                  exec_name: cros_confirm_file_not_exists
                  exec_args:
                    - target_file:log_collection_info_before
                  docs:
                    - 'Need to check whether the log collection info file already '
                    - 'exists in the file system. A pre-existing file indicates that '
                    - 'the collection of any pre-existing logs has already been '
                    - tried to be collected.
            - name: Copy messages (before) (Allow to fail)
              exec_name: cros_copy_to_logs
              exec_args:
                - src_host_type:dut
                - src_path:/var/log/messages
                - src_type:file
                - custom_dir:before
              docs:
                - Try to collect /var/log/messages.
                - 'Collection to folder: before.'
            - name: Copy eventlog.txt (before) (Allow to fail)
              exec_name: cros_copy_to_logs
              exec_args:
                - src_host_type:dut
                - src_path:/var/log/eventlog.txt
                - src_type:file
                - custom_dir:before
              docs:
                - Try to collect /var/log/eventlog.txt.
                - 'Collection to folder: before.'
            - name: Collect dmesg (before) (Allow to fail) (RUN_ONCE)
              exec_name: cros_dmesg
              exec_args:
                - human_readable:false
                - device_type:dut
                - custom_dir:before
              docs:
                - Collect the dmesg output.
                - 'Collection to folder: before.'
        - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
          exec_name: cros_ssh
          docs:
            - This verifier checks whether the host is accessible over ssh.
          recoveries:
            - name: Power cycle by RPM (ALWAYS_RUN)
              exec_name: sample_pass
              docs:
                - Action is always runnable.
              conditions:
                - name: has_rpm_info
                  exec_name: has_rpm_info
              dependencies:
                - name: rpm_power_cycle
                  exec_name: rpm_power_cycle
                - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                  exec_name: cros_ssh
                  docs:
                    - Try to wait device to be sshable during after the device being rebooted.
                - name: Start system services (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - host:dut
                    - command:start system-services
                  docs:
                    - Start system-services on the labstation
                  dependencies:
                    - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                      exec_name: cros_ssh
                      docs:
                        - This verifier checks whether the host is accessible over ssh.
                - name: Remove reboot requests (Allow to fail)
                  exec_name: cros_remove_all_reboot_request
                  docs:
                    - Remove all requests for reboot on the host.
                    - The action has to be called after reboot of the device.
        - name: System services is up
          exec_name: cros_wait_for_system
          docs:
            - Check whether system-services is up and running
          dependencies:
            - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
              exec_name: cros_ssh
              docs:
                - This verifier checks whether the host is accessible over ssh.
              recoveries:
                - name: Power cycle by RPM (ALWAYS_RUN)
                  exec_name: sample_pass
                  docs:
                    - Action is always runnable.
                  conditions:
                    - name: has_rpm_info
                      exec_name: has_rpm_info
                  dependencies:
                    - name: rpm_power_cycle
                      exec_name: rpm_power_cycle
                    - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                      exec_name: cros_ssh
                      docs:
                        - Try to wait device to be sshable during after the device being rebooted.
                    - name: Start system services (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_command
                      exec_args:
                        - host:dut
                        - command:start system-services
                      docs:
                        - Start system-services on the labstation
                      dependencies:
                        - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                          exec_name: cros_ssh
                          docs:
                            - This verifier checks whether the host is accessible over ssh.
                    - name: Remove reboot requests (Allow to fail)
                      exec_name: cros_remove_all_reboot_request
                      docs:
                        - Remove all requests for reboot on the host.
                        - The action has to be called after reboot of the device.
          recoveries:
            - name: Start system services (Allow to fail) (ALWAYS_RUN)
              exec_name: cros_run_command
              exec_args:
                - host:dut
                - command:start system-services
              docs:
                - Start system-services on the labstation
              dependencies:
                - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                  exec_name: cros_ssh
                  docs:
                    - This verifier checks whether the host is accessible over ssh.
        - name: Clean up logs if necessary (Allow to fail)
          exec_name: cros_log_clean_up
          docs:
            - Check size of messages logs on labstation and cleanup if necessary.
        - name: Filesystem is writable (Allow to fail)
          exec_name: cros_is_file_system_writable
          docs:
            - This verifier checks whether the host filesystem is writable.
        - name: Check servod dependencies
          exec_name: cros_run_command
          exec_args:
            - host:dut
            - command:servod --sversion
          docs:
            - Ensure critical dependencies for servod is there, this check may fail if labstation had a incomplete provision.
          dependencies:
            - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
              exec_name: cros_ssh
              docs:
                - This verifier checks whether the host is accessible over ssh.
              recoveries:
                - name: Power cycle by RPM (ALWAYS_RUN)
                  exec_name: sample_pass
                  docs:
                    - Action is always runnable.
                  conditions:
                    - name: has_rpm_info
                      exec_name: has_rpm_info
                  dependencies:
                    - name: rpm_power_cycle
                      exec_name: rpm_power_cycle
                    - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                      exec_name: cros_ssh
                      docs:
                        - Try to wait device to be sshable during after the device being rebooted.
                    - name: Start system services (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_command
                      exec_args:
                        - host:dut
                        - command:start system-services
                      docs:
                        - Start system-services on the labstation
                      dependencies:
                        - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                          exec_name: cros_ssh
                          docs:
                            - This verifier checks whether the host is accessible over ssh.
                    - name: Remove reboot requests (Allow to fail)
                      exec_name: cros_remove_all_reboot_request
                      docs:
                        - Remove all requests for reboot on the host.
                        - The action has to be called after reboot of the device.
          recoveries:
            - name: Powerwash repair labstation
              exec_name: sample_pass
              docs:
                - Powerwash and then install stable_version image on the labstation.
              conditions:
                - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                  exec_name: cros_ssh
                  docs:
                    - This verifier checks whether the host is accessible over ssh.
                - name: Labstation not in auto-update exempted pool
                  exec_name: dut_not_in_pool
                  exec_args:
                    - servo_verification
                    - labstation_tryjob
                    - labstation_canary
                    - labstation_block_autoupdate
                  docs:
                    - There are some labstations we don't want they receive auto-update, e.g. labstations that used for image qualification purpose
              dependencies:
                - name: Write factory-install-reset to file system
                  exec_name: cros_run_shell_command
                  exec_args:
                    - echo "fast safe" > /mnt/stateful_partition/factory_install_reset
                - name: Labstation reboot (ALWAYS_RUN)
                  exec_name: sample_pass
                  docs:
                    - Perform reboot of the host and perform additional actions as necessary.
                    - If reboot succeed then we can remove all request for reboot as we just did it.
                  dependencies:
                    - name: cros_stop_powerd (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_shell_command
                      exec_args:
                        - stop
                        - powerd
                    - name: cros_clean_tmp_owner_request (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_clean_tmp_owner_request
                      docs:
                        - In some cases, the update flow puts the TPM into a state such that it fails verification.
                        - We don't know why. However, this call papers over the problem by clearing the TPM during the reboot.
                        - We ignore failures from 'crossystem'.
                        - Although failure here is unexpected, and could signal a bug, the point of the exercise is to paper over problems.
                    - name: cros_allowed_reboot
                      exec_name: cros_allowed_reboot
                    - name: Simple reboot (ALWAYS_RUN)
                      exec_name: cros_run_command
                      exec_args:
                        - command:reboot
                        - background:true
                      docs:
                        - Simple un-blocker reboot.
                        - The action will not run if the labstation's filesystem I/O is blocked because /sbin/reboot may not work if the filesystem is hosed.
                      conditions:
                        - name: cros_filesystem_io_not_blocked
                          exec_name: cros_filesystem_io_not_blocked
                    - name: Sysrq reboot (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_shell_command
                      exec_args:
                        - echo b > /proc/sysrq-trigger
                      docs:
                        - Immediately reboot the system, without unmounting or syncing filesystems
                        - The action only runs when the filesystem is hosed where regular reboot executable will not work.
                      conditions:
                        - name: Filesystem IO blocked (ALWAYS_RUN)
                          exec_name: sample_fail
                          docs:
                            - Filesystem I/O is blocked on the labstation.
                            - The action is expected to fail when filesystem I/O is not blocked on the labstation.
                          conditions:
                            - name: cros_filesystem_io_not_blocked
                              exec_name: cros_filesystem_io_not_blocked
                    - name: Sleep 10s (Allow to fail) (ALWAYS_RUN)
                      exec_name: sample_sleep
                      exec_args:
                        - sleep:10
                    - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                      exec_name: cros_ssh
                      docs:
                        - Try to wait device to be sshable during after the device being rebooted.
                    - name: Start system services (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_command
                      exec_args:
                        - host:dut
                        - command:start system-services
                      docs:
                        - Start system-services on the labstation
                      dependencies:
                        - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                          exec_name: cros_ssh
                          docs:
                            - This verifier checks whether the host is accessible over ssh.
                    - name: Remove reboot requests (Allow to fail)
                      exec_name: cros_remove_all_reboot_request
                      docs:
                        - Remove all requests for reboot on the host.
                        - The action has to be called after reboot of the device.
                - name: Install stable labstation image without reboot (time:'1h0m0s')
                  exec_name: cros_provision
                  exec_args:
                    - no_reboot
                  docs:
                    - Install stable labstation image but do not reboot.
                  conditions:
                    - name: has_stable_version_cros_image
                      exec_name: has_stable_version_cros_image
                    - name: cros_kernel_priority_has_not_changed
                      exec_name: cros_kernel_priority_has_not_changed
                - name: Labstation reboot (ALWAYS_RUN)
                  exec_name: sample_pass
                  docs:
                    - Perform reboot of the host and perform additional actions as necessary.
                    - If reboot succeed then we can remove all request for reboot as we just did it.
                  dependencies:
                    - name: cros_stop_powerd (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_shell_command
                      exec_args:
                        - stop
                        - powerd
                    - name: cros_clean_tmp_owner_request (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_clean_tmp_owner_request
                      docs:
                        - In some cases, the update flow puts the TPM into a state such that it fails verification.
                        - We don't know why. However, this call papers over the problem by clearing the TPM during the reboot.
                        - We ignore failures from 'crossystem'.
                        - Although failure here is unexpected, and could signal a bug, the point of the exercise is to paper over problems.
                    - name: cros_allowed_reboot
                      exec_name: cros_allowed_reboot
                    - name: Simple reboot (ALWAYS_RUN)
                      exec_name: cros_run_command
                      exec_args:
                        - command:reboot
                        - background:true
                      docs:
                        - Simple un-blocker reboot.
                        - The action will not run if the labstation's filesystem I/O is blocked because /sbin/reboot may not work if the filesystem is hosed.
                      conditions:
                        - name: cros_filesystem_io_not_blocked
                          exec_name: cros_filesystem_io_not_blocked
                    - name: Sysrq reboot (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_shell_command
                      exec_args:
                        - echo b > /proc/sysrq-trigger
                      docs:
                        - Immediately reboot the system, without unmounting or syncing filesystems
                        - The action only runs when the filesystem is hosed where regular reboot executable will not work.
                      conditions:
                        - name: Filesystem IO blocked (ALWAYS_RUN)
                          exec_name: sample_fail
                          docs:
                            - Filesystem I/O is blocked on the labstation.
                            - The action is expected to fail when filesystem I/O is not blocked on the labstation.
                          conditions:
                            - name: cros_filesystem_io_not_blocked
                              exec_name: cros_filesystem_io_not_blocked
                    - name: Sleep 10s (Allow to fail) (ALWAYS_RUN)
                      exec_name: sample_sleep
                      exec_args:
                        - sleep:10
                    - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                      exec_name: cros_ssh
                      docs:
                        - Try to wait device to be sshable during after the device being rebooted.
                    - name: Start system services (Allow to fail) (ALWAYS_RUN)
                      exec_name: cros_run_command
                      exec_args:
                        - host:dut
                        - command:start system-services
                      docs:
                        - Start system-services on the labstation
                      dependencies:
                        - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                          exec_name: cros_ssh
                          docs:
                            - This verifier checks whether the host is accessible over ssh.
                    - name: Remove reboot requests (Allow to fail)
                      exec_name: cros_remove_all_reboot_request
                      docs:
                        - Remove all requests for reboot on the host.
                        - The action has to be called after reboot of the device.
        - name: cros_is_on_stable_version (Allow to fail)
          exec_name: cros_is_on_stable_version
          conditions:
            - name: has_stable_version_cros_image
              exec_name: has_stable_version_cros_image
            - name: cros_kernel_priority_has_not_changed
              exec_name: cros_kernel_priority_has_not_changed
            - name: Labstation not in auto-update exempted pool
              exec_name: dut_not_in_pool
              exec_args:
                - servo_verification
                - labstation_tryjob
                - labstation_canary
                - labstation_block_autoupdate
              docs:
                - There are some labstations we don't want they receive auto-update, e.g. labstations that used for image qualification purpose
          recoveries:
            - name: Install stable labstation image without reboot (time:'1h0m0s')
              exec_name: cros_provision
              exec_args:
                - no_reboot
              docs:
                - Install stable labstation image but do not reboot.
              conditions:
                - name: has_stable_version_cros_image
                  exec_name: has_stable_version_cros_image
                - name: cros_kernel_priority_has_not_changed
                  exec_name: cros_kernel_priority_has_not_changed
        - name: Update provisioned info (Allow to fail)
          exec_name: cros_update_provision_info
          docs:
            - Update OS version for provision info.
        - name: booted_from_right_kernel
          exec_name: cros_kernel_priority_has_not_changed
          docs:
            - Verified if kernel has update and waiting for update.
            - Kernel can wait for reboot as provisioning is not doing reboot by default for labstations.
          conditions:
            - name: cros_has_no_servo_in_use
              exec_name: cros_has_no_servo_in_use
          recoveries:
            - name: Labstation reboot (ALWAYS_RUN)
              exec_name: sample_pass
              docs:
                - Perform reboot of the host and perform additional actions as necessary.
                - If reboot succeed then we can remove all request for reboot as we just did it.
              dependencies:
                - name: cros_stop_powerd (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_shell_command
                  exec_args:
                    - stop
                    - powerd
                - name: cros_clean_tmp_owner_request (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_clean_tmp_owner_request
                  docs:
                    - In some cases, the update flow puts the TPM into a state such that it fails verification.
                    - We don't know why. However, this call papers over the problem by clearing the TPM during the reboot.
                    - We ignore failures from 'crossystem'.
                    - Although failure here is unexpected, and could signal a bug, the point of the exercise is to paper over problems.
                - name: cros_allowed_reboot
                  exec_name: cros_allowed_reboot
                - name: Simple reboot (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - command:reboot
                    - background:true
                  docs:
                    - Simple un-blocker reboot.
                    - The action will not run if the labstation's filesystem I/O is blocked because /sbin/reboot may not work if the filesystem is hosed.
                  conditions:
                    - name: cros_filesystem_io_not_blocked
                      exec_name: cros_filesystem_io_not_blocked
                - name: Sysrq reboot (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_shell_command
                  exec_args:
                    - echo b > /proc/sysrq-trigger
                  docs:
                    - Immediately reboot the system, without unmounting or syncing filesystems
                    - The action only runs when the filesystem is hosed where regular reboot executable will not work.
                  conditions:
                    - name: Filesystem IO blocked (ALWAYS_RUN)
                      exec_name: sample_fail
                      docs:
                        - Filesystem I/O is blocked on the labstation.
                        - The action is expected to fail when filesystem I/O is not blocked on the labstation.
                      conditions:
                        - name: cros_filesystem_io_not_blocked
                          exec_name: cros_filesystem_io_not_blocked
                - name: Sleep 10s (Allow to fail) (ALWAYS_RUN)
                  exec_name: sample_sleep
                  exec_args:
                    - sleep:10
                - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                  exec_name: cros_ssh
                  docs:
                    - Try to wait device to be sshable during after the device being rebooted.
                - name: Start system services (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - host:dut
                    - command:start system-services
                  docs:
                    - Start system-services on the labstation
                  dependencies:
                    - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                      exec_name: cros_ssh
                      docs:
                        - This verifier checks whether the host is accessible over ssh.
                - name: Remove reboot requests (Allow to fail)
                  exec_name: cros_remove_all_reboot_request
                  docs:
                    - Remove all requests for reboot on the host.
                    - The action has to be called after reboot of the device.
            - name: Power cycle by RPM (ALWAYS_RUN)
              exec_name: sample_pass
              docs:
                - Action is always runnable.
              conditions:
                - name: has_rpm_info
                  exec_name: has_rpm_info
              dependencies:
                - name: rpm_power_cycle
                  exec_name: rpm_power_cycle
                - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                  exec_name: cros_ssh
                  docs:
                    - Try to wait device to be sshable during after the device being rebooted.
                - name: Start system services (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - host:dut
                    - command:start system-services
                  docs:
                    - Start system-services on the labstation
                  dependencies:
                    - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                      exec_name: cros_ssh
                      docs:
                        - This verifier checks whether the host is accessible over ssh.
                - name: Remove reboot requests (Allow to fail)
                  exec_name: cros_remove_all_reboot_request
                  docs:
                    - Remove all requests for reboot on the host.
                    - The action has to be called after reboot of the device.
        - name: reboot_by_request
          exec_name: sample_fail
          docs:
            - Some DUTs can request reboot labstation if they has issue with servo-nic or other issues with servo-host.
            - We allowed to remove requests for reboot if we rebooted per request.
          conditions:
            - name: cros_has_reboot_request
              exec_name: cros_has_reboot_request
            - name: cros_has_no_servo_in_use
              exec_name: cros_has_no_servo_in_use
            - name: labstation_uptime_6_hours
              exec_name: cros_validate_uptime
              exec_args:
                - min_duration:6
          recoveries:
            - name: Labstation reboot (ALWAYS_RUN)
              exec_name: sample_pass
              docs:
                - Perform reboot of the host and perform additional actions as necessary.
                - If reboot succeed then we can remove all request for reboot as we just did it.
              dependencies:
                - name: cros_stop_powerd (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_shell_command
                  exec_args:
                    - stop
                    - powerd
                - name: cros_clean_tmp_owner_request (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_clean_tmp_owner_request
                  docs:
                    - In some cases, the update flow puts the TPM into a state such that it fails verification.
                    - We don't know why. However, this call papers over the problem by clearing the TPM during the reboot.
                    - We ignore failures from 'crossystem'.
                    - Although failure here is unexpected, and could signal a bug, the point of the exercise is to paper over problems.
                - name: cros_allowed_reboot
                  exec_name: cros_allowed_reboot
                - name: Simple reboot (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - command:reboot
                    - background:true
                  docs:
                    - Simple un-blocker reboot.
                    - The action will not run if the labstation's filesystem I/O is blocked because /sbin/reboot may not work if the filesystem is hosed.
                  conditions:
                    - name: cros_filesystem_io_not_blocked
                      exec_name: cros_filesystem_io_not_blocked
                - name: Sysrq reboot (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_shell_command
                  exec_args:
                    - echo b > /proc/sysrq-trigger
                  docs:
                    - Immediately reboot the system, without unmounting or syncing filesystems
                    - The action only runs when the filesystem is hosed where regular reboot executable will not work.
                  conditions:
                    - name: Filesystem IO blocked (ALWAYS_RUN)
                      exec_name: sample_fail
                      docs:
                        - Filesystem I/O is blocked on the labstation.
                        - The action is expected to fail when filesystem I/O is not blocked on the labstation.
                      conditions:
                        - name: cros_filesystem_io_not_blocked
                          exec_name: cros_filesystem_io_not_blocked
                - name: Sleep 10s (Allow to fail) (ALWAYS_RUN)
                  exec_name: sample_sleep
                  exec_args:
                    - sleep:10
                - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                  exec_name: cros_ssh
                  docs:
                    - Try to wait device to be sshable during after the device being rebooted.
                - name: Start system services (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - host:dut
                    - command:start system-services
                  docs:
                    - Start system-services on the labstation
                  dependencies:
                    - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                      exec_name: cros_ssh
                      docs:
                        - This verifier checks whether the host is accessible over ssh.
                - name: Remove reboot requests (Allow to fail)
                  exec_name: cros_remove_all_reboot_request
                  docs:
                    - Remove all requests for reboot on the host.
                    - The action has to be called after reboot of the device.
            - name: Power cycle by RPM (ALWAYS_RUN)
              exec_name: sample_pass
              docs:
                - Action is always runnable.
              conditions:
                - name: has_rpm_info
                  exec_name: has_rpm_info
              dependencies:
                - name: rpm_power_cycle
                  exec_name: rpm_power_cycle
                - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                  exec_name: cros_ssh
                  docs:
                    - Try to wait device to be sshable during after the device being rebooted.
                - name: Start system services (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - host:dut
                    - command:start system-services
                  docs:
                    - Start system-services on the labstation
                  dependencies:
                    - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                      exec_name: cros_ssh
                      docs:
                        - This verifier checks whether the host is accessible over ssh.
                - name: Remove reboot requests (Allow to fail)
                  exec_name: cros_remove_all_reboot_request
                  docs:
                    - Remove all requests for reboot on the host.
                    - The action has to be called after reboot of the device.
        - name: Reboot labstation if uptime longer than 7 days
          exec_name: cros_validate_uptime
          exec_args:
            - max_duration:168
          docs:
            - Check labstation uptime and trigger a reboot if it's longer than 7 days (168 hours).
          conditions:
            - name: cros_has_no_servo_in_use
              exec_name: cros_has_no_servo_in_use
          recoveries:
            - name: Labstation reboot (ALWAYS_RUN)
              exec_name: sample_pass
              docs:
                - Perform reboot of the host and perform additional actions as necessary.
                - If reboot succeed then we can remove all request for reboot as we just did it.
              dependencies:
                - name: cros_stop_powerd (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_shell_command
                  exec_args:
                    - stop
                    - powerd
                - name: cros_clean_tmp_owner_request (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_clean_tmp_owner_request
                  docs:
                    - In some cases, the update flow puts the TPM into a state such that it fails verification.
                    - We don't know why. However, this call papers over the problem by clearing the TPM during the reboot.
                    - We ignore failures from 'crossystem'.
                    - Although failure here is unexpected, and could signal a bug, the point of the exercise is to paper over problems.
                - name: cros_allowed_reboot
                  exec_name: cros_allowed_reboot
                - name: Simple reboot (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - command:reboot
                    - background:true
                  docs:
                    - Simple un-blocker reboot.
                    - The action will not run if the labstation's filesystem I/O is blocked because /sbin/reboot may not work if the filesystem is hosed.
                  conditions:
                    - name: cros_filesystem_io_not_blocked
                      exec_name: cros_filesystem_io_not_blocked
                - name: Sysrq reboot (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_shell_command
                  exec_args:
                    - echo b > /proc/sysrq-trigger
                  docs:
                    - Immediately reboot the system, without unmounting or syncing filesystems
                    - The action only runs when the filesystem is hosed where regular reboot executable will not work.
                  conditions:
                    - name: Filesystem IO blocked (ALWAYS_RUN)
                      exec_name: sample_fail
                      docs:
                        - Filesystem I/O is blocked on the labstation.
                        - The action is expected to fail when filesystem I/O is not blocked on the labstation.
                      conditions:
                        - name: cros_filesystem_io_not_blocked
                          exec_name: cros_filesystem_io_not_blocked
                - name: Sleep 10s (Allow to fail) (ALWAYS_RUN)
                  exec_name: sample_sleep
                  exec_args:
                    - sleep:10
                - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                  exec_name: cros_ssh
                  docs:
                    - Try to wait device to be sshable during after the device being rebooted.
                - name: Start system services (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - host:dut
                    - command:start system-services
                  docs:
                    - Start system-services on the labstation
                  dependencies:
                    - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                      exec_name: cros_ssh
                      docs:
                        - This verifier checks whether the host is accessible over ssh.
                - name: Remove reboot requests (Allow to fail)
                  exec_name: cros_remove_all_reboot_request
                  docs:
                    - Remove all requests for reboot on the host.
                    - The action has to be called after reboot of the device.
            - name: Power cycle by RPM (ALWAYS_RUN)
              exec_name: sample_pass
              docs:
                - Action is always runnable.
              conditions:
                - name: has_rpm_info
                  exec_name: has_rpm_info
              dependencies:
                - name: rpm_power_cycle
                  exec_name: rpm_power_cycle
                - name: Wait to be SSHable (ALWAYS_RUN) (time:'10m0s')
                  exec_name: cros_ssh
                  docs:
                    - Try to wait device to be sshable during after the device being rebooted.
                - name: Start system services (Allow to fail) (ALWAYS_RUN)
                  exec_name: cros_run_command
                  exec_args:
                    - host:dut
                    - command:start system-services
                  docs:
                    - Start system-services on the labstation
                  dependencies:
                    - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                      exec_name: cros_ssh
                      docs:
                        - This verifier checks whether the host is accessible over ssh.
                - name: Remove reboot requests (Allow to fail)
                  exec_name: cros_remove_all_reboot_request
                  docs:
                    - Remove all requests for reboot on the host.
                    - The action has to be called after reboot of the device.
        - name: Cleanup bluetooth (Allow to fail)
          exec_name: sample_pass
          docs:
            - Attempt to remove bluetooth device and then power off BT adapter.
            - This action should be removed once b/245824583 got fixed.
          dependencies:
            - name: Attempt to remove bluetooth device (Allow to fail)
              exec_name: cros_remove_bt_devices
              docs:
                - Attempt to remove bluetooth device from the labstation.
            - name: Attempt to power off bluetooth adapter (Allow to fail)
              exec_name: cros_run_shell_command
              exec_args:
                - bluetoothctl power off
              docs:
                - Attempt to power off bluetooth adapter on the labstation.
        - name: Is crosid readable (Allow to fail)
          exec_name: cros_run_command
          exec_args:
            - 'host:'
            - command:crosid
          docs:
            - Verify crosid cli is responsive.
          conditions:
            - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
              exec_name: cros_ssh
              docs:
                - This verifier checks whether the host is accessible over ssh.
            - name: Is crosid present
              exec_name: cros_run_command
              exec_args:
                - 'host:'
                - command:which crosid
              docs:
                - Verify if crosid cli is present on the ChromeOS
          recoveries:
            - name: Remove whitelabel_tag VPD field
              exec_name: cros_run_command
              exec_args:
                - 'host:'
                - command:vpd -d whitelabel_tag
              docs:
                - Remove whitelabel_tag field from VPD cache.
              conditions:
                - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
                  exec_name: cros_ssh
                  docs:
                    - This verifier checks whether the host is accessible over ssh.
        - name: Update inventory info
          exec_name: sample_pass
          docs:
            - Updating device info in inventory.
          dependencies:
            - name: cros_update_hwid_to_inventory
              exec_name: cros_update_hwid_to_inventory
            - name: Read serial number from labstation (Allow to fail)
              exec_name: cros_update_serial_number_inventory
        - name: dut_state_ready
          exec_name: dut_state_ready
        - name: Collect logs (after) (Allow to fail) (RUN_ONCE)
          exec_name: sample_pass
          docs:
            - Collect any pre-existing logs from before deletes such logs.
            - 'Any logs collection are not critical, and we marks '
            - that action attempt to perform to avoid repeating it.
            - 'Collection to folder: after.'
          conditions:
            - name: Device is SSHable (ALWAYS_RUN) (time:'30s')
              exec_name: cros_ssh
              docs:
                - This verifier checks whether the host is accessible over ssh.
            - name: Confirm log collection info does not exist (after)
              exec_name: cros_confirm_file_not_exists
              exec_args:
                - target_file:log_collection_info_after
              docs:
                - 'Need to check whether the log collection info file already '
                - 'exists in the file system. A pre-existing file indicates that '
                - 'the collection of any pre-existing logs has already been '
                - tried to be collected.
          dependencies:
            - name: Create log collection info (after) (RUN_ONCE)
              exec_name: cros_create_log_collection_info
              exec_args:
                - info_file:log_collection_info_after
              docs:
                - 'When the log collection completes, we create an info file that '
                - indicates the successful completion of the collection process.
              conditions:
                - name: Confirm log collection info does not exist (after)
                  exec_name: cros_confirm_file_not_exists
                  exec_args:
                    - target_file:log_collection_info_after
                  docs:
                    - 'Need to check whether the log collection info file already '
                    - 'exists in the file system. A pre-existing file indicates that '
                    - 'the collection of any pre-existing logs has already been '
                    - tried to be collected.
            - name: Copy messages (after) (Allow to fail)
              exec_name: cros_copy_to_logs
              exec_args:
                - src_host_type:dut
                - src_path:/var/log/messages
                - src_type:file
                - custom_dir:after
              docs:
                - Try to collect /var/log/messages.
                - 'Collection to folder: after.'
            - name: Copy eventlog.txt (after) (Allow to fail)
              exec_name: cros_copy_to_logs
              exec_args:
                - src_host_type:dut
                - src_path:/var/log/eventlog.txt
                - src_type:file
                - custom_dir:after
              docs:
                - Try to collect /var/log/eventlog.txt.
                - 'Collection to folder: after.'
            - name: Collect dmesg (after) (Allow to fail) (RUN_ONCE)
              exec_name: cros_dmesg
              exec_args:
                - human_readable:false
                - device_type:dut
                - custom_dir:after
              docs:
                - Collect the dmesg output.
                - 'Collection to folder: after.'
