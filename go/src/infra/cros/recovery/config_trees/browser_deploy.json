{
  "plans": [
    {
      "name": "cros",
      "critical_actions": [
        {
          "name": "Set state: needs_deploy",
          "exec_name": "dut_set_state",
          "docs": [
            "The action set devices with request to be redeployed."
          ],
          "exec_args": [
            "state:needs_deploy"
          ],
          "run_control": "RUN_ONCE"
        },
        {
          "name": "Check stable versions exist",
          "exec_name": "sample_pass",
          "docs": [
            "Check the DUT has model specific cros, firmware and faft stable_version configured."
          ],
          "conditions": [
            {
              "name": "Has a stable-version service",
              "exec_name": "has_stable_version_service_path",
              "docs": [
                "Verify if we have access to the service provided access to the stable version"
              ],
              "run_control": "RUN_ONCE"
            }
          ],
          "dependencies": [
            {
              "name": "Recovery version has OS image path",
              "exec_name": "has_stable_version_cros_image",
              "docs": [
                "Verify that recovery version has OS image path."
              ],
              "dependencies": [
                {
                  "name": "Has a stable-version service",
                  "exec_name": "has_stable_version_service_path",
                  "docs": [
                    "Verify if we have access to the service provided access to the stable version"
                  ],
                  "run_control": "RUN_ONCE"
                }
              ],
              "run_control": "RERUN_AFTER_RECOVERY"
            },
            {
              "name": "Check stable firmware version exists",
              "exec_name": "has_stable_version_fw_version",
              "docs": [
                "Check the DUT has model specific firmware stable_version configured.",
                "Flex device are exampted from this check as they don't run cros firmware"
              ],
              "conditions": [
                {
                  "name": "Is a Chromebook",
                  "exec_name": "dut_check_board",
                  "docs": [
                    "Check that DUT is a Chromebook by checking for non-Chromebook boards"
                  ],
                  "exec_args": [
                    "string_values:aurora,reven",
                    "invert_result:true"
                  ],
                  "run_control": "RERUN_AFTER_RECOVERY"
                },
                {
                  "name": "Has a stable-version service",
                  "exec_name": "has_stable_version_service_path",
                  "docs": [
                    "Verify if we have access to the service provided access to the stable version"
                  ],
                  "run_control": "RUN_ONCE"
                }
              ],
              "run_control": "RERUN_AFTER_RECOVERY"
            }
          ],
          "run_control": "RERUN_AFTER_RECOVERY"
        },
        {
          "name": "Device is SSHable",
          "exec_name": "cros_ssh",
          "docs": [
            "Verify that device is reachable by SSH.",
            "Limited to 15 seconds."
          ],
          "recoveries": [
            {
              "name": "Power cycle DUT by RPM and wait",
              "exec_name": "sample_pass",
              "docs": [
                "Perform RPM cycle and wait to device to boot back."
              ],
              "conditions": [
                {
                  "name": "has_rpm_info",
                  "exec_name": "has_rpm_info",
                  "run_control": "RERUN_AFTER_RECOVERY"
                }
              ],
              "dependencies": [
                {
                  "name": "rpm_power_cycle",
                  "exec_name": "rpm_power_cycle",
                  "run_control": "RERUN_AFTER_RECOVERY"
                },
                {
                  "name": "Wait to be pingable (normal boot)",
                  "exec_name": "cros_ping",
                  "docs": [
                    "Wait DUT to be pingable after some action on it.",
                    "Waiting time 150 seconds."
                  ],
                  "timeout": "2m30s",
                  "run_control": "ALWAYS_RUN"
                }
              ],
              "run_control": "ALWAYS_RUN"
            }
          ],
          "timeout": "15s",
          "run_control": "ALWAYS_RUN"
        },
        {
          "name": "DUT has expected dev firmware (for browser DUTs)",
          "exec_name": "cros_has_dev_signed_firmware",
          "docs": [
            "Verify that FW on the DUT has dev keys."
          ],
          "conditions": [
            {
              "name": "dut_is_not_browser_legacy_duts",
              "exec_name": "dut_is_not_browser_legacy_duts",
              "run_control": "RERUN_AFTER_RECOVERY"
            }
          ],
          "dependencies": [
            {
              "name": "Device is SSHable",
              "exec_name": "cros_ssh",
              "docs": [
                "Verify that device is reachable by SSH.",
                "Limited to 15 seconds."
              ],
              "recoveries": [
                {
                  "name": "Power cycle DUT by RPM and wait",
                  "exec_name": "sample_pass",
                  "docs": [
                    "Perform RPM cycle and wait to device to boot back."
                  ],
                  "conditions": [
                    {
                      "name": "has_rpm_info",
                      "exec_name": "has_rpm_info",
                      "run_control": "RERUN_AFTER_RECOVERY"
                    }
                  ],
                  "dependencies": [
                    {
                      "name": "rpm_power_cycle",
                      "exec_name": "rpm_power_cycle",
                      "run_control": "RERUN_AFTER_RECOVERY"
                    },
                    {
                      "name": "Wait to be pingable (normal boot)",
                      "exec_name": "cros_ping",
                      "docs": [
                        "Wait DUT to be pingable after some action on it.",
                        "Waiting time 150 seconds."
                      ],
                      "timeout": "2m30s",
                      "run_control": "ALWAYS_RUN"
                    }
                  ],
                  "run_control": "ALWAYS_RUN"
                }
              ],
              "timeout": "15s",
              "run_control": "ALWAYS_RUN"
            }
          ],
          "recoveries": [
            {
              "name": "Update DUT firmware with factory mode and restart by host",
              "exec_name": "sample_pass",
              "docs": [
                "Force update FW on the DUT by factory mode.",
                "Reboot device by host"
              ],
              "dependencies": [
                {
                  "name": "Device is SSHable",
                  "exec_name": "cros_ssh",
                  "docs": [
                    "Verify that device is reachable by SSH.",
                    "Limited to 15 seconds."
                  ],
                  "timeout": "15s",
                  "run_control": "ALWAYS_RUN"
                },
                {
                  "name": "Collect HWID into inventory",
                  "exec_name": "sample_pass",
                  "docs": [
                    "Collect DUT hwid and update it into inventory info."
                  ],
                  "dependencies": [
                    {
                      "name": "Read HWID from DUT",
                      "exec_name": "cros_update_hwid_to_inventory",
                      "conditions": [
                        {
                          "name": "Not Satlab device",
                          "exec_name": "sample_fail",
                          "docs": [
                            "Verify that DUT name is not belong Satlab."
                          ],
                          "conditions": [
                            {
                              "name": "Is Satlab device",
                              "exec_name": "dut_regex_name_match",
                              "docs": [
                                "Verify that DUT name is belong Satlab."
                              ],
                              "exec_args": [
                                "regex:^satlab"
                              ],
                              "run_control": "RERUN_AFTER_RECOVERY"
                            }
                          ],
                          "run_control": "RERUN_AFTER_RECOVERY"
                        }
                      ],
                      "run_control": "ALWAYS_RUN"
                    },
                    {
                      "name": "Read HWID from DUT (Satlab)",
                      "exec_name": "cros_update_hwid_to_inventory",
                      "conditions": [
                        {
                          "name": "Is Satlab device",
                          "exec_name": "dut_regex_name_match",
                          "docs": [
                            "Verify that DUT name is belong Satlab."
                          ],
                          "exec_args": [
                            "regex:^satlab"
                          ],
                          "run_control": "RERUN_AFTER_RECOVERY"
                        }
                      ],
                      "allow_fail_after_recovery": true,
                      "run_control": "ALWAYS_RUN"
                    }
                  ],
                  "run_control": "RUN_ONCE"
                },
                {
                  "name": "Disable software-controlled write-protect for 'internal'",
                  "exec_name": "cros_disable_fprom_write_protect",
                  "docs": [
                    "Disable write-protect fprom 'internal'."
                  ],
                  "dependencies": [
                    {
                      "name": "Device is SSHable",
                      "exec_name": "cros_ssh",
                      "docs": [
                        "Verify that device is reachable by SSH.",
                        "Limited to 15 seconds."
                      ],
                      "timeout": "15s",
                      "run_control": "ALWAYS_RUN"
                    }
                  ],
                  "exec_args": [
                    "fprom:internal"
                  ],
                  "timeout": "5m0s",
                  "allow_fail_after_recovery": true,
                  "run_control": "ALWAYS_RUN"
                },
                {
                  "name": "Disable software-controlled write-protect for 'ec'",
                  "exec_name": "cros_disable_fprom_write_protect",
                  "docs": [
                    "Disable write-protect fprom 'ec'."
                  ],
                  "dependencies": [
                    {
                      "name": "Device is SSHable",
                      "exec_name": "cros_ssh",
                      "docs": [
                        "Verify that device is reachable by SSH.",
                        "Limited to 15 seconds."
                      ],
                      "timeout": "15s",
                      "run_control": "ALWAYS_RUN"
                    }
                  ],
                  "exec_args": [
                    "fprom:ec"
                  ],
                  "timeout": "5m0s",
                  "allow_fail_after_recovery": true,
                  "run_control": "ALWAYS_RUN"
                },
                {
                  "name": "Try to update FW from firmware image with factory mode",
                  "exec_name": "cros_update_firmware_from_firmware_image",
                  "docs": [
                    "Download firmware image to DUT, and install via firmware updater.",
                    "Update firmware from faft stable image with chromeos-firmwareupdate tool",
                    "--mode=facotry will be specified when run chromeos-firmwareupdate",
                    "Set timeout to 120 minutes = 10 minutes for download + 100 minutes for find and extract AP/EC images + 10 minutes for run updater."
                  ],
                  "conditions": [
                    {
                      "name": "has_stable_version_fw_image",
                      "exec_name": "has_stable_version_fw_image",
                      "run_control": "RERUN_AFTER_RECOVERY"
                    }
                  ],
                  "exec_args": [
                    "mode:factory",
                    "force:true",
                    "updater_timeout:600",
                    "update_ec_attempt_count:1",
                    "update_ap_attempt_count:1",
                    "use_cache_extractor:true"
                  ],
                  "timeout": "2h0m0s",
                  "allow_fail_after_recovery": true,
                  "run_control": "ALWAYS_RUN"
                },
                {
                  "name": "Try to update FW from OS image with factory mode",
                  "exec_name": "cros_run_firmware_update",
                  "docs": [
                    "Run chromeos-firmwareupdate with factory mode.",
                    "The reboot is not triggered as part of the action.",
                    "The action is not strict to not block repair actions.",
                    "Only runs when the DUT doesn't have a model specific faft stable_version, e.g. it's an early stage device use satlab or flex device."
                  ],
                  "conditions": [
                    {
                      "name": "Missing stable fw image",
                      "exec_name": "sample_fail",
                      "docs": [
                        "Verify that the DUT doesn't have model specific stable_version record in faft section"
                      ],
                      "conditions": [
                        {
                          "name": "has_stable_version_fw_image",
                          "exec_name": "has_stable_version_fw_image",
                          "run_control": "RERUN_AFTER_RECOVERY"
                        }
                      ],
                      "run_control": "RERUN_AFTER_RECOVERY"
                    }
                  ],
                  "exec_args": [
                    "mode:factory",
                    "force:true",
                    "updater_timeout:600"
                  ],
                  "timeout": "15m0s",
                  "allow_fail_after_recovery": true,
                  "run_control": "ALWAYS_RUN"
                },
                {
                  "name": "Simple reboot",
                  "exec_name": "cros_run_command",
                  "docs": [
                    "Simple un-blocker reboot."
                  ],
                  "dependencies": [
                    {
                      "name": "Device is SSHable",
                      "exec_name": "cros_ssh",
                      "docs": [
                        "Verify that device is reachable by SSH.",
                        "Limited to 15 seconds."
                      ],
                      "timeout": "15s",
                      "run_control": "ALWAYS_RUN"
                    }
                  ],
                  "exec_args": [
                    "host:dut",
                    "command:reboot",
                    "background:true"
                  ],
                  "run_control": "ALWAYS_RUN"
                },
                {
                  "name": "Wait to be SSHable (normal boot)",
                  "exec_name": "cros_ssh",
                  "docs": [
                    "Try to wait device to be sshable after the device being rebooted.",
                    "Waiting time 150 seconds."
                  ],
                  "timeout": "2m30s",
                  "run_control": "ALWAYS_RUN"
                }
              ],
              "run_control": "ALWAYS_RUN"
            }
          ],
          "timeout": "10m0s",
          "run_control": "RERUN_AFTER_RECOVERY"
        },
        {
          "name": "Update inventory info",
          "exec_name": "sample_pass",
          "docs": [
            "Updating device info in inventory."
          ],
          "dependencies": [
            {
              "name": "cros_ssh",
              "exec_name": "cros_ssh",
              "run_control": "RERUN_AFTER_RECOVERY"
            },
            {
              "name": "cros_update_hwid_to_inventory",
              "exec_name": "cros_update_hwid_to_inventory",
              "run_control": "RERUN_AFTER_RECOVERY"
            },
            {
              "name": "cros_update_serial_number_inventory",
              "exec_name": "cros_update_serial_number_inventory",
              "run_control": "RERUN_AFTER_RECOVERY"
            }
          ],
          "run_control": "RERUN_AFTER_RECOVERY"
        },
        {
          "name": "Set state: ready",
          "exec_name": "dut_set_state",
          "docs": [
            "The action set devices with state ready for the testing."
          ],
          "dependencies": [
            {
              "name": "All repair-requests resolved",
              "exec_name": "dut_has_no_repair_requests",
              "docs": [
                "Checks if all repair requests are resolved"
              ],
              "run_control": "RERUN_AFTER_RECOVERY"
            },
            {
              "name": "Reset DUT-state reason",
              "exec_name": "dut_reset_state_reason",
              "docs": [
                "Reset DUT-state-reason for good DUT as it becomes stale."
              ],
              "run_control": "RERUN_AFTER_RECOVERY"
            }
          ],
          "exec_args": [
            "state:ready"
          ],
          "run_control": "RUN_ONCE"
        }
      ]
    }
  ]
}