// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: infra/unifiedfleet/app/dumper/megamdm_proto/checkin.proto

package megamdm

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlistData *httpbody.HttpBody `protobuf:"bytes,1,opt,name=plist_data,json=plistData,proto3" json:"plist_data,omitempty"`
	// If present fleet specifies which fleet the device belongs to.
	// The fleet parameter may be used for triggering specific workflows on the
	// mdmclient.
	Fleet string `protobuf:"bytes,2,opt,name=fleet,proto3" json:"fleet,omitempty"`
}

func (x *CheckinRequest) Reset() {
	*x = CheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest) ProtoMessage() {}

func (x *CheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest.ProtoReflect.Descriptor instead.
func (*CheckinRequest) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescGZIP(), []int{0}
}

func (x *CheckinRequest) GetPlistData() *httpbody.HttpBody {
	if x != nil {
		return x.PlistData
	}
	return nil
}

func (x *CheckinRequest) GetFleet() string {
	if x != nil {
		return x.Fleet
	}
	return ""
}

type AcknowledgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlistData *httpbody.HttpBody `protobuf:"bytes,1,opt,name=plist_data,json=plistData,proto3" json:"plist_data,omitempty"`
	// Same as CheckinRequest.fleet.
	Fleet string `protobuf:"bytes,2,opt,name=fleet,proto3" json:"fleet,omitempty"`
}

func (x *AcknowledgeRequest) Reset() {
	*x = AcknowledgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeRequest) ProtoMessage() {}

func (x *AcknowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeRequest) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescGZIP(), []int{1}
}

func (x *AcknowledgeRequest) GetPlistData() *httpbody.HttpBody {
	if x != nil {
		return x.PlistData
	}
	return nil
}

func (x *AcknowledgeRequest) GetFleet() string {
	if x != nil {
		return x.Fleet
	}
	return ""
}

var File_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto protoreflect.FileDescriptor

var file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDesc = []byte{
	0x0a, 0x39, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x2f,
	0x6d, 0x65, 0x67, 0x61, 0x6d, 0x64, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6f, 0x70, 0x73,
	0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x64, 0x6d, 0x2e, 0x6d, 0x65, 0x67, 0x61,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62,
	0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x70,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x09, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x22, 0x5f, 0x0a, 0x12, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a,
	0x70, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x09, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x32, 0xee, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x07, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x63, 0x6f,
	0x70, 0x73, 0x2e, 0x6d, 0x64, 0x6d, 0x2e, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x64,
	0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x3a, 0x0a, 0x70, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x71, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x70,
	0x73, 0x2e, 0x6d, 0x64, 0x6d, 0x2e, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x64, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x3a, 0x0a, 0x70, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x35, 0x5a, 0x33, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x64, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x67, 0x61, 0x6d, 0x64,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x6d, 0x65, 0x67, 0x61, 0x6d, 0x64, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescOnce sync.Once
	file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescData = file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDesc
)

func file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescGZIP() []byte {
	file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescOnce.Do(func() {
		file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescData)
	})
	return file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDescData
}

var file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_goTypes = []interface{}{
	(*CheckinRequest)(nil),     // 0: ops.macops.mdm.mega.CheckinRequest
	(*AcknowledgeRequest)(nil), // 1: ops.macops.mdm.mega.AcknowledgeRequest
	(*httpbody.HttpBody)(nil),  // 2: google.api.HttpBody
}
var file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_depIdxs = []int32{
	2, // 0: ops.macops.mdm.mega.CheckinRequest.plist_data:type_name -> google.api.HttpBody
	2, // 1: ops.macops.mdm.mega.AcknowledgeRequest.plist_data:type_name -> google.api.HttpBody
	0, // 2: ops.macops.mdm.mega.CheckinService.Checkin:input_type -> ops.macops.mdm.mega.CheckinRequest
	1, // 3: ops.macops.mdm.mega.CheckinService.Acknowledge:input_type -> ops.macops.mdm.mega.AcknowledgeRequest
	2, // 4: ops.macops.mdm.mega.CheckinService.Checkin:output_type -> google.api.HttpBody
	2, // 5: ops.macops.mdm.mega.CheckinService.Acknowledge:output_type -> google.api.HttpBody
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_init() }
func file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_init() {
	if File_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_goTypes,
		DependencyIndexes: file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_depIdxs,
		MessageInfos:      file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_msgTypes,
	}.Build()
	File_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto = out.File
	file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_rawDesc = nil
	file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_goTypes = nil
	file_infra_unifiedfleet_app_dumper_megamdm_proto_checkin_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CheckinServiceClient is the client API for CheckinService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckinServiceClient interface {
	// Checkin authenticates MDM enrollments and maintains push tokens.
	//
	// Apple Doc:
	// https://developer.apple.com/documentation/devicemanagement/check-in
	Checkin(ctx context.Context, in *CheckinRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	// Acknowledge requests come from the client after the device receives an APNS
	// notification. The device will report readiness to accept a new command or
	// and acknowledge the status of a previously issued command.
	Acknowledge(ctx context.Context, in *AcknowledgeRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
}
type checkinServicePRPCClient struct {
	client *prpc.Client
}

func NewCheckinServicePRPCClient(client *prpc.Client) CheckinServiceClient {
	return &checkinServicePRPCClient{client}
}

func (c *checkinServicePRPCClient) Checkin(ctx context.Context, in *CheckinRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.client.Call(ctx, "ops.macops.mdm.mega.CheckinService", "Checkin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkinServicePRPCClient) Acknowledge(ctx context.Context, in *AcknowledgeRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.client.Call(ctx, "ops.macops.mdm.mega.CheckinService", "Acknowledge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type checkinServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCheckinServiceClient(cc grpc.ClientConnInterface) CheckinServiceClient {
	return &checkinServiceClient{cc}
}

func (c *checkinServiceClient) Checkin(ctx context.Context, in *CheckinRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ops.macops.mdm.mega.CheckinService/Checkin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkinServiceClient) Acknowledge(ctx context.Context, in *AcknowledgeRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ops.macops.mdm.mega.CheckinService/Acknowledge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckinServiceServer is the server API for CheckinService service.
type CheckinServiceServer interface {
	// Checkin authenticates MDM enrollments and maintains push tokens.
	//
	// Apple Doc:
	// https://developer.apple.com/documentation/devicemanagement/check-in
	Checkin(context.Context, *CheckinRequest) (*httpbody.HttpBody, error)
	// Acknowledge requests come from the client after the device receives an APNS
	// notification. The device will report readiness to accept a new command or
	// and acknowledge the status of a previously issued command.
	Acknowledge(context.Context, *AcknowledgeRequest) (*httpbody.HttpBody, error)
}

// UnimplementedCheckinServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCheckinServiceServer struct {
}

func (*UnimplementedCheckinServiceServer) Checkin(context.Context, *CheckinRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Checkin not implemented")
}
func (*UnimplementedCheckinServiceServer) Acknowledge(context.Context, *AcknowledgeRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Acknowledge not implemented")
}

func RegisterCheckinServiceServer(s prpc.Registrar, srv CheckinServiceServer) {
	s.RegisterService(&_CheckinService_serviceDesc, srv)
}

func _CheckinService_Checkin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckinServiceServer).Checkin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ops.macops.mdm.mega.CheckinService/Checkin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckinServiceServer).Checkin(ctx, req.(*CheckinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CheckinService_Acknowledge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcknowledgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckinServiceServer).Acknowledge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ops.macops.mdm.mega.CheckinService/Acknowledge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckinServiceServer).Acknowledge(ctx, req.(*AcknowledgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CheckinService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ops.macops.mdm.mega.CheckinService",
	HandlerType: (*CheckinServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Checkin",
			Handler:    _CheckinService_Checkin_Handler,
		},
		{
			MethodName: "Acknowledge",
			Handler:    _CheckinService_Acknowledge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/unifiedfleet/app/dumper/megamdm_proto/checkin.proto",
}
