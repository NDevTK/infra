// Copyright 2020 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: infra/unifiedfleet/app/config/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Config is the configuration data served by luci-config for this app.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuciConfigService      string           `protobuf:"bytes,1,opt,name=luci_config_service,json=luciConfigService,proto3" json:"luci_config_service,omitempty"`
	CrosNetworkConfig      *OSNetworkConfig `protobuf:"bytes,2,opt,name=cros_network_config,json=crosNetworkConfig,proto3" json:"cros_network_config,omitempty"`
	BucketName             string           `protobuf:"bytes,3,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	MachineDbConfigService string           `protobuf:"bytes,4,opt,name=machine_db_config_service,json=machineDbConfigService,proto3" json:"machine_db_config_service,omitempty"`
	MachineDbHost          string           `protobuf:"bytes,7,opt,name=machine_db_host,json=machineDbHost,proto3" json:"machine_db_host,omitempty"`
	CrosInventoryHost      string           `protobuf:"bytes,5,opt,name=cros_inventory_host,json=crosInventoryHost,proto3" json:"cros_inventory_host,omitempty"`
	SelfStorageBucket      string           `protobuf:"bytes,6,opt,name=self_storage_bucket,json=selfStorageBucket,proto3" json:"self_storage_bucket,omitempty"`
	Hart                   *PubSub          `protobuf:"bytes,8,opt,name=hart,proto3" json:"hart,omitempty"`
	SheetServiceAccount    string           `protobuf:"bytes,9,opt,name=sheet_service_account,json=sheetServiceAccount,proto3" json:"sheet_service_account,omitempty"`
	// The hostname of drone-queen service to push inventory to.
	QueenService string `protobuf:"bytes,10,opt,name=queen_service,json=queenService,proto3" json:"queen_service,omitempty"`
	// cron job for dronequeen push.
	EnableDronequeenPush bool `protobuf:"varint,11,opt,name=enable_dronequeen_push,json=enableDronequeenPush,proto3" json:"enable_dronequeen_push,omitempty"`
	// cron job for Inv2 to UFS sync(MachineLSE/Asset).
	DisableInv2Sync bool `protobuf:"varint,12,opt,name=disable_inv2_sync,json=disableInv2Sync,proto3" json:"disable_inv2_sync,omitempty"`
	// cron job for UFS to IV2(lab and stateconfig) BQ push.
	EnableLabStateconfigPush bool `protobuf:"varint,13,opt,name=enable_lab_stateconfig_push,json=enableLabStateconfigPush,proto3" json:"enable_lab_stateconfig_push,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_app_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetLuciConfigService() string {
	if x != nil {
		return x.LuciConfigService
	}
	return ""
}

func (x *Config) GetCrosNetworkConfig() *OSNetworkConfig {
	if x != nil {
		return x.CrosNetworkConfig
	}
	return nil
}

func (x *Config) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *Config) GetMachineDbConfigService() string {
	if x != nil {
		return x.MachineDbConfigService
	}
	return ""
}

func (x *Config) GetMachineDbHost() string {
	if x != nil {
		return x.MachineDbHost
	}
	return ""
}

func (x *Config) GetCrosInventoryHost() string {
	if x != nil {
		return x.CrosInventoryHost
	}
	return ""
}

func (x *Config) GetSelfStorageBucket() string {
	if x != nil {
		return x.SelfStorageBucket
	}
	return ""
}

func (x *Config) GetHart() *PubSub {
	if x != nil {
		return x.Hart
	}
	return nil
}

func (x *Config) GetSheetServiceAccount() string {
	if x != nil {
		return x.SheetServiceAccount
	}
	return ""
}

func (x *Config) GetQueenService() string {
	if x != nil {
		return x.QueenService
	}
	return ""
}

func (x *Config) GetEnableDronequeenPush() bool {
	if x != nil {
		return x.EnableDronequeenPush
	}
	return false
}

func (x *Config) GetDisableInv2Sync() bool {
	if x != nil {
		return x.DisableInv2Sync
	}
	return false
}

func (x *Config) GetEnableLabStateconfigPush() bool {
	if x != nil {
		return x.EnableLabStateconfigPush
	}
	return false
}

type OSNetworkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GitilesHost         string                               `protobuf:"bytes,1,opt,name=gitiles_host,json=gitilesHost,proto3" json:"gitiles_host,omitempty"`
	Project             string                               `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	Branch              string                               `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	CrosNetworkTopology []*OSNetworkConfig_OSNetworkTopology `protobuf:"bytes,4,rep,name=cros_network_topology,json=crosNetworkTopology,proto3" json:"cros_network_topology,omitempty"`
}

func (x *OSNetworkConfig) Reset() {
	*x = OSNetworkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSNetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSNetworkConfig) ProtoMessage() {}

func (x *OSNetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSNetworkConfig.ProtoReflect.Descriptor instead.
func (*OSNetworkConfig) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_app_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *OSNetworkConfig) GetGitilesHost() string {
	if x != nil {
		return x.GitilesHost
	}
	return ""
}

func (x *OSNetworkConfig) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *OSNetworkConfig) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *OSNetworkConfig) GetCrosNetworkTopology() []*OSNetworkConfig_OSNetworkTopology {
	if x != nil {
		return x.CrosNetworkTopology
	}
	return nil
}

type PubSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Topic   string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	// Batch size for batching publish requests for asset_info update. HaRT
	// services have been known to fail for batch_size > 100. Changing this
	// value might disable HaRT updates.
	BatchSize uint32 `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
}

func (x *PubSub) Reset() {
	*x = PubSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubSub) ProtoMessage() {}

func (x *PubSub) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubSub.ProtoReflect.Descriptor instead.
func (*PubSub) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_app_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *PubSub) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *PubSub) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *PubSub) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type OSNetworkConfig_OSNetworkTopology struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RemotePath string `protobuf:"bytes,2,opt,name=remote_path,json=remotePath,proto3" json:"remote_path,omitempty"`
	SheetId    string `protobuf:"bytes,3,opt,name=sheet_id,json=sheetId,proto3" json:"sheet_id,omitempty"`
}

func (x *OSNetworkConfig_OSNetworkTopology) Reset() {
	*x = OSNetworkConfig_OSNetworkTopology{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSNetworkConfig_OSNetworkTopology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSNetworkConfig_OSNetworkTopology) ProtoMessage() {}

func (x *OSNetworkConfig_OSNetworkTopology) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_app_config_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSNetworkConfig_OSNetworkTopology.ProtoReflect.Descriptor instead.
func (*OSNetworkConfig_OSNetworkTopology) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_app_config_config_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OSNetworkConfig_OSNetworkTopology) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OSNetworkConfig_OSNetworkTopology) GetRemotePath() string {
	if x != nil {
		return x.RemotePath
	}
	return ""
}

func (x *OSNetworkConfig_OSNetworkTopology) GetSheetId() string {
	if x != nil {
		return x.SheetId
	}
	return ""
}

var File_infra_unifiedfleet_app_config_config_proto protoreflect.FileDescriptor

var file_infra_unifiedfleet_app_config_config_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x75, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x8b, 0x05, 0x0a, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x75, 0x63, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6c, 0x75, 0x63, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x63, 0x72, 0x6f, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x75, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x53,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x63,
	0x72, 0x6f, 0x73, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x19, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x62, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x44, 0x62, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x62, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x44, 0x62,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x72, 0x6f, 0x73, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x72, 0x6f, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x04, 0x68, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x64, 0x72, 0x6f, 0x6e, 0x65, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x6f,
	0x6e, 0x65, 0x71, 0x75, 0x65, 0x65, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x32, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x76, 0x32, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x3d, 0x0a, 0x1b, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x75, 0x73, 0x68, 0x22, 0xae, 0x02, 0x0a, 0x0f, 0x4f, 0x53, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x69,
	0x74, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x67, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x61, 0x0a, 0x15, 0x63, 0x72, 0x6f, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x75, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x53, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x53, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x13, 0x63,
	0x72, 0x6f, 0x73, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x1a, 0x63, 0x0a, 0x11, 0x4f, 0x53, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x53, 0x75,
	0x62, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65,
	0x42, 0x1f, 0x5a, 0x1d, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_unifiedfleet_app_config_config_proto_rawDescOnce sync.Once
	file_infra_unifiedfleet_app_config_config_proto_rawDescData = file_infra_unifiedfleet_app_config_config_proto_rawDesc
)

func file_infra_unifiedfleet_app_config_config_proto_rawDescGZIP() []byte {
	file_infra_unifiedfleet_app_config_config_proto_rawDescOnce.Do(func() {
		file_infra_unifiedfleet_app_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_unifiedfleet_app_config_config_proto_rawDescData)
	})
	return file_infra_unifiedfleet_app_config_config_proto_rawDescData
}

var file_infra_unifiedfleet_app_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_infra_unifiedfleet_app_config_config_proto_goTypes = []interface{}{
	(*Config)(nil),                            // 0: ufs.config.Config
	(*OSNetworkConfig)(nil),                   // 1: ufs.config.OSNetworkConfig
	(*PubSub)(nil),                            // 2: ufs.config.PubSub
	(*OSNetworkConfig_OSNetworkTopology)(nil), // 3: ufs.config.OSNetworkConfig.OSNetworkTopology
}
var file_infra_unifiedfleet_app_config_config_proto_depIdxs = []int32{
	1, // 0: ufs.config.Config.cros_network_config:type_name -> ufs.config.OSNetworkConfig
	2, // 1: ufs.config.Config.hart:type_name -> ufs.config.PubSub
	3, // 2: ufs.config.OSNetworkConfig.cros_network_topology:type_name -> ufs.config.OSNetworkConfig.OSNetworkTopology
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_infra_unifiedfleet_app_config_config_proto_init() }
func file_infra_unifiedfleet_app_config_config_proto_init() {
	if File_infra_unifiedfleet_app_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_unifiedfleet_app_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_app_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSNetworkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_app_config_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_app_config_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSNetworkConfig_OSNetworkTopology); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_unifiedfleet_app_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_unifiedfleet_app_config_config_proto_goTypes,
		DependencyIndexes: file_infra_unifiedfleet_app_config_config_proto_depIdxs,
		MessageInfos:      file_infra_unifiedfleet_app_config_config_proto_msgTypes,
	}.Build()
	File_infra_unifiedfleet_app_config_config_proto = out.File
	file_infra_unifiedfleet_app_config_config_proto_rawDesc = nil
	file_infra_unifiedfleet_app_config_config_proto_goTypes = nil
	file_infra_unifiedfleet_app_config_config_proto_depIdxs = nil
}
