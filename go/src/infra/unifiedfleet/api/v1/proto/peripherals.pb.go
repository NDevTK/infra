// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/unifiedfleet/api/v1/proto/peripherals.proto

package ufspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KVM struct {
	// Unique serial_number or asset tag
	// The format will be kvms/{kvm}
	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MacAddress string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Should match one of the predefined Chrome Platforms.
	// Refers to ChromePlatform name
	ChromePlatform string `protobuf:"bytes,3,opt,name=chrome_platform,json=chromePlatform,proto3" json:"chrome_platform,omitempty"`
	CapacityPort   int32  `protobuf:"varint,4,opt,name=capacity_port,json=capacityPort,proto3" json:"capacity_port,omitempty"`
	// Record the last update timestamp of this machine (In UTC timezone)
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Refers to Rack name
	Rack                 string   `protobuf:"bytes,6,opt,name=rack,proto3" json:"rack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVM) Reset()         { *m = KVM{} }
func (m *KVM) String() string { return proto.CompactTextString(m) }
func (*KVM) ProtoMessage()    {}
func (*KVM) Descriptor() ([]byte, []int) {
	return fileDescriptor_73081a5490cf069c, []int{0}
}

func (m *KVM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVM.Unmarshal(m, b)
}
func (m *KVM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVM.Marshal(b, m, deterministic)
}
func (m *KVM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVM.Merge(m, src)
}
func (m *KVM) XXX_Size() int {
	return xxx_messageInfo_KVM.Size(m)
}
func (m *KVM) XXX_DiscardUnknown() {
	xxx_messageInfo_KVM.DiscardUnknown(m)
}

var xxx_messageInfo_KVM proto.InternalMessageInfo

func (m *KVM) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KVM) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *KVM) GetChromePlatform() string {
	if m != nil {
		return m.ChromePlatform
	}
	return ""
}

func (m *KVM) GetCapacityPort() int32 {
	if m != nil {
		return m.CapacityPort
	}
	return 0
}

func (m *KVM) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *KVM) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

// Refer to one port of a given KVM
type KVMInterface struct {
	// Refers to KVM name
	Kvm                  string   `protobuf:"bytes,1,opt,name=kvm,proto3" json:"kvm,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVMInterface) Reset()         { *m = KVMInterface{} }
func (m *KVMInterface) String() string { return proto.CompactTextString(m) }
func (*KVMInterface) ProtoMessage()    {}
func (*KVMInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_73081a5490cf069c, []int{1}
}

func (m *KVMInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVMInterface.Unmarshal(m, b)
}
func (m *KVMInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVMInterface.Marshal(b, m, deterministic)
}
func (m *KVMInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVMInterface.Merge(m, src)
}
func (m *KVMInterface) XXX_Size() int {
	return xxx_messageInfo_KVMInterface.Size(m)
}
func (m *KVMInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_KVMInterface.DiscardUnknown(m)
}

var xxx_messageInfo_KVMInterface proto.InternalMessageInfo

func (m *KVMInterface) GetKvm() string {
	if m != nil {
		return m.Kvm
	}
	return ""
}

func (m *KVMInterface) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type RPM struct {
	// Unique serial_number or asset tag
	// The format will be rpms/{rpm}
	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MacAddress   string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	CapacityPort int32  `protobuf:"varint,3,opt,name=capacity_port,json=capacityPort,proto3" json:"capacity_port,omitempty"`
	// Just for record here, can be added later if needed
	// To be recorded: model, manufacturer, amperage, voltage
	// Record the last update timestamp of this machine (In UTC timezone)
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Refers to Rack name
	Rack                 string   `protobuf:"bytes,5,opt,name=rack,proto3" json:"rack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPM) Reset()         { *m = RPM{} }
func (m *RPM) String() string { return proto.CompactTextString(m) }
func (*RPM) ProtoMessage()    {}
func (*RPM) Descriptor() ([]byte, []int) {
	return fileDescriptor_73081a5490cf069c, []int{2}
}

func (m *RPM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPM.Unmarshal(m, b)
}
func (m *RPM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPM.Marshal(b, m, deterministic)
}
func (m *RPM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPM.Merge(m, src)
}
func (m *RPM) XXX_Size() int {
	return xxx_messageInfo_RPM.Size(m)
}
func (m *RPM) XXX_DiscardUnknown() {
	xxx_messageInfo_RPM.DiscardUnknown(m)
}

var xxx_messageInfo_RPM proto.InternalMessageInfo

func (m *RPM) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RPM) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *RPM) GetCapacityPort() int32 {
	if m != nil {
		return m.CapacityPort
	}
	return 0
}

func (m *RPM) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *RPM) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

// Refer to one port of a given RPM
type RPMInterface struct {
	// Refers to RPM name
	Rpm                  string   `protobuf:"bytes,1,opt,name=rpm,proto3" json:"rpm,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPMInterface) Reset()         { *m = RPMInterface{} }
func (m *RPMInterface) String() string { return proto.CompactTextString(m) }
func (*RPMInterface) ProtoMessage()    {}
func (*RPMInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_73081a5490cf069c, []int{3}
}

func (m *RPMInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPMInterface.Unmarshal(m, b)
}
func (m *RPMInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPMInterface.Marshal(b, m, deterministic)
}
func (m *RPMInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPMInterface.Merge(m, src)
}
func (m *RPMInterface) XXX_Size() int {
	return xxx_messageInfo_RPMInterface.Size(m)
}
func (m *RPMInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_RPMInterface.DiscardUnknown(m)
}

var xxx_messageInfo_RPMInterface proto.InternalMessageInfo

func (m *RPMInterface) GetRpm() string {
	if m != nil {
		return m.Rpm
	}
	return ""
}

func (m *RPMInterface) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Switch struct {
	// Unique serial_number or asset tag
	// The format will be switches/{switch}
	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CapacityPort int32  `protobuf:"varint,2,opt,name=capacity_port,json=capacityPort,proto3" json:"capacity_port,omitempty"`
	// Record the last update timestamp of this machine (In UTC timezone)
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Refers to Rack name
	Rack                 string   `protobuf:"bytes,4,opt,name=rack,proto3" json:"rack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Switch) Reset()         { *m = Switch{} }
func (m *Switch) String() string { return proto.CompactTextString(m) }
func (*Switch) ProtoMessage()    {}
func (*Switch) Descriptor() ([]byte, []int) {
	return fileDescriptor_73081a5490cf069c, []int{4}
}

func (m *Switch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Switch.Unmarshal(m, b)
}
func (m *Switch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Switch.Marshal(b, m, deterministic)
}
func (m *Switch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Switch.Merge(m, src)
}
func (m *Switch) XXX_Size() int {
	return xxx_messageInfo_Switch.Size(m)
}
func (m *Switch) XXX_DiscardUnknown() {
	xxx_messageInfo_Switch.DiscardUnknown(m)
}

var xxx_messageInfo_Switch proto.InternalMessageInfo

func (m *Switch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Switch) GetCapacityPort() int32 {
	if m != nil {
		return m.CapacityPort
	}
	return 0
}

func (m *Switch) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Switch) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

// Refer to one port of a given switch
type SwitchInterface struct {
	// Refers to Switch name
	Switch               string   `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchInterface) Reset()         { *m = SwitchInterface{} }
func (m *SwitchInterface) String() string { return proto.CompactTextString(m) }
func (*SwitchInterface) ProtoMessage()    {}
func (*SwitchInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_73081a5490cf069c, []int{5}
}

func (m *SwitchInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchInterface.Unmarshal(m, b)
}
func (m *SwitchInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchInterface.Marshal(b, m, deterministic)
}
func (m *SwitchInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchInterface.Merge(m, src)
}
func (m *SwitchInterface) XXX_Size() int {
	return xxx_messageInfo_SwitchInterface.Size(m)
}
func (m *SwitchInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchInterface.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchInterface proto.InternalMessageInfo

func (m *SwitchInterface) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *SwitchInterface) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Drac struct {
	// Unique serial_number or asset tag
	// The format will be dracs/{drac}
	Name            string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName     string           `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	MacAddress      string           `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	SwitchInterface *SwitchInterface `protobuf:"bytes,4,opt,name=switch_interface,json=switchInterface,proto3" json:"switch_interface,omitempty"`
	Password        string           `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	// Record the last update timestamp of this machine (In UTC timezone)
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Refers to Machine name
	Machine              string   `protobuf:"bytes,7,opt,name=machine,proto3" json:"machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Drac) Reset()         { *m = Drac{} }
func (m *Drac) String() string { return proto.CompactTextString(m) }
func (*Drac) ProtoMessage()    {}
func (*Drac) Descriptor() ([]byte, []int) {
	return fileDescriptor_73081a5490cf069c, []int{6}
}

func (m *Drac) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Drac.Unmarshal(m, b)
}
func (m *Drac) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Drac.Marshal(b, m, deterministic)
}
func (m *Drac) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Drac.Merge(m, src)
}
func (m *Drac) XXX_Size() int {
	return xxx_messageInfo_Drac.Size(m)
}
func (m *Drac) XXX_DiscardUnknown() {
	xxx_messageInfo_Drac.DiscardUnknown(m)
}

var xxx_messageInfo_Drac proto.InternalMessageInfo

func (m *Drac) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Drac) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Drac) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *Drac) GetSwitchInterface() *SwitchInterface {
	if m != nil {
		return m.SwitchInterface
	}
	return nil
}

func (m *Drac) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Drac) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Drac) GetMachine() string {
	if m != nil {
		return m.Machine
	}
	return ""
}

func init() {
	proto.RegisterType((*KVM)(nil), "unifiedfleet.api.v1.proto.KVM")
	proto.RegisterType((*KVMInterface)(nil), "unifiedfleet.api.v1.proto.KVMInterface")
	proto.RegisterType((*RPM)(nil), "unifiedfleet.api.v1.proto.RPM")
	proto.RegisterType((*RPMInterface)(nil), "unifiedfleet.api.v1.proto.RPMInterface")
	proto.RegisterType((*Switch)(nil), "unifiedfleet.api.v1.proto.Switch")
	proto.RegisterType((*SwitchInterface)(nil), "unifiedfleet.api.v1.proto.SwitchInterface")
	proto.RegisterType((*Drac)(nil), "unifiedfleet.api.v1.proto.Drac")
}

func init() {
	proto.RegisterFile("infra/unifiedfleet/api/v1/proto/peripherals.proto", fileDescriptor_73081a5490cf069c)
}

var fileDescriptor_73081a5490cf069c = []byte{
	// 693 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xc1, 0x6e, 0x13, 0x3d,
	0x10, 0xc7, 0x95, 0x6c, 0x9a, 0x7e, 0xdf, 0xa4, 0x50, 0xd8, 0x53, 0xe8, 0xa5, 0x25, 0x50, 0x9a,
	0x56, 0x74, 0x57, 0x29, 0xf4, 0x40, 0x8b, 0x28, 0x1b, 0x2a, 0x01, 0xaa, 0x82, 0x22, 0x03, 0x3d,
	0x20, 0xa1, 0x95, 0xe3, 0xf5, 0x26, 0x56, 0xb2, 0xb1, 0x65, 0x6f, 0x52, 0x55, 0x51, 0x6e, 0x3c,
	0x04, 0xaf, 0xc0, 0x5b, 0x71, 0xee, 0x0b, 0x20, 0xe5, 0x84, 0xd6, 0xde, 0x00, 0x4d, 0x83, 0xb6,
	0x8d, 0xc4, 0x69, 0xc7, 0x33, 0xfe, 0x8f, 0xc7, 0xbf, 0x19, 0x6b, 0xa1, 0xc6, 0xfa, 0xa1, 0xc4,
	0xee, 0xa0, 0xcf, 0x42, 0x46, 0x83, 0xb0, 0x47, 0x69, 0xec, 0x62, 0xc1, 0xdc, 0x61, 0xcd, 0x15,
	0x92, 0xc7, 0xdc, 0x15, 0x54, 0x32, 0xd1, 0xa1, 0x12, 0xf7, 0x94, 0xa3, 0x3d, 0xf6, 0xbd, 0x3f,
	0x37, 0x3b, 0x58, 0x30, 0x67, 0x58, 0x33, 0xa1, 0xb5, 0xf5, 0x36, 0xe7, 0xed, 0x1e, 0x35, 0xd2,
	0xd6, 0x20, 0x74, 0x63, 0x16, 0x51, 0x15, 0xe3, 0x48, 0xa4, 0x1b, 0x9e, 0xb5, 0xb9, 0x43, 0x3a,
	0x92, 0x47, 0x6c, 0x10, 0x39, 0x5c, 0xb6, 0xdd, 0xde, 0x80, 0x30, 0xb7, 0x2d, 0x05, 0x49, 0x8f,
	0x4b, 0x13, 0x24, 0x25, 0x48, 0xaa, 0xf8, 0x40, 0x12, 0x9a, 0x4a, 0x8f, 0x6e, 0x20, 0x0d, 0x19,
	0xed, 0x05, 0x7e, 0x8b, 0x76, 0xf0, 0x90, 0x71, 0x99, 0x26, 0xd8, 0xcf, 0xba, 0xaa, 0xce, 0x4e,
	0x7d, 0xd1, 0xc3, 0x71, 0xc8, 0x65, 0x64, 0x64, 0x95, 0x1f, 0x79, 0xb0, 0x4e, 0x4e, 0x1b, 0xb6,
	0x0d, 0x85, 0x3e, 0x8e, 0x68, 0x39, 0xb7, 0x91, 0xab, 0xfe, 0x8f, 0xb4, 0x6d, 0xaf, 0x43, 0x29,
	0xc2, 0xc4, 0xc7, 0x41, 0x20, 0xa9, 0x52, 0xe5, 0xbc, 0x0e, 0x41, 0x84, 0x89, 0x67, 0x3c, 0xf6,
	0x67, 0x58, 0x9d, 0xc9, 0x5a, 0xb6, 0x92, 0x4d, 0xf5, 0xa7, 0x13, 0xaf, 0x06, 0xd3, 0x5a, 0x76,
	0x75, 0x31, 0xbb, 0xea, 0x5c, 0xc5, 0x34, 0x72, 0xb0, 0x10, 0x4a, 0xf0, 0xd8, 0x21, 0x3c, 0x72,
	0x5f, 0x69, 0x71, 0x33, 0xd5, 0xa2, 0xdb, 0xe4, 0xd2, 0xda, 0x7e, 0x00, 0xb7, 0x08, 0x16, 0x98,
	0xb0, 0xf8, 0xdc, 0x17, 0x5c, 0xc6, 0xe5, 0xc2, 0x46, 0xae, 0xba, 0x84, 0x56, 0xa6, 0xce, 0x26,
	0x97, 0xb1, 0xfd, 0x12, 0x4a, 0x03, 0x11, 0xe0, 0x98, 0xfa, 0x49, 0x37, 0xca, 0x4b, 0x1b, 0xb9,
	0x6a, 0x69, 0x6f, 0xcd, 0x31, 0xb8, 0x9c, 0x69, 0xab, 0x9c, 0x0f, 0xd3, 0x56, 0xd5, 0xad, 0xef,
	0x9e, 0x85, 0xc0, 0x68, 0x12, 0xaf, 0xfd, 0x02, 0x0a, 0x12, 0x93, 0x6e, 0xb9, 0xa8, 0x4b, 0xdf,
	0x99, 0x78, 0x5b, 0xb0, 0x99, 0x59, 0x3a, 0xc2, 0xa4, 0x8b, 0xb4, 0xee, 0x60, 0xff, 0xc2, 0xdb,
	0x83, 0x87, 0x99, 0x8a, 0x84, 0x32, 0x74, 0x87, 0x91, 0x72, 0x47, 0xdd, 0x61, 0x34, 0xae, 0xf8,
	0xb0, 0x72, 0x72, 0xda, 0x78, 0xdb, 0x8f, 0xa9, 0x0c, 0x31, 0xa1, 0xf6, 0x21, 0x58, 0xdd, 0x61,
	0x64, 0x1a, 0x50, 0xdf, 0x9e, 0x78, 0x8f, 0xae, 0x97, 0x13, 0x25, 0xaa, 0xa4, 0x7d, 0x9a, 0x50,
	0x5e, 0x13, 0xd2, 0x76, 0xe5, 0x6b, 0x1e, 0x2c, 0xd4, 0x5c, 0xb0, 0xb5, 0x57, 0xd8, 0x5b, 0xd9,
	0xec, 0x0b, 0x8b, 0xb3, 0x5f, 0xfa, 0xb7, 0xec, 0x13, 0x0c, 0x20, 0x45, 0xc2, 0x5e, 0x0a, 0xc3,
	0x1e, 0x35, 0x2f, 0xb3, 0x97, 0xe2, 0x86, 0xec, 0x51, 0xb3, 0x81, 0x12, 0xd5, 0x5c, 0xf6, 0x5f,
	0xf2, 0x50, 0x7c, 0x7f, 0xc6, 0x62, 0xd2, 0x99, 0x8b, 0xff, 0x0a, 0xdd, 0x7c, 0x36, 0x5d, 0x6b,
	0x71, 0xba, 0x85, 0x05, 0xe9, 0x1e, 0x5d, 0x78, 0xcf, 0x61, 0x2b, 0x53, 0x91, 0x5e, 0xf4, 0xae,
	0xd2, 0x5f, 0xaa, 0xdc, 0x91, 0xb1, 0xc6, 0x95, 0x2e, 0xac, 0x9a, 0xe0, 0x6f, 0xd4, 0xc7, 0x50,
	0x34, 0xd1, 0x94, 0xf6, 0xe3, 0x89, 0xb7, 0x7d, 0xed, 0x33, 0x50, 0xaa, 0x9d, 0xcb, 0xfc, 0x9b,
	0x05, 0x85, 0x63, 0x89, 0xc9, 0x5c, 0xe2, 0xf7, 0x61, 0x25, 0x60, 0x4a, 0xf4, 0xf0, 0xb9, 0xaf,
	0x63, 0x66, 0xe2, 0x4b, 0xa9, 0xef, 0xdd, 0x9c, 0x37, 0x61, 0x5d, 0x79, 0x13, 0x1f, 0xe1, 0x8e,
	0x39, 0xde, 0x67, 0xd3, 0xeb, 0xa4, 0x33, 0xbf, 0xe3, 0xfc, 0xf5, 0xaf, 0xe1, 0xcc, 0x00, 0x40,
	0xab, 0x6a, 0x86, 0xc8, 0x1a, 0xfc, 0x27, 0xb0, 0x52, 0x67, 0x5c, 0x06, 0xe6, 0x1d, 0xa0, 0x5f,
	0xeb, 0xd9, 0x19, 0x28, 0xde, 0x7c, 0x06, 0x5e, 0xc3, 0x72, 0x84, 0x49, 0x87, 0xf5, 0x69, 0x79,
	0x59, 0x03, 0xdf, 0x9d, 0x78, 0x3b, 0x50, 0xcd, 0x04, 0xde, 0x30, 0x22, 0x34, 0x55, 0x1f, 0x9c,
	0x5c, 0x78, 0x6f, 0xae, 0x31, 0x3e, 0xba, 0x03, 0xeb, 0xa9, 0x48, 0xb9, 0xa3, 0xd4, 0x1a, 0xbb,
	0x81, 0xc4, 0x44, 0xb9, 0xa3, 0xe4, 0x33, 0xae, 0x6f, 0x7d, 0xda, 0xcc, 0xf8, 0x5f, 0x1d, 0x0e,
	0x42, 0x25, 0x5a, 0xad, 0xa2, 0x5e, 0x3c, 0xf9, 0x19, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xae, 0xd0,
	0x88, 0xca, 0x07, 0x00, 0x00,
}
