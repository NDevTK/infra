// Copyright 2020 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: infra/unifiedfleet/api/v1/proto/bigquery/bq.proto

package apibq

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	proto1 "infra/unifiedfleet/api/v1/proto"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ChangeEventRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeEvent *proto1.ChangeEvent `protobuf:"bytes,1,opt,name=change_event,json=changeEvent,proto3" json:"change_event,omitempty"`
}

func (x *ChangeEventRow) Reset() {
	*x = ChangeEventRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeEventRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEventRow) ProtoMessage() {}

func (x *ChangeEventRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEventRow.ProtoReflect.Descriptor instead.
func (*ChangeEventRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{0}
}

func (x *ChangeEventRow) GetChangeEvent() *proto1.ChangeEvent {
	if x != nil {
		return x.ChangeEvent
	}
	return nil
}

type ChromePlatformRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform *proto1.ChromePlatform `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ChromePlatformRow) Reset() {
	*x = ChromePlatformRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChromePlatformRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChromePlatformRow) ProtoMessage() {}

func (x *ChromePlatformRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChromePlatformRow.ProtoReflect.Descriptor instead.
func (*ChromePlatformRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{1}
}

func (x *ChromePlatformRow) GetPlatform() *proto1.ChromePlatform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type VlanRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vlan *proto1.Vlan `protobuf:"bytes,1,opt,name=vlan,proto3" json:"vlan,omitempty"`
}

func (x *VlanRow) Reset() {
	*x = VlanRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VlanRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlanRow) ProtoMessage() {}

func (x *VlanRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlanRow.ProtoReflect.Descriptor instead.
func (*VlanRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{2}
}

func (x *VlanRow) GetVlan() *proto1.Vlan {
	if x != nil {
		return x.Vlan
	}
	return nil
}

type MachineRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *proto1.Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *MachineRow) Reset() {
	*x = MachineRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineRow) ProtoMessage() {}

func (x *MachineRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineRow.ProtoReflect.Descriptor instead.
func (*MachineRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{3}
}

func (x *MachineRow) GetMachine() *proto1.Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type RackRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rack *proto1.Rack `protobuf:"bytes,1,opt,name=rack,proto3" json:"rack,omitempty"`
}

func (x *RackRow) Reset() {
	*x = RackRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RackRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RackRow) ProtoMessage() {}

func (x *RackRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RackRow.ProtoReflect.Descriptor instead.
func (*RackRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{4}
}

func (x *RackRow) GetRack() *proto1.Rack {
	if x != nil {
		return x.Rack
	}
	return nil
}

type RackLSEPrototypeRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RackLsePrototype *proto1.RackLSEPrototype `protobuf:"bytes,1,opt,name=rack_lse_prototype,json=rackLsePrototype,proto3" json:"rack_lse_prototype,omitempty"`
}

func (x *RackLSEPrototypeRow) Reset() {
	*x = RackLSEPrototypeRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RackLSEPrototypeRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RackLSEPrototypeRow) ProtoMessage() {}

func (x *RackLSEPrototypeRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RackLSEPrototypeRow.ProtoReflect.Descriptor instead.
func (*RackLSEPrototypeRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{5}
}

func (x *RackLSEPrototypeRow) GetRackLsePrototype() *proto1.RackLSEPrototype {
	if x != nil {
		return x.RackLsePrototype
	}
	return nil
}

type MachineLSEPrototypeRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineLsePrototype *proto1.MachineLSEPrototype `protobuf:"bytes,1,opt,name=machine_lse_prototype,json=machineLsePrototype,proto3" json:"machine_lse_prototype,omitempty"`
}

func (x *MachineLSEPrototypeRow) Reset() {
	*x = MachineLSEPrototypeRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineLSEPrototypeRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineLSEPrototypeRow) ProtoMessage() {}

func (x *MachineLSEPrototypeRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineLSEPrototypeRow.ProtoReflect.Descriptor instead.
func (*MachineLSEPrototypeRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{6}
}

func (x *MachineLSEPrototypeRow) GetMachineLsePrototype() *proto1.MachineLSEPrototype {
	if x != nil {
		return x.MachineLsePrototype
	}
	return nil
}

type MachineLSERow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineLse *proto1.MachineLSE `protobuf:"bytes,1,opt,name=machine_lse,json=machineLse,proto3" json:"machine_lse,omitempty"`
}

func (x *MachineLSERow) Reset() {
	*x = MachineLSERow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineLSERow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineLSERow) ProtoMessage() {}

func (x *MachineLSERow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineLSERow.ProtoReflect.Descriptor instead.
func (*MachineLSERow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{7}
}

func (x *MachineLSERow) GetMachineLse() *proto1.MachineLSE {
	if x != nil {
		return x.MachineLse
	}
	return nil
}

type RackLSERow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RackLse *proto1.RackLSE `protobuf:"bytes,1,opt,name=rack_lse,json=rackLse,proto3" json:"rack_lse,omitempty"`
}

func (x *RackLSERow) Reset() {
	*x = RackLSERow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RackLSERow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RackLSERow) ProtoMessage() {}

func (x *RackLSERow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RackLSERow.ProtoReflect.Descriptor instead.
func (*RackLSERow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{8}
}

func (x *RackLSERow) GetRackLse() *proto1.RackLSE {
	if x != nil {
		return x.RackLse
	}
	return nil
}

type StateRecordRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRecord *proto1.StateRecord `protobuf:"bytes,1,opt,name=state_record,json=stateRecord,proto3" json:"state_record,omitempty"`
}

func (x *StateRecordRow) Reset() {
	*x = StateRecordRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRecordRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRecordRow) ProtoMessage() {}

func (x *StateRecordRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRecordRow.ProtoReflect.Descriptor instead.
func (*StateRecordRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{9}
}

func (x *StateRecordRow) GetStateRecord() *proto1.StateRecord {
	if x != nil {
		return x.StateRecord
	}
	return nil
}

type KVMRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kvm *proto1.KVM `protobuf:"bytes,1,opt,name=kvm,proto3" json:"kvm,omitempty"`
}

func (x *KVMRow) Reset() {
	*x = KVMRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVMRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVMRow) ProtoMessage() {}

func (x *KVMRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVMRow.ProtoReflect.Descriptor instead.
func (*KVMRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{10}
}

func (x *KVMRow) GetKvm() *proto1.KVM {
	if x != nil {
		return x.Kvm
	}
	return nil
}

type RPMRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rpm *proto1.RPM `protobuf:"bytes,1,opt,name=rpm,proto3" json:"rpm,omitempty"`
}

func (x *RPMRow) Reset() {
	*x = RPMRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPMRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPMRow) ProtoMessage() {}

func (x *RPMRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPMRow.ProtoReflect.Descriptor instead.
func (*RPMRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{11}
}

func (x *RPMRow) GetRpm() *proto1.RPM {
	if x != nil {
		return x.Rpm
	}
	return nil
}

type SwitchRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch *proto1.Switch `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
}

func (x *SwitchRow) Reset() {
	*x = SwitchRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchRow) ProtoMessage() {}

func (x *SwitchRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchRow.ProtoReflect.Descriptor instead.
func (*SwitchRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{12}
}

func (x *SwitchRow) GetSwitch() *proto1.Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

type DracRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drac *proto1.Drac `protobuf:"bytes,1,opt,name=drac,proto3" json:"drac,omitempty"`
}

func (x *DracRow) Reset() {
	*x = DracRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DracRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DracRow) ProtoMessage() {}

func (x *DracRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DracRow.ProtoReflect.Descriptor instead.
func (*DracRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{13}
}

func (x *DracRow) GetDrac() *proto1.Drac {
	if x != nil {
		return x.Drac
	}
	return nil
}

type NicRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nic *proto1.Nic `protobuf:"bytes,1,opt,name=nic,proto3" json:"nic,omitempty"`
}

func (x *NicRow) Reset() {
	*x = NicRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NicRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NicRow) ProtoMessage() {}

func (x *NicRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NicRow.ProtoReflect.Descriptor instead.
func (*NicRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{14}
}

func (x *NicRow) GetNic() *proto1.Nic {
	if x != nil {
		return x.Nic
	}
	return nil
}

type DHCPConfigRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DhcpConfig *proto1.DHCPConfig `protobuf:"bytes,1,opt,name=dhcp_config,json=dhcpConfig,proto3" json:"dhcp_config,omitempty"`
}

func (x *DHCPConfigRow) Reset() {
	*x = DHCPConfigRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DHCPConfigRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DHCPConfigRow) ProtoMessage() {}

func (x *DHCPConfigRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DHCPConfigRow.ProtoReflect.Descriptor instead.
func (*DHCPConfigRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{15}
}

func (x *DHCPConfigRow) GetDhcpConfig() *proto1.DHCPConfig {
	if x != nil {
		return x.DhcpConfig
	}
	return nil
}

type IPRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip *proto1.IP `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *IPRow) Reset() {
	*x = IPRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPRow) ProtoMessage() {}

func (x *IPRow) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPRow.ProtoReflect.Descriptor instead.
func (*IPRow) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP(), []int{16}
}

func (x *IPRow) GetIp() *proto1.IP {
	if x != nil {
		return x.Ip
	}
	return nil
}

var File_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto protoreflect.FileDescriptor

var file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDesc = []byte{
	0x0a, 0x31, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x62, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x62, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x22, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62,
	0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x32, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x72,
	0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x33, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f,
	0x6c, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f,
	0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x65, 0x72, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x61, 0x63,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x49, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x75,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x5a, 0x0a, 0x11, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x77, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x3e, 0x0a,
	0x07, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x6f, 0x77, 0x12, 0x33, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x22, 0x4a, 0x0a,
	0x0a, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x3c, 0x0a, 0x07, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x3e, 0x0a, 0x07, 0x52, 0x61, 0x63,
	0x6b, 0x52, 0x6f, 0x77, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x61, 0x63, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x70, 0x0a, 0x13, 0x52, 0x61, 0x63,
	0x6b, 0x4c, 0x53, 0x45, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x6f, 0x77,
	0x12, 0x59, 0x0a, 0x12, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x75,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x63, 0x6b, 0x4c, 0x53, 0x45,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x10, 0x72, 0x61, 0x63, 0x6b, 0x4c,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7c, 0x0a, 0x16, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x53, 0x45, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x62, 0x0a, 0x15, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x6c, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c,
	0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x53, 0x45, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x13, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x57, 0x0a, 0x0d, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x4c, 0x53, 0x45, 0x52, 0x6f, 0x77, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x4c, 0x53, 0x45, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c,
	0x73, 0x65, 0x22, 0x4b, 0x0a, 0x0a, 0x52, 0x61, 0x63, 0x6b, 0x4c, 0x53, 0x45, 0x52, 0x6f, 0x77,
	0x12, 0x3d, 0x0a, 0x08, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x61, 0x63, 0x6b, 0x4c, 0x53, 0x45, 0x52, 0x07, 0x72, 0x61, 0x63, 0x6b, 0x4c, 0x73, 0x65, 0x22,
	0x5b, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f,
	0x77, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x3a, 0x0a, 0x06,
	0x4b, 0x56, 0x4d, 0x52, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x03, 0x6b, 0x76, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4b, 0x56, 0x4d, 0x52, 0x03, 0x6b, 0x76, 0x6d, 0x22, 0x3a, 0x0a, 0x06, 0x52, 0x50, 0x4d, 0x52,
	0x6f, 0x77, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x70, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x50, 0x4d, 0x52,
	0x03, 0x72, 0x70, 0x6d, 0x22, 0x46, 0x0a, 0x09, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x6f,
	0x77, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x3e, 0x0a, 0x07,
	0x44, 0x72, 0x61, 0x63, 0x52, 0x6f, 0x77, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x72, 0x61, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x72, 0x61, 0x63, 0x52, 0x04, 0x64, 0x72, 0x61, 0x63, 0x22, 0x3a, 0x0a, 0x06,
	0x4e, 0x69, 0x63, 0x52, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x03, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x69, 0x63, 0x52, 0x03, 0x6e, 0x69, 0x63, 0x22, 0x57, 0x0a, 0x0d, 0x44, 0x48, 0x43, 0x50,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x6f, 0x77, 0x12, 0x46, 0x0a, 0x0b, 0x64, 0x68, 0x63,
	0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x48, 0x43, 0x50, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x64, 0x68, 0x63, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x36, 0x0a, 0x05, 0x49, 0x50, 0x52, 0x6f, 0x77, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x50, 0x52, 0x02, 0x69, 0x70, 0x42, 0x30, 0x5a, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x67,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x71, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescOnce sync.Once
	file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescData = file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDesc
)

func file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescGZIP() []byte {
	file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescOnce.Do(func() {
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescData)
	})
	return file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDescData
}

var file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_goTypes = []interface{}{
	(*ChangeEventRow)(nil),             // 0: unifiedfleet.api.v1.proto.bigquery.ChangeEventRow
	(*ChromePlatformRow)(nil),          // 1: unifiedfleet.api.v1.proto.bigquery.ChromePlatformRow
	(*VlanRow)(nil),                    // 2: unifiedfleet.api.v1.proto.bigquery.VlanRow
	(*MachineRow)(nil),                 // 3: unifiedfleet.api.v1.proto.bigquery.MachineRow
	(*RackRow)(nil),                    // 4: unifiedfleet.api.v1.proto.bigquery.RackRow
	(*RackLSEPrototypeRow)(nil),        // 5: unifiedfleet.api.v1.proto.bigquery.RackLSEPrototypeRow
	(*MachineLSEPrototypeRow)(nil),     // 6: unifiedfleet.api.v1.proto.bigquery.MachineLSEPrototypeRow
	(*MachineLSERow)(nil),              // 7: unifiedfleet.api.v1.proto.bigquery.MachineLSERow
	(*RackLSERow)(nil),                 // 8: unifiedfleet.api.v1.proto.bigquery.RackLSERow
	(*StateRecordRow)(nil),             // 9: unifiedfleet.api.v1.proto.bigquery.StateRecordRow
	(*KVMRow)(nil),                     // 10: unifiedfleet.api.v1.proto.bigquery.KVMRow
	(*RPMRow)(nil),                     // 11: unifiedfleet.api.v1.proto.bigquery.RPMRow
	(*SwitchRow)(nil),                  // 12: unifiedfleet.api.v1.proto.bigquery.SwitchRow
	(*DracRow)(nil),                    // 13: unifiedfleet.api.v1.proto.bigquery.DracRow
	(*NicRow)(nil),                     // 14: unifiedfleet.api.v1.proto.bigquery.NicRow
	(*DHCPConfigRow)(nil),              // 15: unifiedfleet.api.v1.proto.bigquery.DHCPConfigRow
	(*IPRow)(nil),                      // 16: unifiedfleet.api.v1.proto.bigquery.IPRow
	(*proto1.ChangeEvent)(nil),         // 17: unifiedfleet.api.v1.proto.ChangeEvent
	(*proto1.ChromePlatform)(nil),      // 18: unifiedfleet.api.v1.proto.ChromePlatform
	(*proto1.Vlan)(nil),                // 19: unifiedfleet.api.v1.proto.Vlan
	(*proto1.Machine)(nil),             // 20: unifiedfleet.api.v1.proto.Machine
	(*proto1.Rack)(nil),                // 21: unifiedfleet.api.v1.proto.Rack
	(*proto1.RackLSEPrototype)(nil),    // 22: unifiedfleet.api.v1.proto.RackLSEPrototype
	(*proto1.MachineLSEPrototype)(nil), // 23: unifiedfleet.api.v1.proto.MachineLSEPrototype
	(*proto1.MachineLSE)(nil),          // 24: unifiedfleet.api.v1.proto.MachineLSE
	(*proto1.RackLSE)(nil),             // 25: unifiedfleet.api.v1.proto.RackLSE
	(*proto1.StateRecord)(nil),         // 26: unifiedfleet.api.v1.proto.StateRecord
	(*proto1.KVM)(nil),                 // 27: unifiedfleet.api.v1.proto.KVM
	(*proto1.RPM)(nil),                 // 28: unifiedfleet.api.v1.proto.RPM
	(*proto1.Switch)(nil),              // 29: unifiedfleet.api.v1.proto.Switch
	(*proto1.Drac)(nil),                // 30: unifiedfleet.api.v1.proto.Drac
	(*proto1.Nic)(nil),                 // 31: unifiedfleet.api.v1.proto.Nic
	(*proto1.DHCPConfig)(nil),          // 32: unifiedfleet.api.v1.proto.DHCPConfig
	(*proto1.IP)(nil),                  // 33: unifiedfleet.api.v1.proto.IP
}
var file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_depIdxs = []int32{
	17, // 0: unifiedfleet.api.v1.proto.bigquery.ChangeEventRow.change_event:type_name -> unifiedfleet.api.v1.proto.ChangeEvent
	18, // 1: unifiedfleet.api.v1.proto.bigquery.ChromePlatformRow.platform:type_name -> unifiedfleet.api.v1.proto.ChromePlatform
	19, // 2: unifiedfleet.api.v1.proto.bigquery.VlanRow.vlan:type_name -> unifiedfleet.api.v1.proto.Vlan
	20, // 3: unifiedfleet.api.v1.proto.bigquery.MachineRow.machine:type_name -> unifiedfleet.api.v1.proto.Machine
	21, // 4: unifiedfleet.api.v1.proto.bigquery.RackRow.rack:type_name -> unifiedfleet.api.v1.proto.Rack
	22, // 5: unifiedfleet.api.v1.proto.bigquery.RackLSEPrototypeRow.rack_lse_prototype:type_name -> unifiedfleet.api.v1.proto.RackLSEPrototype
	23, // 6: unifiedfleet.api.v1.proto.bigquery.MachineLSEPrototypeRow.machine_lse_prototype:type_name -> unifiedfleet.api.v1.proto.MachineLSEPrototype
	24, // 7: unifiedfleet.api.v1.proto.bigquery.MachineLSERow.machine_lse:type_name -> unifiedfleet.api.v1.proto.MachineLSE
	25, // 8: unifiedfleet.api.v1.proto.bigquery.RackLSERow.rack_lse:type_name -> unifiedfleet.api.v1.proto.RackLSE
	26, // 9: unifiedfleet.api.v1.proto.bigquery.StateRecordRow.state_record:type_name -> unifiedfleet.api.v1.proto.StateRecord
	27, // 10: unifiedfleet.api.v1.proto.bigquery.KVMRow.kvm:type_name -> unifiedfleet.api.v1.proto.KVM
	28, // 11: unifiedfleet.api.v1.proto.bigquery.RPMRow.rpm:type_name -> unifiedfleet.api.v1.proto.RPM
	29, // 12: unifiedfleet.api.v1.proto.bigquery.SwitchRow.switch:type_name -> unifiedfleet.api.v1.proto.Switch
	30, // 13: unifiedfleet.api.v1.proto.bigquery.DracRow.drac:type_name -> unifiedfleet.api.v1.proto.Drac
	31, // 14: unifiedfleet.api.v1.proto.bigquery.NicRow.nic:type_name -> unifiedfleet.api.v1.proto.Nic
	32, // 15: unifiedfleet.api.v1.proto.bigquery.DHCPConfigRow.dhcp_config:type_name -> unifiedfleet.api.v1.proto.DHCPConfig
	33, // 16: unifiedfleet.api.v1.proto.bigquery.IPRow.ip:type_name -> unifiedfleet.api.v1.proto.IP
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_init() }
func file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_init() {
	if File_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeEventRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChromePlatformRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VlanRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RackRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RackLSEPrototypeRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineLSEPrototypeRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineLSERow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RackLSERow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRecordRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVMRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPMRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DracRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NicRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DHCPConfigRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_goTypes,
		DependencyIndexes: file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_depIdxs,
		MessageInfos:      file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_msgTypes,
	}.Build()
	File_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto = out.File
	file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_rawDesc = nil
	file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_goTypes = nil
	file_infra_unifiedfleet_api_v1_proto_bigquery_bq_proto_depIdxs = nil
}
