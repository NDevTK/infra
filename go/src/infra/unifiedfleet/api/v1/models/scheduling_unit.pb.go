// Copyright 2021 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: infra/unifiedfleet/api/v1/models/scheduling_unit.proto

package ufspb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SchedulingUnitType int32

const (
	SchedulingUnitType_SCHEDULING_UNIT_TYPE_INVALID SchedulingUnitType = 0
	// which means the SchedulingUnit only considers as ready when all of the associated DUT's/MachineLSE's resourceState is ready.
	SchedulingUnitType_SCHEDULING_UNIT_TYPE_ALL SchedulingUnitType = 1
	// which means the SchedulingUnit is considered as ready if at least one of the associated DUT's/MachineLSE's resourceState is ready.
	SchedulingUnitType_SCHEDULING_UNIT_TYPE_INDIVIDUAL SchedulingUnitType = 2
)

// Enum value maps for SchedulingUnitType.
var (
	SchedulingUnitType_name = map[int32]string{
		0: "SCHEDULING_UNIT_TYPE_INVALID",
		1: "SCHEDULING_UNIT_TYPE_ALL",
		2: "SCHEDULING_UNIT_TYPE_INDIVIDUAL",
	}
	SchedulingUnitType_value = map[string]int32{
		"SCHEDULING_UNIT_TYPE_INVALID":    0,
		"SCHEDULING_UNIT_TYPE_ALL":        1,
		"SCHEDULING_UNIT_TYPE_INDIVIDUAL": 2,
	}
)

func (x SchedulingUnitType) Enum() *SchedulingUnitType {
	p := new(SchedulingUnitType)
	*p = x
	return p
}

func (x SchedulingUnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulingUnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_enumTypes[0].Descriptor()
}

func (SchedulingUnitType) Type() protoreflect.EnumType {
	return &file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_enumTypes[0]
}

func (x SchedulingUnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulingUnitType.Descriptor instead.
func (SchedulingUnitType) EnumDescriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescGZIP(), []int{0}
}

// ExposeType determines label dimensions for a scheduling unit
type SchedulingUnit_ExposeType int32

const (
	SchedulingUnit_UNKNOWN SchedulingUnit_ExposeType = 0
	// default expose board and model of all duts and labels that are intersection of all duts.
	SchedulingUnit_DEFAULT SchedulingUnit_ExposeType = 1
	// default_plus_primary expose board and model of all duts plus all other labels of primary dut.
	SchedulingUnit_DEFAULT_PLUS_PRIMARY SchedulingUnit_ExposeType = 2
	// default_primary_only expose all labels of primary dut execpt for dut_name.
	SchedulingUnit_STRICTLY_PRIMARY_ONLY SchedulingUnit_ExposeType = 3
)

// Enum value maps for SchedulingUnit_ExposeType.
var (
	SchedulingUnit_ExposeType_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEFAULT",
		2: "DEFAULT_PLUS_PRIMARY",
		3: "STRICTLY_PRIMARY_ONLY",
	}
	SchedulingUnit_ExposeType_value = map[string]int32{
		"UNKNOWN":               0,
		"DEFAULT":               1,
		"DEFAULT_PLUS_PRIMARY":  2,
		"STRICTLY_PRIMARY_ONLY": 3,
	}
)

func (x SchedulingUnit_ExposeType) Enum() *SchedulingUnit_ExposeType {
	p := new(SchedulingUnit_ExposeType)
	*p = x
	return p
}

func (x SchedulingUnit_ExposeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulingUnit_ExposeType) Descriptor() protoreflect.EnumDescriptor {
	return file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_enumTypes[1].Descriptor()
}

func (SchedulingUnit_ExposeType) Type() protoreflect.EnumType {
	return &file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_enumTypes[1]
}

func (x SchedulingUnit_ExposeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulingUnit_ExposeType.Descriptor instead.
func (SchedulingUnit_ExposeType) EnumDescriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescGZIP(), []int{0, 0}
}

// SchedulingUnit is used for supporting multi-DUT setup in ChromeOS lab.
//
// A SchedulingUnit will have one or more DUTs associated with it.
type SchedulingUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// name of DUT/MachineLSE
	MachineLSEs []string `protobuf:"bytes,2,rep,name=machineLSEs,proto3" json:"machineLSEs,omitempty"`
	// swarming pools to which this SchedulingUnit belongs to.
	Pools []string `protobuf:"bytes,3,rep,name=pools,proto3" json:"pools,omitempty"`
	// indicate how dut_state dimension of a scheduling unit should be calculated.
	Type SchedulingUnitType `protobuf:"varint,4,opt,name=type,proto3,enum=unifiedfleet.api.v1.models.SchedulingUnitType" json:"type,omitempty"`
	// description of the SchedulingUnit.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// record the last update timestamp of this SchedulingUnit (In UTC timezone)
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// tags user can attach for easy querying/searching
	Tags []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	// hostname of designated primary dut. primary dut is optional.
	PrimaryDut string `protobuf:"bytes,8,opt,name=primary_dut,json=primaryDut,proto3" json:"primary_dut,omitempty"`
	// expose type of scheduling unit labels.
	ExposeType SchedulingUnit_ExposeType `protobuf:"varint,9,opt,name=expose_type,json=exposeType,proto3,enum=unifiedfleet.api.v1.models.SchedulingUnit_ExposeType" json:"expose_type,omitempty"`
	// Indicates if the scheduling unit is entirely hosted in a wifecell box.
	Wificell bool `protobuf:"varint,10,opt,name=wificell,proto3" json:"wificell,omitempty"`
	// Indicates the scheduling unit is in a cellular testbed with a specific carrier.
	Carrier string `protobuf:"bytes,11,opt,name=carrier,proto3" json:"carrier,omitempty"`
}

func (x *SchedulingUnit) Reset() {
	*x = SchedulingUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingUnit) ProtoMessage() {}

func (x *SchedulingUnit) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingUnit.ProtoReflect.Descriptor instead.
func (*SchedulingUnit) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescGZIP(), []int{0}
}

func (x *SchedulingUnit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulingUnit) GetMachineLSEs() []string {
	if x != nil {
		return x.MachineLSEs
	}
	return nil
}

func (x *SchedulingUnit) GetPools() []string {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *SchedulingUnit) GetType() SchedulingUnitType {
	if x != nil {
		return x.Type
	}
	return SchedulingUnitType_SCHEDULING_UNIT_TYPE_INVALID
}

func (x *SchedulingUnit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SchedulingUnit) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *SchedulingUnit) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SchedulingUnit) GetPrimaryDut() string {
	if x != nil {
		return x.PrimaryDut
	}
	return ""
}

func (x *SchedulingUnit) GetExposeType() SchedulingUnit_ExposeType {
	if x != nil {
		return x.ExposeType
	}
	return SchedulingUnit_UNKNOWN
}

func (x *SchedulingUnit) GetWificell() bool {
	if x != nil {
		return x.Wificell
	}
	return false
}

func (x *SchedulingUnit) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

var File_infra_unifiedfleet_api_v1_models_scheduling_unit_proto protoreflect.FileDescriptor

var file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDesc = []byte{
	0x0a, 0x36, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe0, 0x05, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x4c, 0x53, 0x45, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x30, 0xfa,
	0x41, 0x2d, 0x0a, 0x2b, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2d, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x70, 0x6f, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x53, 0x45, 0x52,
	0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x53, 0x45, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x6f,
	0x6c, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x51,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x64, 0x75, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x30, 0xfa, 0x41, 0x2d, 0x0a, 0x2b, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x2d, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x70, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x4c, 0x53, 0x45, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x75,
	0x74, 0x12, 0x56, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x6e,
	0x69, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x66,
	0x69, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x66,
	0x69, 0x63, 0x65, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x22,
	0x5b, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x4c, 0x59, 0x5f, 0x50, 0x52,
	0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x03, 0x3a, 0x56, 0xea, 0x41,
	0x53, 0x0a, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2d, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x70, 0x6f, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x20, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x75,
	0x6e, 0x69, 0x74, 0x7d, 0x2a, 0x79, 0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x42,
	0x28, 0x5a, 0x26, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x3b, 0x75, 0x66, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescOnce sync.Once
	file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescData = file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDesc
)

func file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescGZIP() []byte {
	file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescOnce.Do(func() {
		file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescData)
	})
	return file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDescData
}

var file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_goTypes = []interface{}{
	(SchedulingUnitType)(0),        // 0: unifiedfleet.api.v1.models.SchedulingUnitType
	(SchedulingUnit_ExposeType)(0), // 1: unifiedfleet.api.v1.models.SchedulingUnit.ExposeType
	(*SchedulingUnit)(nil),         // 2: unifiedfleet.api.v1.models.SchedulingUnit
	(*timestamppb.Timestamp)(nil),  // 3: google.protobuf.Timestamp
}
var file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_depIdxs = []int32{
	0, // 0: unifiedfleet.api.v1.models.SchedulingUnit.type:type_name -> unifiedfleet.api.v1.models.SchedulingUnitType
	3, // 1: unifiedfleet.api.v1.models.SchedulingUnit.update_time:type_name -> google.protobuf.Timestamp
	1, // 2: unifiedfleet.api.v1.models.SchedulingUnit.expose_type:type_name -> unifiedfleet.api.v1.models.SchedulingUnit.ExposeType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_init() }
func file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_init() {
	if File_infra_unifiedfleet_api_v1_models_scheduling_unit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_goTypes,
		DependencyIndexes: file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_depIdxs,
		EnumInfos:         file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_enumTypes,
		MessageInfos:      file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_msgTypes,
	}.Build()
	File_infra_unifiedfleet_api_v1_models_scheduling_unit_proto = out.File
	file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_rawDesc = nil
	file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_goTypes = nil
	file_infra_unifiedfleet_api_v1_models_scheduling_unit_proto_depIdxs = nil
}
