// Copyright 2021 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: infra/unifiedfleet/api/v1/models/chromeos/lab/modeminfo.proto

package ufspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next Tag: 9
type ModemType int32

const (
	ModemType_MODEM_TYPE_UNSPECIFIED ModemType = 0
	// Unsupported modem
	ModemType_MODEM_TYPE_UNSUPPORTED ModemType = 8
	// Qualcomm modem
	ModemType_MODEM_TYPE_QUALCOMM_SC7180 ModemType = 1
	// Fibocomm modem
	ModemType_MODEM_TYPE_FIBOCOMM_L850GL ModemType = 2
	// NL668
	ModemType_MODEM_TYPE_NL668 ModemType = 3
	// FM350
	ModemType_MODEM_TYPE_FM350 ModemType = 4
	// FM101
	ModemType_MODEM_TYPE_FM101 ModemType = 5
	// SC7280
	ModemType_MODEM_TYPE_QUALCOMM_SC7280 ModemType = 6
	// EM060
	ModemType_MODEM_TYPE_EM060 ModemType = 7
)

// Enum value maps for ModemType.
var (
	ModemType_name = map[int32]string{
		0: "MODEM_TYPE_UNSPECIFIED",
		8: "MODEM_TYPE_UNSUPPORTED",
		1: "MODEM_TYPE_QUALCOMM_SC7180",
		2: "MODEM_TYPE_FIBOCOMM_L850GL",
		3: "MODEM_TYPE_NL668",
		4: "MODEM_TYPE_FM350",
		5: "MODEM_TYPE_FM101",
		6: "MODEM_TYPE_QUALCOMM_SC7280",
		7: "MODEM_TYPE_EM060",
	}
	ModemType_value = map[string]int32{
		"MODEM_TYPE_UNSPECIFIED":     0,
		"MODEM_TYPE_UNSUPPORTED":     8,
		"MODEM_TYPE_QUALCOMM_SC7180": 1,
		"MODEM_TYPE_FIBOCOMM_L850GL": 2,
		"MODEM_TYPE_NL668":           3,
		"MODEM_TYPE_FM350":           4,
		"MODEM_TYPE_FM101":           5,
		"MODEM_TYPE_QUALCOMM_SC7280": 6,
		"MODEM_TYPE_EM060":           7,
	}
)

func (x ModemType) Enum() *ModemType {
	p := new(ModemType)
	*p = x
	return p
}

func (x ModemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModemType) Descriptor() protoreflect.EnumDescriptor {
	return file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_enumTypes[0].Descriptor()
}

func (ModemType) Type() protoreflect.EnumType {
	return &file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_enumTypes[0]
}

func (x ModemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModemType.Descriptor instead.
func (ModemType) EnumDescriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescGZIP(), []int{0}
}

// Next Tag: 6
type ModemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ModemType `protobuf:"varint,1,opt,name=type,proto3,enum=unifiedfleet.api.v1.models.chromeos.lab.ModemType" json:"type,omitempty"`
	// Equipment Identifier
	Imei string `protobuf:"bytes,2,opt,name=imei,proto3" json:"imei,omitempty"`
	// Comma separated band numbers
	SupportedBands string `protobuf:"bytes,3,opt,name=supported_bands,json=supportedBands,proto3" json:"supported_bands,omitempty"`
	// Number of SIM's present
	SimCount int32 `protobuf:"varint,4,opt,name=sim_count,json=simCount,proto3" json:"sim_count,omitempty"`
	// The device model cellular sub-variant.
	ModelVariant string `protobuf:"bytes,5,opt,name=model_variant,json=modelVariant,proto3" json:"model_variant,omitempty"`
}

func (x *ModemInfo) Reset() {
	*x = ModemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemInfo) ProtoMessage() {}

func (x *ModemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemInfo.ProtoReflect.Descriptor instead.
func (*ModemInfo) Descriptor() ([]byte, []int) {
	return file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescGZIP(), []int{0}
}

func (x *ModemInfo) GetType() ModemType {
	if x != nil {
		return x.Type
	}
	return ModemType_MODEM_TYPE_UNSPECIFIED
}

func (x *ModemInfo) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *ModemInfo) GetSupportedBands() string {
	if x != nil {
		return x.SupportedBands
	}
	return ""
}

func (x *ModemInfo) GetSimCount() int32 {
	if x != nil {
		return x.SimCount
	}
	return 0
}

func (x *ModemInfo) GetModelVariant() string {
	if x != nil {
		return x.ModelVariant
	}
	return ""
}

var File_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto protoreflect.FileDescriptor

var file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x27, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x22, 0xd2, 0x01, 0x0a, 0x09, 0x4d, 0x6f, 0x64,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c,
	0x65, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d,
	0x65, 0x69, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x69, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x69, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x2a, 0xfb, 0x01,
	0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d,
	0x4f, 0x44, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4f, 0x44, 0x45, 0x4d,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4f, 0x44, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x51, 0x55, 0x41, 0x4c, 0x43, 0x4f, 0x4d, 0x4d, 0x5f, 0x53, 0x43, 0x37, 0x31, 0x38,
	0x30, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4f, 0x44, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x46, 0x49, 0x42, 0x4f, 0x43, 0x4f, 0x4d, 0x4d, 0x5f, 0x4c, 0x38, 0x35, 0x30, 0x47,
	0x4c, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4c, 0x36, 0x36, 0x38, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44,
	0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4d, 0x33, 0x35, 0x30, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4d,
	0x31, 0x30, 0x31, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4f, 0x44, 0x45, 0x4d, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x51, 0x55, 0x41, 0x4c, 0x43, 0x4f, 0x4d, 0x4d, 0x5f, 0x53, 0x43, 0x37,
	0x32, 0x38, 0x30, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45, 0x4d, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x30, 0x36, 0x30, 0x10, 0x07, 0x42, 0x35, 0x5a, 0x33, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x6f, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x3b, 0x75, 0x66, 0x73,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescOnce sync.Once
	file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescData = file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDesc
)

func file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescGZIP() []byte {
	file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescOnce.Do(func() {
		file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescData)
	})
	return file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDescData
}

var file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_goTypes = []interface{}{
	(ModemType)(0),    // 0: unifiedfleet.api.v1.models.chromeos.lab.ModemType
	(*ModemInfo)(nil), // 1: unifiedfleet.api.v1.models.chromeos.lab.ModemInfo
}
var file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_depIdxs = []int32{
	0, // 0: unifiedfleet.api.v1.models.chromeos.lab.ModemInfo.type:type_name -> unifiedfleet.api.v1.models.chromeos.lab.ModemType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_init() }
func file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_init() {
	if File_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_goTypes,
		DependencyIndexes: file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_depIdxs,
		EnumInfos:         file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_enumTypes,
		MessageInfos:      file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_msgTypes,
	}.Build()
	File_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto = out.File
	file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_rawDesc = nil
	file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_goTypes = nil
	file_infra_unifiedfleet_api_v1_models_chromeos_lab_modeminfo_proto_depIdxs = nil
}
