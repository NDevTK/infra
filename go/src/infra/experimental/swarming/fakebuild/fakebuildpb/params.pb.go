// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: infra/experimental/swarming/fakebuild/fakebuildpb/params.proto

package fakebuildpb

import (
	proto "go.chromium.org/luci/buildbucket/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChildBuilds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children int64            `protobuf:"varint,1,opt,name=children,proto3" json:"children,omitempty"` // how many children to schedule.
	Builder  *proto.BuilderID `protobuf:"bytes,2,opt,name=builder,proto3" json:"builder,omitempty"`    // builder to schedule the child builds on.
	// how many children should be scheduled in a batch.
	// Must be in the range of (0, children], all other values will be treated
	// as batch_size = children.
	BatchSize       int64 `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	SleepMinSec     int64 `protobuf:"varint,4,opt,name=sleep_min_sec,json=sleepMinSec,proto3" json:"sleep_min_sec,omitempty"` // how long to sleep after a batch, min
	SleepMaxSec     int64 `protobuf:"varint,5,opt,name=sleep_max_sec,json=sleepMaxSec,proto3" json:"sleep_max_sec,omitempty"` // how long to sleep after a batch, max
	WaitForChildren bool  `protobuf:"varint,6,opt,name=wait_for_children,json=waitForChildren,proto3" json:"wait_for_children,omitempty"`
}

func (x *ChildBuilds) Reset() {
	*x = ChildBuilds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildBuilds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildBuilds) ProtoMessage() {}

func (x *ChildBuilds) ProtoReflect() protoreflect.Message {
	mi := &file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildBuilds.ProtoReflect.Descriptor instead.
func (*ChildBuilds) Descriptor() ([]byte, []int) {
	return file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescGZIP(), []int{0}
}

func (x *ChildBuilds) GetChildren() int64 {
	if x != nil {
		return x.Children
	}
	return 0
}

func (x *ChildBuilds) GetBuilder() *proto.BuilderID {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *ChildBuilds) GetBatchSize() int64 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *ChildBuilds) GetSleepMinSec() int64 {
	if x != nil {
		return x.SleepMinSec
	}
	return 0
}

func (x *ChildBuilds) GetSleepMaxSec() int64 {
	if x != nil {
		return x.SleepMaxSec
	}
	return 0
}

func (x *ChildBuilds) GetWaitForChildren() bool {
	if x != nil {
		return x.WaitForChildren
	}
	return false
}

type SearchBuilds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps       int64 `protobuf:"varint,1,opt,name=steps,proto3" json:"steps,omitempty"`                                  // how many steps to emit
	SleepMinSec int64 `protobuf:"varint,2,opt,name=sleep_min_sec,json=sleepMinSec,proto3" json:"sleep_min_sec,omitempty"` // how long to sleep in each step, min
	SleepMaxSec int64 `protobuf:"varint,3,opt,name=sleep_max_sec,json=sleepMaxSec,proto3" json:"sleep_max_sec,omitempty"` // how long to sleep in each step, max
}

func (x *SearchBuilds) Reset() {
	*x = SearchBuilds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBuilds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBuilds) ProtoMessage() {}

func (x *SearchBuilds) ProtoReflect() protoreflect.Message {
	mi := &file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBuilds.ProtoReflect.Descriptor instead.
func (*SearchBuilds) Descriptor() ([]byte, []int) {
	return file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescGZIP(), []int{1}
}

func (x *SearchBuilds) GetSteps() int64 {
	if x != nil {
		return x.Steps
	}
	return 0
}

func (x *SearchBuilds) GetSleepMinSec() int64 {
	if x != nil {
		return x.SleepMinSec
	}
	return 0
}

func (x *SearchBuilds) GetSleepMaxSec() int64 {
	if x != nil {
		return x.SleepMaxSec
	}
	return 0
}

type Inputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps        int64         `protobuf:"varint,1,opt,name=steps,proto3" json:"steps,omitempty"`                                  // how many steps to emit
	SleepMinSec  int64         `protobuf:"varint,2,opt,name=sleep_min_sec,json=sleepMinSec,proto3" json:"sleep_min_sec,omitempty"` // how long to sleep in each step, min
	SleepMaxSec  int64         `protobuf:"varint,3,opt,name=sleep_max_sec,json=sleepMaxSec,proto3" json:"sleep_max_sec,omitempty"` // how long to sleep in each step, max
	ChildBuilds  *ChildBuilds  `protobuf:"bytes,4,opt,name=child_builds,json=childBuilds,proto3" json:"child_builds,omitempty"`    // steps to schedule child builds.
	SearchBuilds *SearchBuilds `protobuf:"bytes,5,opt,name=search_builds,json=searchBuilds,proto3" json:"search_builds,omitempty"` // steps to search builds.
}

func (x *Inputs) Reset() {
	*x = Inputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inputs) ProtoMessage() {}

func (x *Inputs) ProtoReflect() protoreflect.Message {
	mi := &file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inputs.ProtoReflect.Descriptor instead.
func (*Inputs) Descriptor() ([]byte, []int) {
	return file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescGZIP(), []int{2}
}

func (x *Inputs) GetSteps() int64 {
	if x != nil {
		return x.Steps
	}
	return 0
}

func (x *Inputs) GetSleepMinSec() int64 {
	if x != nil {
		return x.SleepMinSec
	}
	return 0
}

func (x *Inputs) GetSleepMaxSec() int64 {
	if x != nil {
		return x.SleepMaxSec
	}
	return 0
}

func (x *Inputs) GetChildBuilds() *ChildBuilds {
	if x != nil {
		return x.ChildBuilds
	}
	return nil
}

func (x *Inputs) GetSearchBuilds() *SearchBuilds {
	if x != nil {
		return x.SearchBuilds
	}
	return nil
}

var File_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto protoreflect.FileDescriptor

var file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x61,
	0x6b, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x66, 0x61, 0x6b, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x66, 0x61, 0x6b, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x70, 0x62, 0x1a, 0x3b, 0x67,
	0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c,
	0x75, 0x63, 0x69, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x0b, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c,
	0x65, 0x65, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x22,
	0x0a, 0x0d, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x61, 0x78, 0x53,
	0x65, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x6c,
	0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x6c, 0x65,
	0x65, 0x70, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c, 0x65, 0x65,
	0x70, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x61, 0x78, 0x53, 0x65, 0x63, 0x22, 0xe3, 0x01, 0x0a,
	0x06, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x69, 0x6e, 0x53, 0x65,
	0x63, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4d,
	0x61, 0x78, 0x53, 0x65, 0x63, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x61,
	0x6b, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x61, 0x6b, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x42, 0x33, 0x5a, 0x31, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x69, 0x6e,
	0x67, 0x2f, 0x66, 0x61, 0x6b, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x66, 0x61, 0x6b, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescOnce sync.Once
	file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescData = file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDesc
)

func file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescGZIP() []byte {
	file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescOnce.Do(func() {
		file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescData = protoimpl.X.CompressGZIP(file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescData)
	})
	return file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDescData
}

var file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_goTypes = []interface{}{
	(*ChildBuilds)(nil),     // 0: fakebuildpb.ChildBuilds
	(*SearchBuilds)(nil),    // 1: fakebuildpb.SearchBuilds
	(*Inputs)(nil),          // 2: fakebuildpb.Inputs
	(*proto.BuilderID)(nil), // 3: buildbucket.v2.BuilderID
}
var file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_depIdxs = []int32{
	3, // 0: fakebuildpb.ChildBuilds.builder:type_name -> buildbucket.v2.BuilderID
	0, // 1: fakebuildpb.Inputs.child_builds:type_name -> fakebuildpb.ChildBuilds
	1, // 2: fakebuildpb.Inputs.search_builds:type_name -> fakebuildpb.SearchBuilds
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_init() }
func file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_init() {
	if File_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildBuilds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBuilds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_goTypes,
		DependencyIndexes: file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_depIdxs,
		MessageInfos:      file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_msgTypes,
	}.Build()
	File_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto = out.File
	file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_rawDesc = nil
	file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_goTypes = nil
	file_infra_experimental_swarming_fakebuild_fakebuildpb_params_proto_depIdxs = nil
}
