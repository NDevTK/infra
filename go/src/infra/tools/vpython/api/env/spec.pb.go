// Code generated by protoc-gen-go.
// source: infra/tools/vpython/api/env/spec.proto
// DO NOT EDIT!

/*
Package env is a generated protocol buffer package.

It is generated from these files:
	infra/tools/vpython/api/env/spec.proto

It has these top-level messages:
	Spec
*/
package env

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Spec struct {
	// The Python version to use. This should be of the form:
	// "Major[.Minor[.Patch]]"
	//
	// If specified,
	// - The Major version will be enforced absolutely. Python 3 will not be
	//   preferred over Python 2 because '3' is greater than '2'.
	// - The remaining versions, if specified, will be regarded as *minimum*
	//   versions. In other words, if "2.7.4" is specified and the system has
	//   "2.7.12", that will suffice.
	//
	// If empty, the default Python interpreter ("python") will be used.
	PythonVersion string          `protobuf:"bytes,1,opt,name=python_version,json=pythonVersion" json:"python_version,omitempty"`
	Wheel         []*Spec_Package `protobuf:"bytes,2,rep,name=wheel" json:"wheel,omitempty"`
	// The VirtualEnv package.
	//
	// This should be left empty to use the `vpython` default package
	// (recommended).
	Virtualenv *Spec_Package `protobuf:"bytes,3,opt,name=virtualenv" json:"virtualenv,omitempty"`
}

func (m *Spec) Reset()                    { *m = Spec{} }
func (m *Spec) String() string            { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()               {}
func (*Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Spec) GetPythonVersion() string {
	if m != nil {
		return m.PythonVersion
	}
	return ""
}

func (m *Spec) GetWheel() []*Spec_Package {
	if m != nil {
		return m.Wheel
	}
	return nil
}

func (m *Spec) GetVirtualenv() *Spec_Package {
	if m != nil {
		return m.Virtualenv
	}
	return nil
}

// A definition for a remote package. The type of package depends on the
// configured package resolver.
type Spec_Package struct {
	// The path of the package.
	//
	// - For CIPD, this is the package name.
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// The package version.
	//
	// - For CIPD, this will be a "version", which can include a "key:value"
	//   ref/tag.
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *Spec_Package) Reset()                    { *m = Spec_Package{} }
func (m *Spec_Package) String() string            { return proto.CompactTextString(m) }
func (*Spec_Package) ProtoMessage()               {}
func (*Spec_Package) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Spec_Package) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Spec_Package) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*Spec)(nil), "env.Spec")
	proto.RegisterType((*Spec_Package)(nil), "env.Spec.Package")
}

func init() { proto.RegisterFile("infra/tools/vpython/api/env/spec.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0xcb, 0xcc, 0x4b, 0x2b,
	0x4a, 0xd4, 0x2f, 0xc9, 0xcf, 0xcf, 0x29, 0xd6, 0x2f, 0x2b, 0xa8, 0x2c, 0xc9, 0xc8, 0xcf, 0xd3,
	0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcd, 0x2b, 0xd3, 0x2f, 0x2e, 0x48, 0x4d, 0xd6, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x4e, 0xcd, 0x2b, 0x53, 0x3a, 0xc4, 0xc8, 0xc5, 0x12, 0x5c, 0x90, 0x9a,
	0x2c, 0xa4, 0xca, 0xc5, 0x07, 0x51, 0x1a, 0x5f, 0x96, 0x5a, 0x54, 0x9c, 0x99, 0x9f, 0x27, 0xc1,
	0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x0b, 0x11, 0x0d, 0x83, 0x08, 0x0a, 0xa9, 0x73, 0xb1, 0x96,
	0x67, 0xa4, 0xa6, 0xe6, 0x48, 0x30, 0x29, 0x30, 0x6b, 0x70, 0x1b, 0x09, 0xea, 0xa5, 0xe6, 0x95,
	0xe9, 0x81, 0x0c, 0xd0, 0x0b, 0x48, 0x4c, 0xce, 0x4e, 0x4c, 0x4f, 0x0d, 0x82, 0xc8, 0x0b, 0x19,
	0x72, 0x71, 0x95, 0x65, 0x16, 0x95, 0x94, 0x26, 0xe6, 0xa4, 0xe6, 0x95, 0x49, 0x30, 0x2b, 0x30,
	0x62, 0x57, 0x8d, 0xa4, 0x48, 0xca, 0x9c, 0x8b, 0x1d, 0x2a, 0x2c, 0x24, 0xc4, 0xc5, 0x52, 0x90,
	0x58, 0x92, 0x01, 0x75, 0x03, 0x98, 0x2d, 0x24, 0xc1, 0xc5, 0x0e, 0x73, 0x1a, 0x13, 0x58, 0x18,
	0xc6, 0x4d, 0x62, 0x03, 0x7b, 0xc8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x4b, 0x99, 0x50,
	0xfa, 0x00, 0x00, 0x00,
}
