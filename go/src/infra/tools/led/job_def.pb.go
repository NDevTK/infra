// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tools/led/job_def.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "go.chromium.org/luci/buildbucket/proto"
	api "go.chromium.org/luci/swarming/proto/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Buildbucket is, ideally, just a BBAgentArgs, but there are bits of data that
// led needs to track which aren't currently contained in BBAgentArgs.
//
// Where it makes sense, this additional data should be moved from this
// Buildbucket message int BBAgentArgs, but for now we store it separately to
// get led v2 up and running.
type Buildbucket struct {
	BbagentArgs  *proto1.BBAgentArgs   `protobuf:"bytes,1,opt,name=bbagent_args,json=bbagentArgs,proto3" json:"bbagent_args,omitempty"`
	CipdPackages []*api.CIPDPackage    `protobuf:"bytes,2,rep,name=cipd_packages,json=cipdPackages,proto3" json:"cipd_packages,omitempty"`
	EnvVars      []*api.StringPair     `protobuf:"bytes,3,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	EnvPrefixes  []*api.StringListPair `protobuf:"bytes,4,rep,name=env_prefixes,json=envPrefixes,proto3" json:"env_prefixes,omitempty"`
	// Indicates that this build should be generated as a legacy kitchen task when
	// launched.
	LegacyKitchen bool `protobuf:"varint,5,opt,name=legacy_kitchen,json=legacyKitchen,proto3" json:"legacy_kitchen,omitempty"`
	// Eventually becomes the name of the launched swarming task.
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Buildbucket) Reset()         { *m = Buildbucket{} }
func (m *Buildbucket) String() string { return proto.CompactTextString(m) }
func (*Buildbucket) ProtoMessage()    {}
func (*Buildbucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_57c3900c2aa186e6, []int{0}
}

func (m *Buildbucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Buildbucket.Unmarshal(m, b)
}
func (m *Buildbucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Buildbucket.Marshal(b, m, deterministic)
}
func (m *Buildbucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Buildbucket.Merge(m, src)
}
func (m *Buildbucket) XXX_Size() int {
	return xxx_messageInfo_Buildbucket.Size(m)
}
func (m *Buildbucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Buildbucket.DiscardUnknown(m)
}

var xxx_messageInfo_Buildbucket proto.InternalMessageInfo

func (m *Buildbucket) GetBbagentArgs() *proto1.BBAgentArgs {
	if m != nil {
		return m.BbagentArgs
	}
	return nil
}

func (m *Buildbucket) GetCipdPackages() []*api.CIPDPackage {
	if m != nil {
		return m.CipdPackages
	}
	return nil
}

func (m *Buildbucket) GetEnvVars() []*api.StringPair {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *Buildbucket) GetEnvPrefixes() []*api.StringListPair {
	if m != nil {
		return m.EnvPrefixes
	}
	return nil
}

func (m *Buildbucket) GetLegacyKitchen() bool {
	if m != nil {
		return m.LegacyKitchen
	}
	return false
}

func (m *Buildbucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Swarming is the raw TaskRequest. When a JobDefinition is in this form, the
// user's ability to manipulate it via `led` subcommands is extremely limited.
type Swarming struct {
	Task                 *api.TaskRequest `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Hostname             string           `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Swarming) Reset()         { *m = Swarming{} }
func (m *Swarming) String() string { return proto.CompactTextString(m) }
func (*Swarming) ProtoMessage()    {}
func (*Swarming) Descriptor() ([]byte, []int) {
	return fileDescriptor_57c3900c2aa186e6, []int{1}
}

func (m *Swarming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Swarming.Unmarshal(m, b)
}
func (m *Swarming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Swarming.Marshal(b, m, deterministic)
}
func (m *Swarming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Swarming.Merge(m, src)
}
func (m *Swarming) XXX_Size() int {
	return xxx_messageInfo_Swarming.Size(m)
}
func (m *Swarming) XXX_DiscardUnknown() {
	xxx_messageInfo_Swarming.DiscardUnknown(m)
}

var xxx_messageInfo_Swarming proto.InternalMessageInfo

func (m *Swarming) GetTask() *api.TaskRequest {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Swarming) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type JobDefinition struct {
	// Types that are valid to be assigned to JobType:
	//	*JobDefinition_Buildbucket
	//	*JobDefinition_Swarming
	JobType isJobDefinition_JobType `protobuf_oneof:"job_type"`
	// If set, this holds the CASTree to use with the build, when launched.
	//
	// At the time of launch, this will be merged with
	// swarming.task_slice[*].properties.cas_inputs, if any.
	UserPayload          *api.CASTree `protobuf:"bytes,3,opt,name=user_payload,json=userPayload,proto3" json:"user_payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *JobDefinition) Reset()         { *m = JobDefinition{} }
func (m *JobDefinition) String() string { return proto.CompactTextString(m) }
func (*JobDefinition) ProtoMessage()    {}
func (*JobDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_57c3900c2aa186e6, []int{2}
}

func (m *JobDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobDefinition.Unmarshal(m, b)
}
func (m *JobDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobDefinition.Marshal(b, m, deterministic)
}
func (m *JobDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobDefinition.Merge(m, src)
}
func (m *JobDefinition) XXX_Size() int {
	return xxx_messageInfo_JobDefinition.Size(m)
}
func (m *JobDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_JobDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_JobDefinition proto.InternalMessageInfo

type isJobDefinition_JobType interface {
	isJobDefinition_JobType()
}

type JobDefinition_Buildbucket struct {
	Buildbucket *Buildbucket `protobuf:"bytes,1,opt,name=buildbucket,proto3,oneof"`
}

type JobDefinition_Swarming struct {
	Swarming *Swarming `protobuf:"bytes,2,opt,name=swarming,proto3,oneof"`
}

func (*JobDefinition_Buildbucket) isJobDefinition_JobType() {}

func (*JobDefinition_Swarming) isJobDefinition_JobType() {}

func (m *JobDefinition) GetJobType() isJobDefinition_JobType {
	if m != nil {
		return m.JobType
	}
	return nil
}

func (m *JobDefinition) GetBuildbucket() *Buildbucket {
	if x, ok := m.GetJobType().(*JobDefinition_Buildbucket); ok {
		return x.Buildbucket
	}
	return nil
}

func (m *JobDefinition) GetSwarming() *Swarming {
	if x, ok := m.GetJobType().(*JobDefinition_Swarming); ok {
		return x.Swarming
	}
	return nil
}

func (m *JobDefinition) GetUserPayload() *api.CASTree {
	if m != nil {
		return m.UserPayload
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*JobDefinition) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*JobDefinition_Buildbucket)(nil),
		(*JobDefinition_Swarming)(nil),
	}
}

func init() {
	proto.RegisterType((*Buildbucket)(nil), "led.Buildbucket")
	proto.RegisterType((*Swarming)(nil), "led.Swarming")
	proto.RegisterType((*JobDefinition)(nil), "led.JobDefinition")
}

func init() { proto.RegisterFile("infra/tools/led/job_def.proto", fileDescriptor_57c3900c2aa186e6) }

var fileDescriptor_57c3900c2aa186e6 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0x8f, 0xd3, 0x3c,
	0x10, 0x80, 0xb7, 0x1f, 0xef, 0xbe, 0xc1, 0x69, 0x11, 0xb2, 0x56, 0x10, 0x75, 0x85, 0x54, 0x55,
	0x42, 0xaa, 0x04, 0x72, 0x44, 0xf9, 0x3a, 0x20, 0x90, 0x5a, 0xf6, 0xb0, 0x7c, 0x1c, 0x22, 0xb7,
	0xe2, 0xc0, 0x25, 0x72, 0x92, 0x69, 0x6a, 0x92, 0xd8, 0xc1, 0x76, 0x02, 0xfd, 0x65, 0x1c, 0xf8,
	0x73, 0x28, 0x4e, 0xb6, 0xdb, 0xa2, 0xbd, 0x65, 0x46, 0xcf, 0x33, 0x33, 0xf1, 0x0c, 0x7a, 0xcc,
	0xc5, 0x56, 0x31, 0xdf, 0x48, 0x99, 0x6b, 0x3f, 0x87, 0xc4, 0xff, 0x2e, 0xa3, 0x30, 0x81, 0x2d,
	0x29, 0x95, 0x34, 0x12, 0x0f, 0x72, 0x48, 0x26, 0xaf, 0x52, 0x49, 0xe2, 0x9d, 0x92, 0x05, 0xaf,
	0x0a, 0x22, 0x55, 0xea, 0xe7, 0x55, 0xcc, 0xfd, 0xa8, 0xe2, 0x79, 0x12, 0x55, 0x71, 0x06, 0xc6,
	0xb7, 0xb0, 0x9f, 0xb3, 0x4a, 0xc4, 0x3b, 0x50, 0xad, 0x3b, 0x79, 0x7d, 0xa7, 0xa6, 0x7f, 0x32,
	0x55, 0x70, 0x91, 0x76, 0x0e, 0x2b, 0x6f, 0x53, 0xad, 0x37, 0xfb, 0xd3, 0x47, 0xee, 0xea, 0xb6,
	0x38, 0x7e, 0x8f, 0x46, 0x51, 0xc4, 0x52, 0x10, 0x26, 0x64, 0x2a, 0xd5, 0x5e, 0x6f, 0xda, 0x9b,
	0xbb, 0x8b, 0x4b, 0x72, 0x34, 0x00, 0xa9, 0x17, 0x64, 0xb5, 0x5a, 0x36, 0xcc, 0x52, 0xa5, 0x9a,
	0xba, 0x9d, 0xd0, 0x04, 0xf8, 0x1d, 0x1a, 0xc7, 0xbc, 0x4c, 0xc2, 0x92, 0xc5, 0x19, 0x4b, 0x41,
	0x7b, 0xfd, 0xe9, 0x60, 0xee, 0x2e, 0x3c, 0x72, 0xe8, 0x5b, 0x3f, 0x27, 0x1f, 0x3e, 0x06, 0x57,
	0x41, 0x0b, 0xd0, 0x51, 0x83, 0x77, 0x81, 0xc6, 0x0b, 0xe4, 0x80, 0xa8, 0xc3, 0x9a, 0x29, 0xed,
	0x0d, 0xac, 0xf9, 0xe8, 0xc4, 0x5c, 0x1b, 0xc5, 0x45, 0x1a, 0x30, 0xae, 0xe8, 0xff, 0x20, 0xea,
	0xaf, 0x4c, 0xe9, 0x66, 0xe4, 0xc6, 0x29, 0x15, 0x6c, 0xf9, 0x2f, 0xd0, 0xde, 0xd0, 0x7a, 0x97,
	0x77, 0x78, 0x5f, 0xb8, 0x36, 0xd6, 0x75, 0x41, 0xd4, 0x41, 0xc7, 0xe3, 0x27, 0xe8, 0x7e, 0x0e,
	0x29, 0x8b, 0xf7, 0x61, 0xc6, 0x4d, 0xbc, 0x03, 0xe1, 0xfd, 0x37, 0xed, 0xcd, 0x1d, 0x3a, 0x6e,
	0xb3, 0x9f, 0xdb, 0x24, 0xc6, 0x68, 0x28, 0x58, 0x01, 0xde, 0xf9, 0xb4, 0x37, 0xbf, 0x47, 0xed,
	0xf7, 0x6c, 0x83, 0x9c, 0x75, 0xd7, 0x05, 0x3f, 0x43, 0x43, 0xc3, 0x74, 0xd6, 0xbd, 0xd8, 0xe9,
	0x0f, 0x6f, 0x98, 0xce, 0x28, 0xfc, 0xa8, 0x40, 0x1b, 0x6a, 0x29, 0x3c, 0x41, 0xce, 0x4e, 0x6a,
	0x63, 0x2b, 0xf6, 0x6d, 0xc5, 0x43, 0x3c, 0xfb, 0xdd, 0x43, 0xe3, 0x4f, 0x32, 0xba, 0x82, 0x2d,
	0x17, 0xdc, 0x70, 0x29, 0xf0, 0x4b, 0xe4, 0x1e, 0x2d, 0xa0, 0x6b, 0xf1, 0x80, 0xe4, 0x90, 0x90,
	0xa3, 0xe5, 0x5d, 0x9f, 0xd1, 0x63, 0x0c, 0x3f, 0x45, 0xce, 0xcd, 0x10, 0xb6, 0x87, 0xbb, 0x18,
	0x5b, 0xe5, 0x66, 0xe4, 0xeb, 0x33, 0x7a, 0x00, 0xf0, 0x1b, 0x34, 0xaa, 0x34, 0xa8, 0xb0, 0x64,
	0xfb, 0x5c, 0xb2, 0xc4, 0x1b, 0x58, 0xe1, 0xe2, 0x74, 0x6f, 0xcb, 0xf5, 0x46, 0x01, 0x50, 0xb7,
	0x21, 0x83, 0x16, 0x5c, 0x21, 0xe4, 0x34, 0x67, 0x6c, 0xf6, 0x25, 0xac, 0x1e, 0x7e, 0xbb, 0xf8,
	0xe7, 0xc4, 0xdf, 0x16, 0x8c, 0x8b, 0xe8, 0xdc, 0x1e, 0xdb, 0x8b, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x42, 0x72, 0x83, 0x22, 0x01, 0x03, 0x00, 0x00,
}
