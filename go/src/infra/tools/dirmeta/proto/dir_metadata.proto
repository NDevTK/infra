// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package chrome.dir_metadata;

option go_package = "infra/tools/dirmeta/proto;dirmetapb";

// Metadata information for a directory.
//
// Individual fields/subfields are inherited by subdirectories.
// For example, if a/DIR_METADATA specifies `monorail.project="chromium"` and
// a/b/DIR_METADATA file exists and does not specify `monorail.project`, then
// `a/b`'s Monorail project is "chromium".
// Note: this semantics can be extended to opt-out individual fields from
// inheritance.
message Metadata {
  // Monorail metadata. Its component field should always map to the same
  // team_email field (see below) for every directory that it is listed in.
  Monorail monorail = 1;

  // The team responsible for the directory. Only a single email is allowed.
  // For example, “team-email@chromium.org”.
  string team_email = 2;

  // The code in this directory is specific to this OS.
  OS os = 3;

  // WPT-specific metadata.
  WPT wpt = 4;

  // Reserved for metadata information for third-party code. See
  // https://opensource.google/docs/thirdparty/metadata/
  reserved 13;
  reserved "third_party";
}

// WPT is WebPlatformTest-specific metadata.
message WPT {
  // Whether wpt-importer should notify the team about new failures.
  Trinary notify = 1;
}

// Supported OS to tag a directory.
enum OS {
  OS_UNSPECIFIED = 0;
  LINUX = 1;
  WINDOWS = 2;
  MAC = 3;
  ANDROID = 4;
  IOS = 5;
  CHROME_OS = 6;
  FUCHSIA = 7;
}

// Monorail specific metadata.
message Monorail {
  // The Monorail project. For example, “chromium”.
  string project = 1;
  // The Monorail component. For example, “UI>Browser>Zoom”.
  // Only a single component is allowed.
  string component = 2;
}

// Trinary is a tri-state boolean.
//
// It is convenient for conceptually-boolean fields that need inheritance.
// Plain bool does not work well because proto3 does not distinguish between
// false and absence of the value. Unlike bool, the default value of Trinary
// is TRINARY_UNSPECIFIED which is different from NO.
//
// Unfortunately the JSON representation are strings "YES" and "NO", as opposed
// to more natural true and false.
// The alternative to Trinary is BoolValue
// https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto#L101
// which has JSON representation as `true` and `false`, but then the text-proto
// representation is verbose: `wpt { notify { value: true }}`.
// Given that we will have more DIR_METADATA files than code that interprets
// the files, we make a choice in favor of clean DIR_METADATA files.
enum Trinary {
  TRINARY_UNSPECIFIED = 0;
  YES = 1;
  NO = 2;
}
