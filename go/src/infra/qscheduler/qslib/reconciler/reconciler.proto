// Copyright 2018 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package reconciler;

import "google/protobuf/timestamp.proto";

// WorkerQueue represents the queue of qscheduler operations that are pending
// for a given worker.
//
// At present, the queue of operations for a worker can be at most 2 elements
// in length, and consist of either:
// - An Abort Job operation followed by an Assign Job operation.
// - An Assign Job operation.
//
// Therefore, instead of representing this as a list of operations, it is
// convenient to flatten this queue into a single object.
message WorkerQueue {
	// EnqueueTime is the time at which these operations were enqueued.
	google.protobuf.Timestamp enqueue_time = 1;

	// TaskToAssign is the task request that should be assigned to this worker.
	string task_to_assign = 2;

	// TaskToAbort indicates the task request id that should be aborted on this worker.
	//
	// Empty string "" indicates that there is nothing to abort.
	string task_to_abort = 3;
}

// State represents a reconciler, which includes its configuration and the
// pending operations that are in-flight and have not been ACK'ed yet.
message State {
	// WorkerQueues is a map from worker id to the pending operations for that worker.
	map<string, WorkerQueue> worker_queues = 1;

	// TaskErrors is a map from task ids that had an error to the error description.
	// These tasks will be returned from GetCancellations, until they are ack'ed as
	// aborted.
	map<string, string> task_errors = 2;
}
