// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/qscheduler/qslib/mutaters/mutaters.proto

package mutaters

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AssignIdleWorker represents a state mutation in which a request
// is assigned to an already idle worker.
type AssignIdleWorker struct {
	// WorkerID of the worker to assign a task to.
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// RequestID of the task to assign to that worker.
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Priority at which the task will run.
	Priority             int32    `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignIdleWorker) Reset()         { *m = AssignIdleWorker{} }
func (m *AssignIdleWorker) String() string { return proto.CompactTextString(m) }
func (*AssignIdleWorker) ProtoMessage()    {}
func (*AssignIdleWorker) Descriptor() ([]byte, []int) {
	return fileDescriptor_mutaters_d420d645690ae915, []int{0}
}
func (m *AssignIdleWorker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIdleWorker.Unmarshal(m, b)
}
func (m *AssignIdleWorker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIdleWorker.Marshal(b, m, deterministic)
}
func (dst *AssignIdleWorker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIdleWorker.Merge(dst, src)
}
func (m *AssignIdleWorker) XXX_Size() int {
	return xxx_messageInfo_AssignIdleWorker.Size(m)
}
func (m *AssignIdleWorker) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIdleWorker.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIdleWorker proto.InternalMessageInfo

func (m *AssignIdleWorker) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *AssignIdleWorker) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *AssignIdleWorker) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

// ChangePriority represents a state mutation in which a running request
// has its priority changed.
type ChangePriority struct {
	// WorkerID of the worker running the job whose priority will change.
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// NewPriority that the request will henceforth run with.
	NewPriority          int32    `protobuf:"varint,2,opt,name=new_priority,json=newPriority,proto3" json:"new_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePriority) Reset()         { *m = ChangePriority{} }
func (m *ChangePriority) String() string { return proto.CompactTextString(m) }
func (*ChangePriority) ProtoMessage()    {}
func (*ChangePriority) Descriptor() ([]byte, []int) {
	return fileDescriptor_mutaters_d420d645690ae915, []int{1}
}
func (m *ChangePriority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePriority.Unmarshal(m, b)
}
func (m *ChangePriority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePriority.Marshal(b, m, deterministic)
}
func (dst *ChangePriority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePriority.Merge(dst, src)
}
func (m *ChangePriority) XXX_Size() int {
	return xxx_messageInfo_ChangePriority.Size(m)
}
func (m *ChangePriority) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePriority.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePriority proto.InternalMessageInfo

func (m *ChangePriority) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *ChangePriority) GetNewPriority() int32 {
	if m != nil {
		return m.NewPriority
	}
	return 0
}

// PreemptTask represents a state mutation in which a running request
// is interrupted, and replaced by a new request.
type PreemptTask struct {
	// WorkerID of the worker to preempt.
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// RequestID of the request that will replace the current one on that
	// worker.
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Priority that the new request will run with, on the worker.
	Priority             int32    `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreemptTask) Reset()         { *m = PreemptTask{} }
func (m *PreemptTask) String() string { return proto.CompactTextString(m) }
func (*PreemptTask) ProtoMessage()    {}
func (*PreemptTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_mutaters_d420d645690ae915, []int{2}
}
func (m *PreemptTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreemptTask.Unmarshal(m, b)
}
func (m *PreemptTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreemptTask.Marshal(b, m, deterministic)
}
func (dst *PreemptTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreemptTask.Merge(dst, src)
}
func (m *PreemptTask) XXX_Size() int {
	return xxx_messageInfo_PreemptTask.Size(m)
}
func (m *PreemptTask) XXX_DiscardUnknown() {
	xxx_messageInfo_PreemptTask.DiscardUnknown(m)
}

var xxx_messageInfo_PreemptTask proto.InternalMessageInfo

func (m *PreemptTask) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *PreemptTask) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *PreemptTask) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func init() {
	proto.RegisterType((*AssignIdleWorker)(nil), "mutaters.AssignIdleWorker")
	proto.RegisterType((*ChangePriority)(nil), "mutaters.ChangePriority")
	proto.RegisterType((*PreemptTask)(nil), "mutaters.PreemptTask")
}

func init() {
	proto.RegisterFile("infra/qscheduler/qslib/mutaters/mutaters.proto", fileDescriptor_mutaters_d420d645690ae915)
}

var fileDescriptor_mutaters_d420d645690ae915 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x90, 0x41, 0x4b, 0x80, 0x40,
	0x10, 0x85, 0xd1, 0x28, 0x74, 0x8c, 0x88, 0x3d, 0x49, 0x11, 0x98, 0x27, 0x4f, 0x7a, 0xe8, 0x17,
	0x44, 0x27, 0x6f, 0x22, 0x41, 0x47, 0x59, 0xdb, 0x49, 0x37, 0x75, 0x57, 0x67, 0x57, 0xa4, 0x7f,
	0x1f, 0x6d, 0xea, 0xb1, 0x5b, 0xb7, 0xf7, 0xbe, 0xc7, 0xbc, 0x19, 0x06, 0x72, 0xa9, 0x3e, 0x88,
	0x17, 0x8b, 0x79, 0xef, 0x51, 0xac, 0x23, 0x52, 0xb1, 0x98, 0x51, 0xb6, 0xc5, 0xb4, 0x5a, 0x6e,
	0x91, 0xcc, 0x29, 0xf2, 0x99, 0xb4, 0xd5, 0x2c, 0x38, 0x7c, 0xfa, 0x09, 0xb7, 0xcf, 0xc6, 0xc8,
	0x4e, 0x95, 0x62, 0xc4, 0x37, 0x4d, 0x03, 0x12, 0xbb, 0x87, 0x70, 0x73, 0xaa, 0x91, 0x22, 0xf6,
	0x12, 0x2f, 0x0b, 0xeb, 0xe0, 0x17, 0x94, 0x82, 0x3d, 0x00, 0x10, 0x2e, 0x2b, 0x1a, 0xfb, 0x93,
	0xfa, 0x2e, 0x0d, 0x77, 0x52, 0x0a, 0x76, 0x07, 0xc1, 0x4c, 0x52, 0x93, 0xb4, 0x5f, 0xf1, 0x45,
	0xe2, 0x65, 0x97, 0xf5, 0xe9, 0xd3, 0x0a, 0x6e, 0x5e, 0x7a, 0xae, 0x3a, 0xac, 0x76, 0xf2, 0xf7,
	0xa6, 0x47, 0xb8, 0x56, 0xb8, 0x35, 0x67, 0x9d, 0xef, 0xea, 0x22, 0x85, 0xdb, 0x31, 0x9f, 0x22,
	0x44, 0x15, 0x21, 0x4e, 0xb3, 0x7d, 0xe5, 0x66, 0xf8, 0xaf, 0xc3, 0xdb, 0x2b, 0xf7, 0xb5, 0xa7,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x97, 0x0a, 0xd4, 0x67, 0x01, 0x00, 0x00,
}
