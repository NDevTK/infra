// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/qscheduler/qslib/simulation/config.proto

package simulation

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Workload represents a stream of new tasks being enqueued, in the quota
// scheduler simulation.
//
// Workload is the configuration class for a Generator.
type Workload struct {
	// Period of the workload generation cycle
	Period *duration.Duration `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	// Num of task requests to create per cycle.
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// CyclesPerLabelSet is the number of cycles in which to use a given
	// LabelSet (for convenience, 0 is equivalent to 1, and indicates that
	// a LabelSet will be used for a single cycle).
	CyclesPerLabelSet int32 `protobuf:"varint,3,opt,name=cycles_per_label_set,json=cyclesPerLabelSet,proto3" json:"cycles_per_label_set,omitempty"`
	// AccountId of the account that will own generated jobs.
	AccountId string `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Duration is the running duration of the tasks that will be generated.
	Duration *duration.Duration `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// Tag is a string that will be included in the LabelSet and request
	// ids for task requests from this this workload. This should be
	// unique within a simulation.
	Tag                  string   `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workload) Reset()         { *m = Workload{} }
func (m *Workload) String() string { return proto.CompactTextString(m) }
func (*Workload) ProtoMessage()    {}
func (*Workload) Descriptor() ([]byte, []int) {
	return fileDescriptor_b84ada0365982e8a, []int{0}
}
func (m *Workload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workload.Unmarshal(m, b)
}
func (m *Workload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workload.Marshal(b, m, deterministic)
}
func (m *Workload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workload.Merge(m, src)
}
func (m *Workload) XXX_Size() int {
	return xxx_messageInfo_Workload.Size(m)
}
func (m *Workload) XXX_DiscardUnknown() {
	xxx_messageInfo_Workload.DiscardUnknown(m)
}

var xxx_messageInfo_Workload proto.InternalMessageInfo

func (m *Workload) GetPeriod() *duration.Duration {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Workload) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *Workload) GetCyclesPerLabelSet() int32 {
	if m != nil {
		return m.CyclesPerLabelSet
	}
	return 0
}

func (m *Workload) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Workload) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Workload) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func init() {
	proto.RegisterType((*Workload)(nil), "simulation.Workload")
}

func init() {
	proto.RegisterFile("infra/qscheduler/qslib/simulation/config.proto", fileDescriptor_b84ada0365982e8a)
}

var fileDescriptor_b84ada0365982e8a = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8e, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0x15, 0x4a, 0xa3, 0xd6, 0x2c, 0x60, 0x31, 0x18, 0x24, 0x50, 0xc4, 0x94, 0xc9, 0x16,
	0x20, 0xde, 0x80, 0x05, 0x89, 0x01, 0x85, 0x81, 0x31, 0x72, 0xec, 0x9b, 0x60, 0xe1, 0xfa, 0xa6,
	0xfe, 0x19, 0x78, 0x63, 0x1e, 0x03, 0xc5, 0x49, 0x61, 0xec, 0x76, 0x74, 0xbf, 0xef, 0x5c, 0x1d,
	0xc2, 0x8d, 0xeb, 0xbd, 0x14, 0xfb, 0xa0, 0x3e, 0x41, 0x27, 0x0b, 0x5e, 0xec, 0x83, 0x35, 0x9d,
	0x08, 0x66, 0x97, 0xac, 0x8c, 0x06, 0x9d, 0x50, 0xe8, 0x7a, 0x33, 0xf0, 0xd1, 0x63, 0x44, 0x4a,
	0xfe, 0xc1, 0xf5, 0xed, 0x80, 0x38, 0x58, 0x10, 0x99, 0x74, 0xa9, 0x17, 0x3a, 0xf9, 0x4c, 0x66,
	0xf7, 0xee, 0xa7, 0x20, 0x9b, 0x0f, 0xf4, 0x5f, 0x16, 0xa5, 0xa6, 0xf7, 0xa4, 0x1c, 0xc1, 0x1b,
	0xd4, 0xac, 0xa8, 0x8a, 0xfa, 0xec, 0xe1, 0x8a, 0xcf, 0x6d, 0x7e, 0x68, 0xf3, 0xe7, 0xa5, 0xdd,
	0x2c, 0x22, 0x3d, 0x27, 0x2b, 0x97, 0x76, 0xec, 0xa4, 0x2a, 0xea, 0x75, 0x33, 0x45, 0x2a, 0xc8,
	0xa5, 0xfa, 0x56, 0x16, 0x42, 0x3b, 0x82, 0x6f, 0xad, 0xec, 0xc0, 0xb6, 0x01, 0x22, 0x5b, 0x65,
	0xe5, 0x62, 0x66, 0x6f, 0xe0, 0x5f, 0x27, 0xf2, 0x0e, 0x91, 0xde, 0x10, 0x22, 0x95, 0xc2, 0xe4,
	0x62, 0x6b, 0x34, 0x3b, 0xad, 0x8a, 0x7a, 0xdb, 0x6c, 0x97, 0xcb, 0x8b, 0xa6, 0x4f, 0x64, 0x73,
	0xd8, 0xcc, 0xd6, 0xc7, 0x66, 0xfd, 0xa9, 0xd3, 0xb0, 0x28, 0x07, 0x56, 0xe6, 0x77, 0x53, 0xec,
	0xca, 0xac, 0x3f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x38, 0x95, 0x41, 0xb0, 0x4f, 0x01, 0x00,
	0x00,
}
