// Copyright 2020 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package chrome.rts.presubmit.eval;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "infra/rts/presubmit/eval/proto;evalpb";

// A rejection of a code change due to test failures.
//
// Normally these messages are in a directory where .jsonl.gz files are
// GZIP-compressed JSON Lines files, where each entry is a protojson-encoded
// Rejection message.
message Rejection {
  // The rejected patchsets.
  repeated GerritPatchset patchsets = 1;

  // When the code change was rejected.
  google.protobuf.Timestamp timestamp = 2;

  // List of test variants that caused the rejection.
  repeated TestVariant failed_test_variants = 3;
}

// Code changes and a sample of test runs with their durations.
//
// Normally these records are in a directory where .jsonl.gz files are
// GZIP-compressed JSON Lines files, where each entry is a protojson-encoded
// TestDurationRecord message.
message TestDurationRecord {
  // The patchset set that observed the test durations.
  repeated GerritPatchset patchsets = 1;
  // A sample of test durations from results of the patchsets.
  repeated TestDuration test_durations = 2;

  // When the code change was rejected.
  google.protobuf.Timestamp timestamp = 3;
}

// How long a test took.
message TestDuration {
  // The test variant that was measured.
  TestVariant test_variant = 1;

  // How long test execution took.
  google.protobuf.Duration duration = 2;
}

// A Gerrit CL.
message GerritChange {
  // Gerrit host, e.g. "chromium-review.googlesource.com".
  string host = 1;

  // Gerrit project, e.g. "chromium/src".
  // It is required.
  string project = 2;

  // Change number,
  // e.g. 123 for https://chromium.googlesource.com/c/123
  int64 number = 3;
}

// A Gerrit patchset.
message GerritPatchset {
  // The CL.
  GerritChange change = 1;

  // The patchset number.
  int64 patchset = 2;

  // The files changed in the patchset.
  repeated SourceFile changed_files = 3;
}

// Identifies a source file.
message SourceFile {
	// The repository identifier.
	// For googlesource.com repositories, it is a canonical URL, e.g.
	// https://chromium.googlesource.com/chromium/src
	string repo = 1;

	// The file relative to the repo root. Starts with "//".
	string path = 2;
}

// A single way to run a single test.
// For example, a particular test case on Windows 10.
message TestVariant {
  // Test identifier.
  // For Chromium, a ResultDB TestID.
  string id = 1;

  // One particular way to run this test, expressed as domain-specific key-value
  // pairs. Each element has format "<key>:<value>".
  // For Chromium, this is a ResultDB test variant.
  //
  // The keys must be unique. This is not a map for conveniency of extracting
  // from BigQuery which cannot convert tabular data to JSON objects with
  // dynamic keys.
  repeated string variant = 2;

  // Path of the file where the test is defined.
  string file_name = 3;
}
