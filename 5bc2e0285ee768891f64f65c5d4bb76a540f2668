{
  "comments": [
    {
      "key": {
        "uuid": "e536b671_8954f0a4",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 8,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "Separate out imports: stdlib, almost-stdlib, chops-libraries, internal.\nOr,\nSeparate out imports: stdlib, almost-stdlib, all-chops-imports.",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 8,
        "endChar": 36
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c3007c4_98581f61",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 8,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done, I think? Not 100% sure what you meant.",
      "parentUuid": "e536b671_8954f0a4",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 8,
        "endChar": 36
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "632f0c6e_6bc897b1",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 8,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "Same block. e.g.: https://cs.chromium.org/chromium/infra/go/src/go.chromium.org/luci/milo/frontend/view_builders.go?l\u003d17\n\nThis is conventional in this and other repos I\u0027ve seen. `go import` does a reasonably good job of it on its own.",
      "parentUuid": "2c3007c4_98581f61",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 8,
        "endChar": 36
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9761944_bccf3662",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 17,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "Prefer comments on their own line:\n\n  // Flag used ...\n  Invalid bool",
      "range": {
        "startLine": 17,
        "startChar": 16,
        "endLine": 17,
        "endChar": 90
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6deef9e3_72e0d40f",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 17,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9761944_bccf3662",
      "range": {
        "startLine": 17,
        "startChar": 16,
        "endLine": 17,
        "endChar": 90
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd9cf17e_1314cd78",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T19:07:28Z",
      "side": 1,
      "message": "consider making this a List[]*Request ? minor optimization",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efeb1d3c_3cf91293",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T22:23:53Z",
      "side": 1,
      "message": "added todo",
      "parentUuid": "fd9cf17e_1314cd78",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b75898c_557e1ad8",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "It\u0027s usually better to pass around *[]Request than []*Request.\n\nAlso, why do you need a type for this? I\u0027d just use []Request in the function signatures everywhere. What do we gain by abstracting this type to List? The name List is actually worse than []Request which tells me what exactly this is.",
      "parentUuid": "fd9cf17e_1314cd78",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b99f2eaf_2961df36",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Reasons I wanted this as a type of its own:\n\n1) I like that other packages refer to it as a priority.List , which is what it is.\n2) I wanted it to be a valid receiver for the ForPriority method, thus it needed a named type.\n\nDo you buy it?",
      "parentUuid": "9b75898c_557e1ad8",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c69e85b6_24732a8e",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "First, scratch my comment about *[]Request vs []*Request. Really, we\u0027re passing around a slice, so neither should be costly, and []Request should be enough in fact. []*Request requires an extra dereference every time it is used, so []Request is the best of the three.\n\nAlso, Ack for name. I\u0027d still call it RequestList because List sounds like an abstract type (but go likes short names...)",
      "parentUuid": "b99f2eaf_2961df36",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "713167db_c9db1832",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "nit: I like to order functions in a file such that a top-down reading is possible: public stuff on top, more detailed stuff lower as you go.",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcc9adf3_b7d19aa1",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "713167db_c9db1832",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87b875af_c1b4533c",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "Algorithm question: This and some other places make me think that you want to allow Running tasks that are not associated with any account. What will insert such tasks in our state? (i.e., if the scheduler isn\u0027t prioritizing these tasks, what is?)",
      "range": {
        "startLine": 28,
        "startChar": 25,
        "endLine": 28,
        "endChar": 38
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abd31a37_3f7f9ee5",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "There might be jobs running not associated with any account, either because they are:\n - started running and then their account got deleted out from under them\n - never had an account to run against in the first place\n\nin either case, the job will simply run in the Free bucket (lowest possible priority)",
      "parentUuid": "87b875af_c1b4533c",
      "range": {
        "startLine": 28,
        "startChar": 25,
        "endLine": 28,
        "endChar": 38
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cf5b116_743281df",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "abd31a37_3f7f9ee5",
      "range": {
        "startLine": 28,
        "startChar": 25,
        "endLine": 28,
        "endChar": 38
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df3acc31_655156d3",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "More idiomatic:\n\n  if count, ok :\u003d jobsPerAccount[running.Request.AccountId]; ok {\n    // can use count here.\n  }",
      "range": {
        "startLine": 29,
        "startChar": 1,
        "endLine": 29,
        "endChar": 56
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00e56a12_98636ff8",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df3acc31_655156d3",
      "range": {
        "startLine": 29,
        "startChar": 1,
        "endLine": 29,
        "endChar": 56
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2f4dd79_da483b02",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T19:07:28Z",
      "side": 1,
      "message": "use ++, more readable",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a1fb4cb_cf19cd1a",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T22:23:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2f4dd79_da483b02",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d5ed91a_8724a335",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "idiomatic:\n\n  if count, ok :\u003d jobsPerAccount[accountID]; ok {\n    // use count here.\n  }",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 9
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ec4fcf_55e06495",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d5ed91a_8724a335",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 9
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c4fe51c_098db55f",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "Once again, is it possible that keys of state.Balances are different from keys of config.AccountConfigs. If so why? (we should be tracking balances for exactly those accounts that have something configured for them).\n\nIf not, this should be an assert.",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e083b73a_6e1cfe76",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Hmm. I think you are right, but I want to punt. Complication is that it involves a consistency between State and Config, which might be coming from different sources. Adding a TODO.",
      "parentUuid": "8c4fe51c_098db55f",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cbe6755_f87824ff",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 46,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T19:07:28Z",
      "side": 1,
      "message": "use ++ instead, more readable",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f924fabe_2b88f606",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 46,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T22:23:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cbe6755_f87824ff",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbc6ba04_f27bde3e",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 51,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "// nit: A short one-line summary.\n//\n// followed by salient details makes for better godoc.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 62
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca227bc3_e445e186",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 51,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbc6ba04_f27bde3e",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 62
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86439c64_f18e2191",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "food for thought:\nReading this, I increasingly feel that you want s/State/Pool/\n\nAnd add a field Config within Pool\n\nPool.RequestQueue (instead of State.RequestQueue), Pool.Balances (instead of State.Balances) etc.\n... and Pool.Config (Instead of standalone Config and State)\n\nI know you want clear distinction between state and config, so one could even think if Pool.State.RequestQueue, but imo it\u0027s overkill. A separately attached Pool.Config ought to be enough to keep configuration separate. Everything else is State.",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce8ef9d4_42ea4bec",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "I want qslib to be unaware of the concept of pools. From qslib\u0027s perspective, there is only one quota scheduler in the universe.\n\nThe layer above this, which is the middleware between qslib and swarming, will orchestrate how many qschedulers exist and what view of the world they see (i.e. pools of devices, sets of quota account configuration).\n\nMake sense?",
      "parentUuid": "86439c64_f18e2191",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6380ca73_6a009cf3",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "The part about all Workers belonging to qslib makes sense (i.e, there are workers and accounts that can use all of those workers \u003cthat\u0027s all\u003e)\n\nThis makes more sense to me if I read it as scheduler.State and scheduler.Config.\nBut that makes me think that these functions are getting more information than they need.\n\n  func PrioritizeRequests(rqs *types.RequestQueue, bs *types.Balances, acs *types.AccountConfings) List {\n  }\n\nWith that signature, I know what information PrioritizeRequests does: it returns priority.List of the requests in rqs after looking at current balances and the configuration for the involved accounts.\n\nEDIT: \nI see that demoteJobsBeyondFanout also uses state.Running\nI\u0027d say still limite State and Config to just this entry function (all other functions called from here get more specific arguments) + keep the entry function short (just 5 - 8 lines of what to do. Logic of how to do in called functions that don\u0027t get the whole world as arguments)",
      "parentUuid": "ce8ef9d4_42ea4bec",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 21
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b35782b_0865d350",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "make([]Request, 0, len(state.RequestQueue)\n  and use append() below, to avoid unnecessary 0-initialization of array here.",
      "range": {
        "startLine": 58,
        "startChar": 24,
        "endLine": 58,
        "endChar": 70
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ffd76c3_a86a79a7",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b35782b_0865d350",
      "range": {
        "startLine": 58,
        "startChar": 24,
        "endLine": 58,
        "endChar": 70
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c119c3c_9712b669",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 75,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "personal style nit: If naming a function, I\u0027d declare it at top level like normal functions (instead of creating a lambda and then naming it).",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 5
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd901170_619bab8d",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 75,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Can\u0027t really do that, because this function has a closure over local variable prioritizedRequests.\n\n(by design, apparently, for sort-helper functions).",
      "parentUuid": "7c119c3c_9712b669",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 5
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16dd08a6_fed8a1ea",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 75,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "Ugh, did I say dislike sort.SliceStable()?\nThis is non-trivial enough that I\u0027d still do this (is common-ish in languages with lambdas)\n\n  func requestListLess(l List, i, j int) bool {\n    ...\n  }\n\n  sort.SliceStable(\n    prioritizeRequests,\n    func(i, j int) bool {\n      return requestListLess(prioritizeRequests, i, j)\n    },\n  )\n\nThe PrioritizeRequests function is simple, but looks large because of less, which hides what is really happening here.",
      "parentUuid": "dd901170_619bab8d",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 5
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46cc9fb5_3676237d",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "more idiomatic:\n\n  switch {\n  case a.Priority \u003c b.Priority:\n    return true\n  case a.Priority \u003c b.Priority:\n    return false\n  default:\n    a.Request.EnqueueTime.Before(b.Request.EnqueueTime)\n  }",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 83,
        "endChar": 3
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59a7a480_a7ec19f9",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46cc9fb5_3676237d",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 83,
        "endChar": 3
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12e7c076_6319ddff",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "It\u0027d be better to store parsed time instead of timestamps that are parsed here.\n\n- All parsing errors can be handled at enqueue time, where reported error is likely to make more sense (why is my scheduler suddenly hitting parsing errors again?)\n- Doing it here means that you\u0027ll parse the same timestamps repeatedly (each tick)",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 45
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8088be8a_89bd9d2b",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "This is a side effect of defining enqueue_time as a   google.protobuf.Timestamp in task.proto, which seems to be the widely accepted practice.\n\nI don\u0027t want to store an additional field on it with parsed time, because that will be non authoritative.",
      "parentUuid": "12e7c076_6319ddff",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 45
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1e4f06d_cad0a58f",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8088be8a_89bd9d2b",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 45
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "724a7f40_0fa70ba4",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "I don\u0027t see why prioritizedRequests has to be sorted before the call to demoteJobsBeyondFanout(). That function seems to walk down the whole list, independent of what order the requests currently are.",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 91,
        "endChar": 44
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ca20fec_93a0735c",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "That function demotes jobs after it has seen more than |MaxFanout| for a particular account. We want to demote the lowest priority jobs that it can. That\u0027s why the list has to be sorted once prior to it walking the list, then sorted again after.\n\nThere are some possible optimizations, like sorting it once before into a heap, and then having it heap-and-fix, because most of the time it will demote only a fraction of jobs. But it feels too soon to optimize.",
      "parentUuid": "724a7f40_0fa70ba4",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 91,
        "endChar": 44
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d7c113f_9695cff1",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "Can you add this comment in the code for the next time I see this :)",
      "parentUuid": "9ca20fec_93a0735c",
      "range": {
        "startLine": 91,
        "startChar": 1,
        "endLine": 91,
        "endChar": 44
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1d7fa05_a6dd15d5",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 101,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "nitty nit: A good description why the receiver objects have such short names: https://github.com/golang/go/wiki/CodeReviewComments#receiver-names\n\nI\u0027d go so far as s/pR/pr/ (easier to type).",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 8
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0da4e89_cfc59bcc",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 101,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Renamed to \"s\"",
      "parentUuid": "f1d7fa05_a6dd15d5",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 8
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef056747_da90554f",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 112,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "I\u0027d pull out corner case before the actual loop. Makes the flow easier to understand at the cost of one extra list indexing operation.\n prlen :\u003d len(pR)\n if prlen \u003d\u003d 0 || pR[0].Priority \u003e priority {\n    return []Requests{}\n }\n\n ...",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 112,
        "endChar": 3
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9df7bd5_67043501",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 112,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "I don\u0027t see how I can pull this out of the loop. I need to iterate beyond any job at priority p before I know that no jobs at p are present.\n\nHowever, I might return a slice that is still within the same array, which smells a little more correct to me.",
      "parentUuid": "ef056747_da90554f",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 112,
        "endChar": 3
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cbb21e1_c1ba5480",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize.go",
        "patchSetId": 9
      },
      "lineNbr": 112,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-03T23:49:52Z",
      "side": 1,
      "message": "Oops, perhaps this:\n\n  start :\u003d 0\n  for ; start \u003c len(s); start++ {\n    if s[start].Priority \u003e\u003d priority {\n      break\n    }\n  }\n  end :\u003d start\n  for ; end \u003c len(s); end++ {\n    if s[end].Priority \u003e priority {\n      break\n    }\n  }\n  return s[start:end]\n\nEither way, this needs unittests ;)",
      "parentUuid": "f9df7bd5_67043501",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 112,
        "endChar": 3
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14f7a569_6f151773",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1002639
      },
      "writtenOn": "2018-08-02T22:28:53Z",
      "side": 1,
      "message": "separate out imports by stdlib, almost-stdlib, chops-infra.",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 12,
        "endChar": 1
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13a7c2e3_7e4432e9",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-03T01:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14f7a569_6f151773",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 12,
        "endChar": 1
      },
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd31c760_f1233492",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 9
      },
      "lineNbr": 145,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T20:30:41Z",
      "side": 1,
      "message": "s/not/no",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b959aeb_04348b91",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 9
      },
      "lineNbr": 145,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T22:23:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd31c760_f1233492",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae04fdef_23567e5e",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 9
      },
      "lineNbr": 172,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T20:30:41Z",
      "side": 1,
      "message": "create a helper method for creating timestamps",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851961e6_7e0f8a2a",
        "filename": "go/src/infra/qscheduler/qslib/priority/prioritize_test.go",
        "patchSetId": 9
      },
      "lineNbr": 172,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2018-08-02T22:23:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae04fdef_23567e5e",
      "revId": "5bc2e0285ee768891f64f65c5d4bb76a540f2668",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}