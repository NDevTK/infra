{
  "comments": [
    {
      "key": {
        "uuid": "f726e3a3_033a4cfb",
        "filename": "appengine/findit/pipelines/flake_failure/update_flake_analysis_data_points_pipeline.py",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1002882
      },
      "writtenOn": "2018-05-01T16:52:48Z",
      "side": 1,
      "message": "I have comments in https://chromium-review.googlesource.com/c/infra/infra/+/1031513\n\nAlso copied as below\n--------------------\nFirst, we can\u0027t get rid of regression for the whole analysis, because we might not have the corresponding builder for a Waterfall builder, until 1) we fully migrated to Luci and 2) VMs are added to Findit pool in time before a new OS/version is added to Waterfall.\n\nSecond, we should show regression range for the whole analysis. As the analysis moves on, the regression range would become available (a stable point is hit), and be shrunk (as we narrow it down to a single Waterfall build and then to a single commit). If the analysis failed out in the middle, we still have a smaller range to human to investigate further.\n\nThird, We could get rid of the regression range for a specific point and just show the commit position instead. If we still want to keep that, the commit position and the git hash highlighted here could be computed at run time by retrieving from the immediate previous data point after ordering them by commit position.\n\nForth, for the regression range of the whole analysis, we could add two fields to the data model to track them explicitly instead of going through all the computation here and other places.\n\nHope the above explain it better. Please feel free to set up a quick meeting to discuss further.",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 43,
        "endChar": 59
      },
      "revId": "8d5f7ee14b47b2d7f250d8bd7e434c79fcc93522",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90c7dd08_246b9c89",
        "filename": "appengine/findit/pipelines/flake_failure/update_flake_analysis_data_points_pipeline.py",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1119424
      },
      "writtenOn": "2018-05-01T20:40:17Z",
      "side": 1,
      "message": "I think we need to clarify what \"regression range\" means, as there are at least 2 definitions floating around that are causing confusion.\n\nCurrently (old pipelines, and new pipelines that this CL is attempting to fix the main bug for), \"regression range\" means the commits in single and specific build cycle. I would like to get rid of this definition within Flake Analyzer entirely if possible, as there are invalid/exception builds, etc, and all analysis that go from stable -\u003e flaky at any point, regardless of confidence, etc, will always pinpoint down to a single commit that represents the culprit.\n\nWhat \"regression range\" should mean: Any 2 already analyzed data points by this analysis that go from stable -\u003e flaky regardless of distance. This range should be continually shrinking as the analysis progresses. When the analysis completes, the regression range has a distance of 1, and the later point is the culprit.\n\nIn the original bug for this CL, the \"regression range\" is None when logging bugs, because it assumes the old build-cycle definition of regression range (using suspected build git hash + previous build git hash to compute). This CL was originally to continue support for that feature since bugs expect to display something for regression range.\n\nI\u0027d actually prefer to eliminate \"regression range\" entirely from bug filing because:\n1. In the new pipelines, analyses that find build-level regression ranges but don\u0027t find culprits are because they ended in error. Should not file a bug (pipelines would abort by then).\n2. Since only culprits with high confidence will file bugs, if we continue to include a \"regression range\", the only one that makes sense would be the build level one (which I\u0027d like to get rid of, but this CL is to continue support for), because the second definition would have culprit and regression range would be 1:1, thus redundant.\n\nIf it\u0027s ok, I\u0027d actually prefer to eliminate \"regression range\" from the body of the bug that gets filed due to reasons above, make the \"regression range\" that gets displayed in the analysis page based on the current progress of the analysis.\n\nThis change in this CL is still needed though to restore build number to the data points for display purposes.\n\nThoughts?",
      "parentUuid": "f726e3a3_033a4cfb",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 43,
        "endChar": 59
      },
      "revId": "8d5f7ee14b47b2d7f250d8bd7e434c79fcc93522",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}