{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "69550cb6_8fcadcff",
        "filename": "go/src/infra/cros/karte/internal/testsupport/testsupport.go",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1333207
      },
      "writtenOn": "2024-05-06T15:44:24Z",
      "side": 1,
      "message": "You could just return `context.Context` in the function. Why need `Fixture`",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "f8e7bbf06c245f543828399d2615dfce8e8e8701",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "009a4217_e94afdc6",
        "filename": "go/src/infra/cros/karte/internal/testsupport/testsupport.go",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1351748
      },
      "writtenOn": "2024-05-06T17:10:24Z",
      "side": 1,
      "message": "In the future I\u0027m going to put the bigquery client in there too. This is the way that `testsupport` works in `fleetcost`.\n\nIf I take the context out of this struct, I\u0027ll just have to put it back in the future.",
      "parentUuid": "69550cb6_8fcadcff",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "f8e7bbf06c245f543828399d2615dfce8e8e8701",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1e4770e_11138704",
        "filename": "go/src/infra/cros/karte/internal/testsupport/testsupport.go",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1333207
      },
      "writtenOn": "2024-05-06T17:14:46Z",
      "side": 1,
      "message": "Wouldn\u0027t it be better to have the bq client in the context?. That\u0027s how most of other services do it. Makes it easier for testing",
      "parentUuid": "009a4217_e94afdc6",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "f8e7bbf06c245f543828399d2615dfce8e8e8701",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bd2347e_1486667e",
        "filename": "go/src/infra/cros/karte/internal/testsupport/testsupport.go",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1351748
      },
      "writtenOn": "2024-05-06T17:50:15Z",
      "side": 1,
      "message": "Karte does put the bigquery client in the context, as well as a bunch of stuff that arguably shouldn\u0027t be there.\n\nThis is actually a decision that I reversed in `fleetcost`. (In that project, I\u0027m passing the bigquery client around explicitly.) I think it makes the code harder to follow because you can\u0027t tell which parts of the code are using what resources.\n\nI changed the test fixture type to a context though because right now, for Karte, everything you need is in the context.",
      "parentUuid": "f1e4770e_11138704",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "f8e7bbf06c245f543828399d2615dfce8e8e8701",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fd00173_bb141326",
        "filename": "go/src/infra/cros/karte/internal/testsupport/testsupport.go",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1333207
      },
      "writtenOn": "2024-05-06T17:54:40Z",
      "side": 1,
      "message": "Interesting. I\u0027m not sure how this works, I\u0027ll have to check out the fleet cost code\n\nor you can tell me later",
      "parentUuid": "7bd2347e_1486667e",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "f8e7bbf06c245f543828399d2615dfce8e8e8701",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}