{
  "comments": [
    {
      "key": {
        "uuid": "9450c16b_4224488c",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2019-10-22T18:12:38Z",
      "side": 1,
      "message": "With the question mark, would that make this also match \u0027\u003chistogram-\u0027, as in \u003chistogram-suffixes\u003e ?",
      "range": {
        "startLine": 85,
        "startChar": 66,
        "endLine": 85,
        "endChar": 67
      },
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "696eea2b_738f853b",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1369574
      },
      "writtenOn": "2019-10-22T21:23:28Z",
      "side": 1,
      "message": "Yes, good point. I changed it to match the newline as well, which I think was the case I was trying to take care of by adding ?",
      "parentUuid": "9450c16b_4224488c",
      "range": {
        "startLine": 85,
        "startChar": 66,
        "endLine": 85,
        "endChar": 67
      },
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7da65b98_63b9e114",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 167,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2019-10-22T18:12:38Z",
      "side": 1,
      "message": "Note: The word \"original\" is used in other places, rather than \"previous\", you could use the same word here.",
      "range": {
        "startLine": 167,
        "startChar": 64,
        "endLine": 167,
        "endChar": 81
      },
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3577dc6_4998fd89",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 167,
      "author": {
        "id": 1369574
      },
      "writtenOn": "2019-10-22T21:23:28Z",
      "side": 1,
      "message": "I can change the uses of \"original\" to be \"previous\". I think that might be clearer?",
      "parentUuid": "7da65b98_63b9e114",
      "range": {
        "startLine": 167,
        "startChar": 64,
        "endLine": 167,
        "endChar": 81
      },
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "271c565f_8c51e01f",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 169,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2019-10-22T18:12:38Z",
      "side": 1,
      "message": "I may have missed this before. Is enums.xml is a special file in metrics which should read by this analyzer even if enums.xml is itself not changed?",
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc44039d_fc12e530",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 169,
      "author": {
        "id": 1369574
      },
      "writtenOn": "2019-10-22T21:23:28Z",
      "side": 1,
      "message": "Yes, we need it to identify the histograms that have single-element enums. (This was a change I implemented while you were away.)",
      "parentUuid": "271c565f_8c51e01f",
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b84bf51c_46823bb0",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 171,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2019-10-22T18:12:38Z",
      "side": 1,
      "message": "What is the temporary way to get recipes to work?",
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abe8b37b_3fd89819",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 171,
      "author": {
        "id": 1369574
      },
      "writtenOn": "2019-10-22T21:23:28Z",
      "side": 1,
      "message": "Everything inside the \"else\" below here I plan to get rid of once recipes completely work. The recipe should pass in all the previous versions of the files in prevDir, and the only changed files passed in should be the relevant files to our analyzer. So we can get rid of all the code down here about creating a temporary directory, applying a patch, filtering out irrelevant files, etc.",
      "parentUuid": "b84bf51c_46823bb0",
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e0d7e88_a4c3b502",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 263,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2019-10-22T18:12:38Z",
      "side": 1,
      "message": "Nit: even though there\u0027s no line length limit in Go, you could still wrap all comments to 80 columns.",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 263,
        "endChar": 42
      },
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfa3c03f_7bf72e2a",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 263,
      "author": {
        "id": 1369574
      },
      "writtenOn": "2019-10-22T21:23:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e0d7e88_a4c3b502",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 263,
        "endChar": 42
      },
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbb8ee2d_ea804bbf",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 364,
      "author": {
        "id": 1003190
      },
      "writtenOn": "2019-10-22T18:12:38Z",
      "side": 1,
      "message": "Why do we make a copy?",
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "631a8290_42a8e72f",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 364,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2019-10-22T21:06:21Z",
      "side": 1,
      "message": "The copy is necessary so that the scanner doesn\u0027t overwrite memory out from under us – it\u0027s not safe to try to share this slice. Tina, let\u0027s definitely add a comment to explain this, as it\u0027s quite subtle.",
      "parentUuid": "cbb8ee2d_ea804bbf",
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97388960_3e730395",
        "filename": "go/src/infra/tricium/functions/metrics/histograms_check.go",
        "patchSetId": 12
      },
      "lineNbr": 364,
      "author": {
        "id": 1369574
      },
      "writtenOn": "2019-10-22T21:23:28Z",
      "side": 1,
      "message": "This was a weird bug Ilya and I discovered. Basically, scanner.Scan() would sometimes recycle the actual arrays it was writing to. So, if I directly set currHistogram \u003d scanner.Scan() or append scanner.Scan() to currHistogram instead of copying it first, scanner.Scan() might overwrite the arrays in currHistogram before the analyzer had a chance to unmarshal it, causing garbage values in currHistogram and causing an error in the unmarshalling.",
      "parentUuid": "cbb8ee2d_ea804bbf",
      "revId": "fbc39ee392b4c2ed86ffc7ea25144e51b3692e5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}