{
  "comments": [
    {
      "key": {
        "uuid": "18237f07_0c49fcc4",
        "filename": "appengine/findit/pipelines/flake_failure/analyze_flake_pipeline.py",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1002882
      },
      "writtenOn": "2018-05-30T20:02:50Z",
      "side": 1,
      "message": "Since this pipeline is a recursive one, should we check whether this instance is the root pipeline?\n\nif self.root_pipeline_id \u003d\u003d self.pipeline_id:\n  pass\n\nThis checking could be a function in https://cs.chromium.org/chromium/infra/appengine/findit/gae_libs/pipelines.py?l\u003d194 too.",
      "range": {
        "startLine": 85,
        "startChar": 6,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c85ff59_08898470",
        "filename": "appengine/findit/pipelines/flake_failure/analyze_flake_pipeline.py",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1119424
      },
      "writtenOn": "2018-05-30T22:03:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18237f07_0c49fcc4",
      "range": {
        "startLine": 85,
        "startChar": 6,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56b57d97_6863c2a2",
        "filename": "appengine/findit/pipelines/flake_failure/analyze_flake_pipeline.py",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1002882
      },
      "writtenOn": "2018-05-30T20:02:50Z",
      "side": 1,
      "message": "Should these two be merged?",
      "range": {
        "startLine": 80,
        "startChar": 2,
        "endLine": 94,
        "endChar": 76
      },
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5667b9b2_143bbcae",
        "filename": "appengine/findit/pipelines/flake_failure/analyze_flake_pipeline.py",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1119424
      },
      "writtenOn": "2018-05-30T22:03:51Z",
      "side": 1,
      "message": "Just to clarify, to merge OnAbort with OnFinalized completely, or just the calls to monitoring merged? If it\u0027s monitoring only, for now I\u0027m thinking not, as we will capture both those that ended in .error and those that ended in pipeline abort. Those with .error should always include those with .abort as well. This way we can differentiate within overall error which were due to bugs in Findit vs those that were not Findit\u0027s fault.\n\nIIUC if there is a pipeline abort, both OnAbort and OnFinalized will be called. OnAbort will set .error, so when OnFinalized() is called .error is checked and will also report to monitoring that .error is present. This ensures .error is always counted, and pipeline abort is always a subset. In my next CL I plan to make all pipelines that have detectable errors (swarming task failed, try job failed, which is not always Findit\u0027s fault) set .error and bail out without causing pipeline aborts so they can be measured separately",
      "parentUuid": "56b57d97_6863c2a2",
      "range": {
        "startLine": 80,
        "startChar": 2,
        "endLine": 94,
        "endChar": 76
      },
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99f5f331_be8a8d0f",
        "filename": "appengine/findit/pipelines/flake_failure/analyze_flake_pipeline.py",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1002882
      },
      "writtenOn": "2018-05-31T23:59:16Z",
      "side": 1,
      "message": "Sorry for the confusion. My question is: should we merge all the code in both method into one place? To be more specific, whether the code within OnAbort should be moved into OnFinalized? Not just monitoring.\n\nMy overall feeling is that having both OnAbort and OnFinalized to deal with error processing is making things complex. For example: it is unclear to me that OnFinalized did check whether .error is set.\n\nFor pipeline, OnFianlized is always being called no matter whether it is aborted or succeeded. OnAbort is ONLY called when it is aborted.\n\nIIUC of the code here, if an analysis is aborted, the analysis will get updated twice: 1) by flake_analysis_util.ReportPotentialErrorToCompleteAnalysis when OnAbort is called; 2) analysis.Update when OnFinalized is called.\nThe second one is redundant.",
      "parentUuid": "5667b9b2_143bbcae",
      "range": {
        "startLine": 80,
        "startChar": 2,
        "endLine": 94,
        "endChar": 76
      },
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb3e17fa_ce3f65e0",
        "filename": "appengine/findit/pipelines/flake_failure/test/analyze_flake_pipeline_test.py",
        "patchSetId": 4
      },
      "lineNbr": 331,
      "author": {
        "id": 1164104
      },
      "writtenOn": "2018-05-30T19:01:34Z",
      "side": 1,
      "message": "I don\u0027t really know much about pipelines, but is there an API to assert that no pipelines are still running at this point?",
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e30c452_124dec89",
        "filename": "appengine/findit/pipelines/flake_failure/test/analyze_flake_pipeline_test.py",
        "patchSetId": 4
      },
      "lineNbr": 331,
      "author": {
        "id": 1119424
      },
      "writtenOn": "2018-05-30T19:09:42Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s necessary, as OnFinalized is a wrapper around pipeline.finalized() which is supposed to be the last thing a pipeline does before fully exiting IIUC",
      "parentUuid": "fb3e17fa_ce3f65e0",
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35a555ab_2f0e4292",
        "filename": "appengine/findit/pipelines/flake_failure/test/analyze_flake_pipeline_test.py",
        "patchSetId": 4
      },
      "lineNbr": 331,
      "author": {
        "id": 1002882
      },
      "writtenOn": "2018-05-31T23:59:16Z",
      "side": 1,
      "message": "Correct. Once finalized is called, no subpipeline is running.",
      "parentUuid": "2e30c452_124dec89",
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8459e7a6_58dde392",
        "filename": "appengine/findit/services/issue_tracking_service.py",
        "patchSetId": 4
      },
      "lineNbr": 243,
      "author": {
        "id": 1002882
      },
      "writtenOn": "2018-05-30T20:02:50Z",
      "side": 1,
      "message": "Please extend this bug to make sure Findit comment on the bug appropriately besides not comment if just filed. e.g. no update to the same bug if last update was within the last X hours.",
      "range": {
        "startLine": 242,
        "startChar": 28,
        "endLine": 243,
        "endChar": 39
      },
      "revId": "0dcbc6e2a0e7bff47638fbe4656133cb0bf6745c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}