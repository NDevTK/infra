#!/usr/bin/env vpython
# [VPYTHON:BEGIN]
# # Third party dependencies.  These are only listed because pylint itself needs
# # them.  Feel free to add/remove anything here.
# python_version: "2"
#
# wheel: <
#   name: "infra/python/wheels/pathlib2-py2_py3"
#   version: "version:2.3.3"
# >
# wheel: <
#   name: "infra/python/wheels/scandir/${platform}_cp27_cp27m"
#   version: "version:1.7"
# >
# wheel: <
#   name: "infra/python/wheels/six-py2_py3"
#   version: "version:1.10.0"
# >
# wheel: <
#   name: "infra/python/wheels/importlib-metadata-py2_py3"
#   version: "version:1.6.0"
# >
# wheel: <
#   name: "infra/python/wheels/contextlib2-py2_py3"
#   version: "version:0.5.5"
# >
# wheel: <
#   name: "infra/python/wheels/configparser-py2_py3"
#   version: "version:3.5.0"
# >
# wheel: <
#   name: "infra/python/wheels/zipp-py2_py3"
#   version: "version:1.2.0"
# >
# [VPYTHON:END]

import os
import shutil
import subprocess
import sys

if len(sys.argv) != 2:
  print('Usage: %s path', sys.argv[0])
  sys.exit(1)

print(sys.executable)
# update permissions
vpython_dir = os.path.dirname(os.path.dirname(os.path.abspath(sys.executable)))
for root, dirs, f in os.walk(vpython_dir):
  for d in dirs:
    os.chmod(os.path.join(root, d), 0o755)

cmd = [sys.executable, '-m', 'pip', 'install', 'virtualenv']
proc = subprocess.Popen(cmd)
proc.communicate()


cmd = [sys.executable, '-m', 'pip', 'install', 'virtualenv']
proc = subprocess.Popen(cmd)
proc.communicate()

cmd = [sys.executable, '-m', 'virtualenv', sys.argv[1]]
proc = subprocess.Popen(cmd)
proc.communicate()

# clean up vpython dir, only used to bootstrap venv
shutil.rmtree(vpython_dir)