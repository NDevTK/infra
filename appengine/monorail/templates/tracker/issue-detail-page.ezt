[define title][issue.local_id][end]
[define category_css]css/ph_detail.css[end]
[include "../framework/master-header.ezt" "showtabs"]

[define any_visible_deleted]false[end]
[for comments]
 [if-any comments.can_delete_bool]
  [if-any comments.is_deleted_bool]
   [define any_visible_deleted]true[end]
  [end]
 [end]
[end]

[if-any page_perms.EditIssue page_perms.EditIssueSummary page_perms.EditIssueStatus page_perms.EditIssueOwner page_perms.EditIssueCc]
  [define offer_make_changes]yes[end]
[else]
  [define offer_make_changes][end]
[end]

<div id="color_control" class="[if-any issue.is_open][else]closed_colors[end]">

<table width="100%" cellpadding="0" cellspacing="0" border="0" class="issuepage" id="meta-container">

<tbody class="collapse"> [# collapse/expand controls undelete-able comments]
 <tr>
  <td nowrap="nowrap" class="vt h3 issuemetaheader" style="min-width:9em">
   [define user_can_star]false[end]
   [if-any page_perms.SetStar]
    [if-any read_only][else]
     [define user_can_star]true[end]
     <a class="star" id="star"
      style="color:[if-any starred]cornflowerblue[else]gray[end]"
      title="[if-any starred]Un-s[else]S[end]tar this issue">
     [if-any starred]&#9733;[else]&#9734;[end]
     </a>
    [end]
   [end]
   <a href="detail?id=[issue.local_id]">Issue [issue.local_id]</a>

   [if-any page_perms.FlagSpam]
     <a class="spamflag" id="flag_spam"
      style="float:right; color:[if-any issue.flagged_spam_bool]red[else]gray[end]"
      title="[if-any issue.flagged_spam_bool]Un-f[else]F[end]lag as spam">
     [if-any issue.flagged_spam_bool]&#9873;[else]&#9872;[end]
     </a>
     <form action="flagspam.do" method="post" id="spam_form" style="display:none">
      <input type="hidden" name="token" value="[flag_spam_token]">
      <input type="hidden" name="id" value="[issue.local_id]">
      <input type="hidden" name="spam" value="[if-any issue.flagged_spam_bool]false[else]true[end]">
    </form>
   [end]
  </td>
  <td width="90%" class="vt issueheader" style="border-right: 2px solid white">
    [if-any issue.flagged_spam_bool]
     <div style="border:1px solid red; background:#fdd; padding:1em">You have reported this issue as spam. To undo this, click the flag again.</div>
    [else][if-any issue.is_spam_bool]
      <div style="border:1px solid red; background:#fdd; padding:1em">
        This issue has been classified as spam.
        Please <a
        href="/p/monorail/issues/entry?template=spam+classification&labels=proj-[projectname]"
        >report incorrect spam classification</a>.
      </div>
    [end][end]
    <span class="h3" style="padding-left:4px">[issue.summary]</span>
  </td>
  <td class="issueheader">
    [if-any flipper.show]
     <div class="pagination">
     [if-any flipper.prev_url]<a href="[flipper.prev_url]" title="Prev">&lsaquo; Prev</a>[else][end]
      [flipper.current] of [flipper.total_count]
     [if-any flipper.next_url]<a href="[flipper.next_url]" title="Next">Next &rsaquo;</a>[else][end]
    </div>[end]
  </td>
 </tr>
 <tr>
  <td nowrap="nowrap" class="issuemetaheader">
    Starred by [issue.star_count]
   [is issue.star_count "1"] user [else] users [end]
  </td>
  <td class="issueheader" style="padding-left:6px; border-right: 2px solid white">
      [if-any first_description.creator_role]<span class="role_label">Project Member</span>[end]
      Reported by
      [include "../framework/user-link.ezt" first_description.creator],
      <span class="date" title="[first_description.date_tooltip] UTC">
        [first_description.date_string]
        [if-any first_description.date_relative]([first_description.date_relative])[end]
      </span>
      [# Note: initial issue description cannot have come via email]
      [if-any page_perms.EditIssue]
      <div style="float:right; margin-right:.3em; text-align:right" class="ichcommands">
        <a href="#" id="edit-desc-btn">Edit description</a>
      </div>
      [end][# page_perms.EditIssue]
  </td>
  <td align="center" nowrap="nowrap" class="issueheader">
   [if-any back_to_list_url]
     <a href="[back_to_list_url]">Back to list</a>
   [end]
  </td>
 </tr>


 <tr>
  <td id="issuemeta">
   [if-any noisy]
    <br>
    Comments by non-members will not trigger notification emails to users who starred this issue.
   [end]
   <div id="meta-float">
   [include "issue-meta-part.ezt" "show make changes below"]

   [is any_visible_deleted "true"]
    <br><br>
    <div style="text-align:right; margin-right:.3em; font-size:90%">
     <a class="ifCollapse toggleCollapse" href="#"
        style="white-space:nowrap">Show deleted comments</a>
     <a class="ifExpand toggleCollapse" href="#"
        style="white-space:nowrap">Hide deleted comments</a>
    </div>
   [end]

   </div>
  </td>
  <td class="vt issuedescription" width="100%" id="cursorarea" colspan="2">
    [include "issue-comments-part.ezt" "show-delete-comment-link"]
  </td>
 </tr>

[if-any read_only][else]
 [if-any logged_in_user][else]
  <tr>
   <td></td>
   <td class="vt issuecomment">
     <div class="issuecommentheader" style="margin-bottom:1em"></div>
     <span class="indicator">&#9658;</span> <a href="[login_url]"
     >Sign in</a> to add a comment
   </td>
  </tr>
 [end]
[end]
</tbody>
</table>
<br>

[include "../framework/footer-script.ezt"]

[define user_can_comment]false[end]
[if-any read_only][else]
 [if-any page_perms.AddIssueComment]
  [include "issue-update-form.ezt"]
  [define user_can_comment]true[end]
 [end]
[end]


</div> [# end color_control]

[# Form used to submit comment soft delete and undelete changes.]
<form name="delcom" action="delComment.do?q=[query]&amp;can=[can]&amp;groupby=[format "url"][groupby][end]&amp;sort=[format "url"][sortspec][end]&amp;colspec=[format "url"][colspec][end]" method="POST">
 <input type="hidden" name="sequence_num" value="">
 <input type="hidden" name="mode" value="">
 <input type="hidden" name="id" value="[issue.local_id]">
 <input type="hidden" name="token" value="[delComment_form_token]">
<input type="hidden" name="hotlist_id" value="[if-any flipper.is_hotlist_flipper][flipper_hotlist_id][end]">
</form>

[# Form used to flag/unflag comments as spam.]
<form name="flagcom" action="flagspam.do" method="post">
 <input type="hidden" name="comment_id" value="">
 <input type="hidden" name="sequence_num" value="">
 <input type="hidden" name="spam" value="">
 <input type="hidden" name="id" value="[issue.local_id]">
 <input type="hidden" name="token" value="[flag_spam_token]">
</form>


<div id="helparea"></div>

<script type="text/javascript" nonce="[nonce]">
runOnLoad(function() {
  _fetchOptions('[projectname]', 'issueOptions',
                CS_env.token, [project.cached_content_timestamp]);
  _fetchUserProjects(false);

  _onload();

  function showDescription(n, changeSelect) {
    for (var i = 1; i <= descCt; i++)
      $('d' + i).style.display = 'none';
    if (changeSelect)
      $('description-select').selectedIndex = n - 1;
    if (n) {
      $('d' + n).style.display = '';
      getParams.desc = n;
      if (window.history && history.replaceState)
        history.replaceState(
            '', '', makeQueryString(getParams) + window.location.hash);
    }
  }

  [if-any multiple_descriptions]
  var descCt = parseInt($('description-select').getAttribute('data-ct'));

  var getParams = function() {
    var params = {};
    var query = window.location.search,
        re = /[?&]?([^=]+)=([^&]*)/g,
        tokens;
    while (tokens = re.exec(query))
      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);
    return params;
  }();

  for (var i = 1; i <= descCt; i++) {
    if ($('desc-link' + i)) {
      $('desc-link' + i).addEventListener('click', function(event) {
        var linkClicked = this.getAttribute('data-num');
        showDescription(linkClicked, true);
      });
    }
  }

  if (getParams.hasOwnProperty('desc')) {
    showDescription(getParams.desc, true);
  } else {
    showDescription(descCt, true);
  }

  function makeQueryString (params) {
    return '?' + Object.keys(params).map(function (key) {
      return encodeURIComponent(key) + '=' + encodeURIComponent(params[[]key]);
    }).join('&');
  }

  $('description-select').addEventListener('change', function(event) {
    showDescription(this.value);
  });
  [else]
  var descCt = 1;
  [end][# multiple_descriptions]

  [if-any page_perms.EditIssue]
  $('edit-desc-btn').addEventListener('click', function (event) {
    showDescription(0); // hide all descriptions
    $('edit-desc-btn').style.display = 'none';
    if ($('description-select'))
      $('description-select').style.display = 'none';
    $('desc_update_form').style.display = '';
  });
  [end][# page_perms.EditIssue]

  function delComment(sequence_num, delete_mode) {
    var r = true;
    if (delete_mode == 1) {
      r = confirm('Delete this comment?');
    }
    if (!r) {
      return false;
    }
    var f = document.forms[[]"delcom"];
    f.sequence_num.value = sequence_num;
    f.mode.value = delete_mode;
    [# TODO(jrobbins): submit in a subframe,XHR or ask user before losing comment in-progress ]
    var loading = $('comment-action-loading-' + sequence_num);
    loading.style.display = 'inline';
    TKR_initialFormValues = TKR_currentFormValues();
    f.submit();
    return false;
  }

  _floatMetadata();

  if ($("star"))
    $("star").addEventListener("click", function (event) {
       _TKR_toggleStar($("star"), "[projectname]", [issue.local_id], null, null, "[set_star_token]");
       _TKR_syncStarIcons($("star"), "star2");
    });

  var delCommentElements = document.getElementsByClassName("delComment");
  for (var i = 0; i < delCommentElements.length; ++i) {
     var el = delCommentElements[[]i];
     el.addEventListener("click", function(event) {
         var sequence = event.target.getAttribute("data-sequence");
         var mode = event.target.getAttribute("data-mode");
         delComment(sequence, mode);
         event.preventDefault();
     });
  }

  function flagComment(comment_id, sequence_num, isSpam) {
    var f = document.forms[[]"flagcom"];
    f.comment_id.value = comment_id;
    f.sequence_num.value = sequence_num;
    f.spam.value = isSpam.toLowerCase() == "false";

    var loading = $('comment-action-loading-' + sequence_num);
    loading.style.display = 'inline';

    TKR_initialFormValues = TKR_currentFormValues();
    f.submit();
    return false;
  }

  var flagCommentElements = document.getElementsByClassName("flagComment");
  for (var i = 0; i < flagCommentElements.length; ++i) {
     var el = flagCommentElements[[]i];
     el.addEventListener("click", function(event) {
         var id = event.target.getAttribute("data-id");
         var sequence = event.target.getAttribute("data-sequence");
         var isSpam = event.target.getAttribute("data-spam");
         flagComment(id, sequence, isSpam);
         event.preventDefault();
     });
  }

  window.onsubmit = function() {
    TKR_initialFormValues = TKR_currentFormValues();
  };

  window.onbeforeunload = function() {
    if (TKR_isDirty()) {
      // This message is ignored in recent versions of Chrome and Firefox.
      return "You have unsaved changes. Leave this page and discard them?";
    }
  };

});
</script>

<script type="text/javascript" defer src="/static/third_party/js/kibbles-1.3.3.comp.js" nonce="[nonce]"></script>
<script type="text/javascript" nonce="[nonce]">
runOnLoad(function() {
  _setupKibblesOnDetailPage(
   [if-any back_to_list_url]'[format "js"][back_to_list_url][end]'[else]'[project_home_url]/issues/list'[end],
   '[project_home_url]/issues/entry',
   '[if-any flipper.show][if-any flipper.prev_url][format "js"][flipper.prev_url][end][end][end]',
   '[if-any flipper.show][if-any flipper.next_url][format "js"][flipper.next_url][end][end][end]',
   '[projectname]', [issue.local_id],
   [user_can_comment], [user_can_star], '[set_star_token]');
});
</script>


[include "../framework/master-footer.ezt"]
