[if-any local_id]
  [define title]Issue [local_id][end]
[else]
  [define title]Monorail[end]
[end]
[include "../framework/polymer-header.ezt"]

[include "../webpack-out/mr-app.ezt"]

<mr-app [if-any logged_in_user]
  userDisplayName="[logged_in_user.email]"[end]
  issueEntryUrl="[issue_entry_url]"
  loginUrl="[login_url]"
  logoutUrl="[logout_url]"
  versionBase="[version_base]"
></mr-app>

[include "../framework/polymer-footer.ezt"]

[if-any local_id]
  <script type="text/javascript" nonce="[nonce]">
    window.addEventListener('load', () => {
      window.getTSMonClient().recordIssueDetailSpaTiming();
    });
  </script>
[end]

<script type="text/javascript" nonce="[nonce]">
  runOnLoad(function() {
    if (typeof(ClientLogger) === "function") {
      let cl = new ClientLogger("issues");
      if (cl.started("new-issue")) {
        cl.logEnd("new-issue", null, 120 * 1000);
      }
      if (cl.started("issue-search")) {
        cl.logEnd("issue-search");
      }
      if (cl.started("issue-update")) {
        cl.logEnd("issue-update", "computer-time", 120 * 1000);
      }
    }
  });
</script>

<script type="text/javascript" nonce="[nonce]">
// TODO(CL): Load in a more proper way.

function handleGapiLoad() {
  console.log('gapi loaded')

  // TODO(CL): Get our own client ID.
  const CLIENT_ID =
    '2574281217-akkmpkflfs419iob0elj17su7dp3c673.apps.googleusercontent.com';
  const SCOPES = 'https://www.googleapis.com/auth/buganizer';

  const authOptions = {client_id: CLIENT_ID, scope: SCOPES, immediate: true};
  gapi.auth.authorize(authOptions, (authResult) => {
    console.log('authResult', authResult)
    if (authResult && !authResult.error) {
      // We good.
      // TODO(CL): Get real bug IDs...
      const bugID = 68881797;
      loadGoogleIssueTrackerIssue(bugID)
    } else {
     // TODO(CL): Figure out failure case.
    }
  });
}

var ISSUE_TRACKER_QA_API_ROOT = 'https://test-issuetracker.corp.googleapis.com';
var DISCOVERY_PATH = '/$discovery/rest';
var ISSUE_TRACKER_API_VERSION = 'v1';

function loadGoogleIssueTrackerIssue(bugID) {
  return new Promise(function(resolve, reject) {
    console.log('attempting to load issue...', bugID)

    const url = ISSUE_TRACKER_QA_API_ROOT + DISCOVERY_PATH;
    const version = ISSUE_TRACKER_API_VERSION;

    gapi.client.load(url, version, () => {
      const request = gapi.client.corp_issuetracker.issues.get({
        'issueId': bugID,
      });
      request.execute((response) => {
        console.log('got response:', response)

        resolve(response);
      });
    });
  });
}
</script>

<script
  src="https://apis.google.com/js/client.js?onload=handleGapiLoad"
  type="text/javascript"
  nonce="[nonce]">
</script>
