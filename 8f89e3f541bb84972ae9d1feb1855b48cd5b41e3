{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2654fb48_3e3a40a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2022-03-29T00:33:11Z",
      "side": 1,
      "message": "Can we get this from inside the Swarming script directly? and/or are we sure we want to filter based on hive?  Can we filter based on physical location instead?\n\nHive is purely a drone queen scheduling concept and does not/should not be used to infer location/functionality/etc.\n\nPre-planning for getting rid of drone queen/twill",
      "revId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffcea92e_5efa1222",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1258805
      },
      "writtenOn": "2022-03-30T22:35:34Z",
      "side": 1,
      "message": "I described the reason why I want to use hive in this doc https://docs.google.com/document/d/1oNtF3Vy16gNNNW0IN5PYmA6g9MwdMEvOTfsIp4x8-fQ/edit?resourcekey\u003d0-sCK0hgXqcHQ5mg5lu3oIMA#heading\u003dh.93no456yrxjq\n\n\u003e Can we filter based on physical location instead?\nI don\u0027t know if that\u0027s possible. The only thing can tell us the location should be the DUT/SU name. But the main problem is that UFS only report aggregated data, so right now the only way is filter by Hive.",
      "parentUuid": "2654fb48_3e3a40a4",
      "revId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c903fb5b_982d496d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2022-03-30T23:33:59Z",
      "side": 1,
      "message": "mm ok.  We will have to change UFS aggregated report anyway, so I guess we can punt that work later when we\u0027re further along twill.",
      "parentUuid": "ffcea92e_5efa1222",
      "revId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2543112_a71a2a31",
        "filename": "go/src/infra/cmd/drone-agent/internal/bot/bot.go",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2022-03-29T00:33:11Z",
      "side": 1,
      "message": "just SKYLAB_HIVE? how about multi dut units?",
      "range": {
        "startLine": 161,
        "startChar": 10,
        "endLine": 161,
        "endChar": 13
      },
      "revId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edd0233e_5329fe7c",
        "filename": "go/src/infra/cmd/drone-agent/internal/bot/bot.go",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1161844
      },
      "writtenOn": "2022-03-30T23:33:59Z",
      "side": 1,
      "message": "ping, hive is per SU not per DUT.",
      "parentUuid": "c2543112_a71a2a31",
      "range": {
        "startLine": 161,
        "startChar": 10,
        "endLine": 161,
        "endChar": 13
      },
      "revId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "8f89e3f541bb84972ae9d1feb1855b48cd5b41e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}